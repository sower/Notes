import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.CgY2496V.js";const u=JSON.parse('{"title":"Spring Boot Starter","description":"","frontmatter":{"title":"Spring Boot Starter","created_at":"2023-06-24T02:32:43.000Z","updated_at":"2023-10-21T12:07:25.000Z","word_count":3240},"headers":[],"relativePath":"CS/Spring Boot Starter.md","filePath":"CS/Spring Boot Starter.md"}'),e={name:"CS/Spring Boot Starter.md"},p=l(`<h2 id="bean-validation" tabindex="-1">Bean Validation <a class="header-anchor" href="#bean-validation" aria-label="Permalink to &quot;Bean Validation&quot;">​</a></h2><p>Java Specification Requests：Java 规范提案，指向JCP(Java Community Process)提出新增一个标准化技术规范的正式请求</p><p>JSR-303 是JAVA EE 6 中的一项子规范，叫做Bean Validation。 <br> <a href="https://hibernate.org/validator/" target="_blank" rel="noreferrer">Hibernate Validator</a> 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。</p><p><strong>spring-boot-starter-validation</strong></p><p>Jakarta Bean Validation constraints</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>@Null</td><td>被标注的元素必须为 null</td></tr><tr><td>@NotNull</td><td>被标注的元素必须不为 null</td></tr><tr><td>@AssertTrue</td><td>被标注的元素必须为 true</td></tr><tr><td>@AssertFalse</td><td>被标注的元素必须为 false</td></tr><tr><td>@Min(value)</td><td>一个数字，其值必须大于等于指定的最小值</td></tr><tr><td>@Max(value)</td><td>一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@DecimalMax(value)</td><td>一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@DecimalMin(value)</td><td>一个数字，其值必须大于等于指定的最小值</td></tr><tr><td>@Size</td><td>被标注的元素的大小必须在指定的范围内</td></tr><tr><td>@Digits（integer，fraction）</td><td>一个数字，其值必须在可接受的范围内；integer 指定整数精度，fraction 指定小数精度</td></tr><tr><td>@Past</td><td>一个过去的日期</td></tr><tr><td>@Future</td><td>一个将来的日期</td></tr><tr><td>@Pattern(value)</td><td>被标注的元素必须符合指定的正则表达式</td></tr></tbody></table><p>Additional constraints</p><table><thead><tr><th>@Email</th><th>字符串，邮箱格式</th></tr></thead><tbody><tr><td>@NotEmpty</td><td>集合，不为空</td></tr><tr><td>@NotBlank</td><td>字符串，不为空字符串</td></tr><tr><td>@Positive</td><td>数字，正数</td></tr><tr><td>@PositiveOrZero</td><td>数字，正数或0</td></tr><tr><td>@Negative</td><td>数字，负数</td></tr><tr><td>@NegativeOrZero</td><td>数字，负数或0</td></tr><tr><td>@PastOrPresent</td><td>过去或者现在</td></tr><tr><td>@Normalized</td><td>标准格式字符串</td></tr><tr><td>@UniqueElements</td><td>集合元素的唯一性</td></tr><tr><td>@URL</td><td>url字符格式</td></tr></tbody></table><ul><li><code>@Valid</code> 嵌套校验</li><li><code>@Validated</code> 分组校验 <ul><li>@GroupSequence 按序校验</li><li>@GroupSequenceProvider</li><li>@ConvertGroup</li></ul></li><li>自定义注解校验： 实现<code>ConstraintValidator</code></li><li>组合校验</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">ConstraintComposition</span><span style="color:#E06C75;">(AND)</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">NotNull</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Pattern</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">regexp</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;.+&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @ReportAsSingleViolation</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Target</span><span style="color:#E06C75;">({ METHOD</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> FIELD })</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Retention</span><span style="color:#E06C75;">(RUNTIME)</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Constraint</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">validatedBy</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> { })</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#ABB2BF;"> @</span><span style="color:#C678DD;">interface</span><span style="color:#E5C07B;"> NotNullAndPattern</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#61AFEF;"> message</span><span style="color:#E06C75;">() </span><span style="color:#C678DD;">default</span><span style="color:#98C379;"> &quot;{javax.validation.constraints.Pattern.message}&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    Class</span><span style="color:#56B6C2;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">[] </span><span style="color:#61AFEF;">groups</span><span style="color:#E06C75;">() </span><span style="color:#C678DD;">default</span><span style="color:#E06C75;"> { }</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    Class</span><span style="color:#56B6C2;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#E06C75;"> extends Payload</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">[] </span><span style="color:#61AFEF;">payload</span><span style="color:#E06C75;">() </span><span style="color:#C678DD;">default</span><span style="color:#E06C75;"> { }</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">OverridesAttribute</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">constraint</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Pattern</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> name</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;regexp&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#61AFEF;"> regex</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>校验信息：在<code>ValidationMessages.properties</code>定义</p><p>校验器</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> Validator</span><span style="color:#61AFEF;"> validator</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">AutowireCapableBeanFactory</span><span style="color:#E06C75;"> springFactory) {</span></span>
<span class="line"><span style="color:#C678DD;">    try</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">ValidatorFactory</span><span style="color:#E06C75;"> factory </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Validation</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">byProvider</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HibernateValidator</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">configure</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 快速失败</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">failFast</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 解决 SpringBoot 依赖注入问题</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">constraintValidatorFactory</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SpringConstraintValidatorFactory</span><span style="color:#ABB2BF;">(springFactory))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">buildValidatorFactory</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> factory</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getValidator</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="spring-security" tabindex="-1"><a href="https://docs.spring.io/spring-security/reference/index.html" target="_blank" rel="noreferrer">Spring Security</a> <a class="header-anchor" href="#spring-security" aria-label="Permalink to &quot;[Spring Security](https://docs.spring.io/spring-security/reference/index.html)&quot;">​</a></h2><ul><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-securitycontextholder" target="_blank" rel="noreferrer">SecurityContextHolder</a> - The SecurityContextHolder is where Spring Security stores the details of who is <a href="https://docs.spring.io/spring-security/reference/features/authentication/index.html#authentication" target="_blank" rel="noreferrer">authenticated</a>.</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-securitycontext" target="_blank" rel="noreferrer">SecurityContext</a> - is obtained from the SecurityContextHolder and contains the Authentication of the currently authenticated user.</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-authentication" target="_blank" rel="noreferrer">Authentication</a> - Can be the input to AuthenticationManager to provide the credentials a user has provided to authenticate or the current user from the SecurityContext.</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-granted-authority" target="_blank" rel="noreferrer">GrantedAuthority</a> - An authority that is granted to the principal on the Authentication (i.e. roles, scopes, etc.)</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-authenticationmanager" target="_blank" rel="noreferrer">AuthenticationManager</a> - the API that defines how Spring Security’s Filters perform <a href="https://docs.spring.io/spring-security/reference/features/authentication/index.html#authentication" target="_blank" rel="noreferrer">authentication</a>.</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-providermanager" target="_blank" rel="noreferrer">ProviderManager</a> - the most common implementation of AuthenticationManager.</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-authenticationprovider" target="_blank" rel="noreferrer">AuthenticationProvider</a> - used by ProviderManager to perform a specific type of authentication.</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-authenticationentrypoint" target="_blank" rel="noreferrer">Request Credentials withAuthenticationEntryPoint</a> - used for requesting credentials from a client (i.e. redirecting to a log in page, sending a WWW-Authenticate response, etc.)</li><li><a href="https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-abstractprocessingfilter" target="_blank" rel="noreferrer">AbstractAuthenticationProcessingFilter</a> - a base Filter used for authentication. This also gives a good idea of the high level flow of authentication and how pieces work together.</li></ul><p>默认用户名、密码和权限在 application.yaml 中配置</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">spring</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">  security</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    user</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">ming</span></span>
<span class="line"><span style="color:#E06C75;">      password</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">123456</span></span>
<span class="line"><span style="color:#E06C75;">      roles</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">admin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 开启注解设置权限</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">EnableGlobalMethodSecurity</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">prePostEnabled</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> true</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> WebSecurityConfig</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> WebSecurityConfigurerAdapter</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 配置密码加密器</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> PasswordEncoder</span><span style="color:#61AFEF;"> passwordEncoder</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BCryptPasswordEncoder</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 配置认证管理器</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    protected</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> configure</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">AuthenticationManagerBuilder</span><span style="color:#E06C75;font-style:italic;"> auth</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        auth</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">inMemoryAuthentication</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">withUser</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;admin&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">passwordEncoder</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">encode</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;123&quot;</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">roles</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;admin&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">and</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">withUser</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;user&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">passwordEncoder</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">encode</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;456&quot;</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">roles</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;user&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 配置安全策略</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    protected</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> configure</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HttpSecurity</span><span style="color:#E06C75;font-style:italic;"> http</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 配置认证</span></span>
<span class="line"><span style="color:#E5C07B;">        http</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 哪个URL为登录页面</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 当发现什么URL时执行登录逻辑</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 成功后跳转到哪里</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">successForwardUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/success&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 失败后跳转到哪里</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">failureForwardUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/fail&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 设置URL的授权问题</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 多个条件取交集</span></span>
<span class="line"><span style="color:#E5C07B;">        http</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">authorizeRequests</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 匹配 / 控制器  permitAll() 不需要被认证就可以访问</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">antMatchers</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">permitAll</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // anyRequest() 所有请求   authenticated() 必须被认证</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">anyRequest</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">authenticated</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //开启记住我功能   cookie  默认保存时间14天</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //自定义接收前端参数，remember为表单中的名字</span></span>
<span class="line"><span style="color:#E5C07B;">        http</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rememberMe</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">rememberMeParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;remember&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 关闭csrf</span></span>
<span class="line"><span style="color:#E5C07B;">        http</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">csrf</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">disable</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><h2 id="spring-data-redis" tabindex="-1"><a href="https://spring.io/projects/spring-data-redis" target="_blank" rel="noreferrer">Spring Data Redis</a> <a class="header-anchor" href="#spring-data-redis" aria-label="Permalink to &quot;[Spring Data Redis](https://spring.io/projects/spring-data-redis)&quot;">​</a></h2><p><a href="https://docs.spring.io/spring-data/data-redis/docs/current/reference/html/#pubsub" target="_blank" rel="noreferrer">Pubsub</a></p><h2 id="redisson" tabindex="-1"><a href="https://github.com/redisson/redisson" target="_blank" rel="noreferrer">Redisson</a> <a class="header-anchor" href="#redisson" aria-label="Permalink to &quot;[Redisson](https://github.com/redisson/redisson)&quot;">​</a></h2><p><a href="https://github.com/redisson/redisson/tree/master/redisson-spring-boot-starter" target="_blank" rel="noreferrer"><strong>redisson-spring-boot-starter</strong></a></p><p><a href="https://github.com/redisson/redisson/wiki/2.-Configuration" target="_blank" rel="noreferrer">Configuration</a></p><p><a href="https://github.com/redisson/redisson/wiki/3.-operations-execution" target="_blank" rel="noreferrer">Operations execution</a></p><h3 id="data-serialization" tabindex="-1"><a href="https://github.com/redisson/redisson/wiki/4.-data-serialization" target="_blank" rel="noreferrer">Data serialization</a> <a class="header-anchor" href="#data-serialization" aria-label="Permalink to &quot;[Data serialization](https://github.com/redisson/redisson/wiki/4.-data-serialization)&quot;">​</a></h3><table><thead><tr><th>Codec class name</th><th>Description</th></tr></thead><tbody><tr><td>org.redisson.codec.Kryo5Codec</td><td><a href="https://github.com/EsotericSoftware/kryo" target="_blank" rel="noreferrer">Kryo 5</a> binary codec <br> (Android compatible) <strong>Default codec</strong></td></tr><tr><td>org.redisson.codec.KryoCodec</td><td><a href="https://github.com/EsotericSoftware/kryo" target="_blank" rel="noreferrer">Kryo 4</a> binary codec</td></tr><tr><td>org.redisson.codec.JsonJacksonCodec</td><td><a href="https://github.com/FasterXML/jackson" target="_blank" rel="noreferrer">Jackson JSON</a> codec. <br> Stores type information in @class field</td></tr><tr><td>org.redisson.codec.TypedJsonJacksonCodec</td><td>Jackson JSON codec which doesn&#39;t store type id (@class field) during encoding and doesn&#39;t require it for decoding</td></tr><tr><td>org.redisson.codec.AvroJacksonCodec</td><td><a href="http://avro.apache.org/" target="_blank" rel="noreferrer">Avro</a> binary json codec</td></tr><tr><td>org.redisson.codec.ProtobufCodec</td><td><a href="https://github.com/protocolbuffers/protobuf" target="_blank" rel="noreferrer">Protobuf</a> codec</td></tr><tr><td>org.redisson.codec.SmileJacksonCodec</td><td><a href="http://wiki.fasterxml.com/SmileFormatSpec" target="_blank" rel="noreferrer">Smile</a> binary json codec</td></tr><tr><td>org.redisson.codec.CborJacksonCodec</td><td><a href="http://cbor.io/" target="_blank" rel="noreferrer">CBOR</a> binary json codec</td></tr><tr><td>org.redisson.codec.MsgPackJacksonCodec</td><td><a href="http://msgpack.org/" target="_blank" rel="noreferrer">MsgPack</a> binary json codec</td></tr><tr><td>org.redisson.codec.IonJacksonCodec</td><td><a href="https://amzn.github.io/ion-docs/" target="_blank" rel="noreferrer">Amazon Ion</a> codec</td></tr><tr><td>org.redisson.codec.SerializationCodec</td><td>JDK Serialization binary codec</td></tr><tr><td>org.redisson.codec.LZ4Codec</td><td><a href="https://github.com/jpountz/lz4-java" target="_blank" rel="noreferrer">LZ4</a> compression codec. <br> Uses Kryo5Codec for serialization by default</td></tr><tr><td>org.redisson.codec.SnappyCodecV2</td><td>Snappy compression codec based on <a href="https://github.com/xerial/snappy-java" target="_blank" rel="noreferrer">snappy-java</a> project. <br> Uses Kryo5Codec for serialization by default</td></tr><tr><td>org.redisson.client.codec.StringCodec</td><td>String codec</td></tr><tr><td>org.redisson.client.codec.LongCodec</td><td>Long codec</td></tr><tr><td>org.redisson.client.codec.ByteArrayCodec</td><td>Byte array codec</td></tr><tr><td>org.redisson.codec.CompositeCodec</td><td>Allows to mix different codecs as one</td></tr></tbody></table><p><a href="https://github.com/redisson/redisson/wiki/5.-data-partitioning-(sharding)" target="_blank" rel="noreferrer">Data partitioning (sharding)</a></p><h3 id="distributed-objects" tabindex="-1"><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects" target="_blank" rel="noreferrer">Distributed objects</a> <a class="header-anchor" href="#distributed-objects" aria-label="Permalink to &quot;[Distributed objects](https://github.com/redisson/redisson/wiki/6.-distributed-objects)&quot;">​</a></h3><ul><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#61-object-holder" target="_blank" rel="noreferrer">Object holder</a></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">RBucket</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AnyObject</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> bucket </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBucket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;anyObject&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">bucket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> AnyObject</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">AnyObject</span><span style="color:#E06C75;"> obj </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> bucket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">bucket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">trySet</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> AnyObject</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">bucket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">compareAndSet</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> AnyObject</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">), </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> AnyObject</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">bucket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAndSet</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> AnyObject</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#615-json-object-holder" target="_blank" rel="noreferrer">JSON object holder</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#62-binary-stream-holder" target="_blank" rel="noreferrer">Binary stream holder</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#63-geospatial-holder" target="_blank" rel="noreferrer">Geospatial holder</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#64-bitset" target="_blank" rel="noreferrer">BitSet</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#65-atomiclong" target="_blank" rel="noreferrer">AtomicLong</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#66-atomicdouble" target="_blank" rel="noreferrer">AtomicDouble</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects#610-longadder" target="_blank" rel="noreferrer">LongAdder</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects#611-doubleadder" target="_blank" rel="noreferrer">DoubleAdder</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#67-topic" target="_blank" rel="noreferrer">PublishSubscribe</a></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">RTopic</span><span style="color:#E06C75;"> topic </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getTopic</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myTopic&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> listenerId </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> topic</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addListener</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SomeObject</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> MessageListener</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">SomeObject</span><span style="color:#ABB2BF;">&gt;() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> channel</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">SomeObject</span><span style="color:#E06C75;font-style:italic;"> message</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //...</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// subscribe to all topics by \`topic*\` pattern</span></span>
<span class="line"><span style="color:#E5C07B;">RPatternTopic</span><span style="color:#E06C75;"> patternTopic </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPatternTopic</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;topic*&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> listenerId </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> patternTopic</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addListener</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Message</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> PatternMessageListener</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Message</span><span style="color:#ABB2BF;">&gt;() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> pattern</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> channel</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Message</span><span style="color:#E06C75;font-style:italic;"> msg</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //...</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// in other thread or JVM</span></span>
<span class="line"><span style="color:#E5C07B;">RTopic</span><span style="color:#E06C75;"> topic </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getTopic</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myTopic&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> clientsReceivedMessage </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> topic</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">publish</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects#613-reliable-topic" target="_blank" rel="noreferrer">Reliable PublishSubscribe</a></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">RReliableTopic</span><span style="color:#E06C75;"> topic </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getReliableTopic</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;anyTopic&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">topic</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addListener</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SomeObject</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> MessageListener</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">SomeObject</span><span style="color:#ABB2BF;">&gt;() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CharSequence</span><span style="color:#E06C75;font-style:italic;"> channel</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">SomeObject</span><span style="color:#E06C75;font-style:italic;"> message</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //...</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// in other thread or JVM</span></span>
<span class="line"><span style="color:#E5C07B;">RReliableTopic</span><span style="color:#E06C75;"> topic </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getReliableTopic</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;anyTopic&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> subscribersReceivedMessage </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> topic</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">publish</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects#614-id-generator" target="_blank" rel="noreferrer">Id generator</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#68-bloom-filter" target="_blank" rel="noreferrer">Bloom filter</a></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">RBloomFilter</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">SomeObject</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> bloomFilter </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBloomFilter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sample&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// initialize bloom filter with </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// expectedInsertions = 55000000</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// falseProbability = 0.03</span></span>
<span class="line"><span style="color:#E5C07B;">bloomFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">tryInit</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">55000000L</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0.03</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">bloomFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;field1Value&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;field2Value&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">bloomFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;field5Value&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;field8Value&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">bloomFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">contains</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;field1Value&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;field8Value&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">bloomFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">count</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects/#68-bloom-filter" target="_blank" rel="noreferrer">HyperLogLog</a></li><li><a href="https://github.com/redisson/redisson/wiki/6.-distributed-objects#612-ratelimiter" target="_blank" rel="noreferrer">RateLimiter</a></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">RRateLimiter</span><span style="color:#E06C75;"> limiter </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getRateLimiter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myLimiter&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Initialization required only once.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 5 permits per 2 seconds</span></span>
<span class="line"><span style="color:#E5C07B;">limiter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">trySetRate</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RateType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">OVERALL</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">RateIntervalUnit</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SECONDS</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// acquire 3 permits or block until they became available       </span></span>
<span class="line"><span style="color:#E5C07B;">limiter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">acquire</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="distributed-collections" tabindex="-1"><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections" target="_blank" rel="noreferrer">Distributed collections</a> <a class="header-anchor" href="#distributed-collections" aria-label="Permalink to &quot;[Distributed collections](https://github.com/redisson/redisson/wiki/7.-distributed-collections)&quot;">​</a></h3><ul><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#71-map" target="_blank" rel="noreferrer">Map</a></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">RMap</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> SomeObject</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> map </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getMap</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;anyMap&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">SomeObject</span><span style="color:#E06C75;"> prevObject </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;123&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">SomeObject</span><span style="color:#E06C75;"> currentObject </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">putIfAbsent</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;323&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">SomeObject</span><span style="color:#E06C75;"> obj </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">remove</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;123&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// use fast* methods when previous value is not required</span></span>
<span class="line"><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fastPut</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fastPutIfAbsent</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;d&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fastRemove</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;b&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">RFuture</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">SomeObject</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> putAsyncFuture </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">putAsync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;321&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">RFuture</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Void</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> fastPutAsyncFuture </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fastPutAsync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;321&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fastPutAsync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;321&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> SomeObject</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fastRemoveAsync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;321&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#72-multimap" target="_blank" rel="noreferrer">Multimap</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#73-set" target="_blank" rel="noreferrer">Set</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#74-sortedset" target="_blank" rel="noreferrer">SortedSet</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#75-scoredsortedset" target="_blank" rel="noreferrer">ScoredSortedSet</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#77-list" target="_blank" rel="noreferrer">List</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#78-queue" target="_blank" rel="noreferrer">Queue</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#79-deque" target="_blank" rel="noreferrer">Deque</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#710-blocking-queue" target="_blank" rel="noreferrer">Blocking Queue</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#711-bounded-blocking-queue" target="_blank" rel="noreferrer">Bounded Blocking Queue</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#712-blocking-deque" target="_blank" rel="noreferrer">Blocking Deque</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#714-delayed-queue" target="_blank" rel="noreferrer">Delayed Queue</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#716-priority-queue" target="_blank" rel="noreferrer">Priority Queue</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#722-transfer-queue" target="_blank" rel="noreferrer">Transfer Queue</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#720-stream" target="_blank" rel="noreferrer">Stream</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#723-time-series" target="_blank" rel="noreferrer">Time Series</a></li><li><a href="https://github.com/redisson/redisson/wiki/7.-distributed-collections/#721-ring-buffer" target="_blank" rel="noreferrer">Ring Buffer</a></li></ul><h3 id="distributed-locks-and-synchronizers" tabindex="-1"><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers" target="_blank" rel="noreferrer">Distributed locks and synchronizers</a> <a class="header-anchor" href="#distributed-locks-and-synchronizers" aria-label="Permalink to &quot;[Distributed locks and synchronizers](https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers)&quot;">​</a></h3><ul><li><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#81-lock" target="_blank" rel="noreferrer">Lock</a></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">RLock</span><span style="color:#E06C75;"> lock </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> redisson</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getLock</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myLock&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// traditional lock method</span></span>
<span class="line"><span style="color:#E5C07B;">lock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// or acquire lock and automatically unlock it after 10 seconds</span></span>
<span class="line"><span style="color:#E5C07B;">lock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lock</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TimeUnit</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SECONDS</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// or wait for lock aquisition up to 100 seconds </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// and automatically unlock it after 10 seconds</span></span>
<span class="line"><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> res </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> lock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">tryLock</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TimeUnit</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SECONDS</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#E06C75;"> (res) {</span></span>
<span class="line"><span style="color:#C678DD;">   try</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">     ...</span></span>
<span class="line"><span style="color:#E06C75;">   } </span><span style="color:#C678DD;">finally</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">       lock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unlock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">   }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#89-spin-lock" target="_blank" rel="noreferrer">Spin Lock</a></p></li><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#810-fenced-lock" target="_blank" rel="noreferrer">Fenced Lock</a></p></li><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#82-fair-lock" target="_blank" rel="noreferrer">Fair Lock</a></p></li><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#83-multilock" target="_blank" rel="noreferrer">MultiLock</a></p></li><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#85-readwritelock" target="_blank" rel="noreferrer">ReadWriteLock</a></p></li><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#86-semaphore" target="_blank" rel="noreferrer">Semaphore</a></p></li><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#87-permitexpirablesemaphore" target="_blank" rel="noreferrer">PermitExpirableSemaphore</a></p></li><li><p><a href="https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#88-countdownlatch" target="_blank" rel="noreferrer">CountDownLatch</a>.</p><br></li></ul><p><a href="https://github.com/redisson/redisson/wiki/9.-distributed-services" target="_blank" rel="noreferrer">Distributed services</a></p><ul><li><a href="https://github.com/redisson/redisson/wiki/9.-distributed-services/#91-remote-service" target="_blank" rel="noreferrer">Remote service</a></li><li><a href="https://github.com/redisson/redisson/wiki/9.-distributed-services/#92-live-object-service" target="_blank" rel="noreferrer">Live Object service</a></li><li><a href="https://github.com/redisson/redisson/wiki/9.-distributed-services/#93-distributed-executor-service" target="_blank" rel="noreferrer">Executor service</a></li><li><a href="https://github.com/redisson/redisson/wiki/9.-distributed-services/#94-distributed-scheduled-executor-service" target="_blank" rel="noreferrer">Scheduler service</a></li><li><a href="https://github.com/redisson/redisson/wiki/9.-distributed-services/#95-distributed-mapreduce-service" target="_blank" rel="noreferrer">MapReduce service</a></li><li><a href="https://github.com/redisson/redisson/wiki/9.-distributed-services/#96-redisearch-service" target="_blank" rel="noreferrer">RediSearch service</a></li></ul><p><a href="https://github.com/redisson/redisson/wiki/10.-additional-features" target="_blank" rel="noreferrer">Additional features</a></p><ul><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#101-operations-with-redis-nodes" target="_blank" rel="noreferrer">Operations with Redis nodes</a></li><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#102-references-to-redisson-objects" target="_blank" rel="noreferrer">References to Redisson objects</a></li><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#103-execution-batches-of-commands" target="_blank" rel="noreferrer">Execution batches of commands</a></li><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#104-transactions" target="_blank" rel="noreferrer">Transactions</a></li><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#105-xa-transactions" target="_blank" rel="noreferrer">XA Transactions</a></li><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#106-scripting" target="_blank" rel="noreferrer">Scripting</a></li><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#107-functions" target="_blank" rel="noreferrer">Functions</a></li><li><a href="https://github.com/redisson/redisson/wiki/10.-additional-features/#108-low-level-redis-client" target="_blank" rel="noreferrer">Low level Redis client</a></li></ul><p><a href="https://github.com/redisson/redisson/wiki/11.-Redis-commands-mapping" target="_blank" rel="noreferrer">Redis commands mapping</a></p><p><a href="https://github.com/redisson/redisson/wiki/12.-Standalone-node" target="_blank" rel="noreferrer">Standalone node</a></p><p><a href="https://github.com/redisson/redisson/wiki/13.-Tools" target="_blank" rel="noreferrer">Tools</a></p><p><a href="https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks" target="_blank" rel="noreferrer">Integration with frameworks</a></p><h2 id="spring-cache" tabindex="-1"><a href="https://docs.spring.io/spring-framework/docs/current/reference/html/integration.html#cache" target="_blank" rel="noreferrer">Spring Cache</a> <a class="header-anchor" href="#spring-cache" aria-label="Permalink to &quot;[Spring Cache](https://docs.spring.io/spring-framework/docs/current/reference/html/integration.html#cache)&quot;">​</a></h2><p>spring-boot-starter-cache</p><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>Cache</td><td>缓存接口，定义缓存操作。实现有：RedisCache、EhCacheCache、ConcurrentMapCache等</td></tr><tr><td>CacheManager</td><td>缓存管理器，管理各种缓存（cache）组件</td></tr><tr><td>@Cacheable</td><td>主要针对方法配置，能够根据方法的请求参数对其进行缓存</td></tr><tr><td>@CacheEvict</td><td>清空缓存</td></tr><tr><td>@CachePut</td><td>保证方法被调用，又希望结果被缓存。与@Cacheable区别在于是否每次都调用方法，常用于更新</td></tr><tr><td>@Caching</td><td>让一个类或方法上定义多个cache相关的注解</td></tr><tr><td>@EnableCaching</td><td>开启基于注解的缓存</td></tr><tr><td>keyGenerator</td><td>缓存数据时key生成策略</td></tr><tr><td>serialize</td><td>缓存数据时value序列化策略</td></tr><tr><td>@CacheConfig</td><td>统一配置本类的缓存注解的属性</td></tr></tbody></table><p>SpEL上下文数据</p><table><thead><tr><th>名称</th><th>位置</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>methodName</td><td>root对象</td><td>当前被调用的方法名</td><td>#root.methodname</td></tr><tr><td>method</td><td>root对象</td><td>当前被调用的方法</td><td>#root.method.name</td></tr><tr><td>target</td><td>root对象</td><td>当前被调用的目标对象实例</td><td>#root.target</td></tr><tr><td>targetClass</td><td>root对象</td><td>当前被调用的目标对象的类</td><td>#root.targetClass</td></tr><tr><td>args</td><td>root对象</td><td>当前被调用的方法的参数列表</td><td>#root.args[0]</td></tr><tr><td>caches</td><td>root对象</td><td>当前方法调用使用的缓存列表</td><td>#root.caches[0].name</td></tr><tr><td>Argument Name</td><td>执行上下文</td><td>当前被调用的方法的参数，如findArtisan(Artisan artisan)，可以通过#artsian.id获得参数</td><td>#artsian.id</td></tr><tr><td>result</td><td>执行上下文</td><td>法执行后的返回值（仅当方法执行后的判断有效，如 unless cacheEvict的beforeInvocation=false）</td><td>#result</td></tr></tbody></table><h2 id="spring-websocket" tabindex="-1">spring websocket <a class="header-anchor" href="#spring-websocket" aria-label="Permalink to &quot;spring websocket&quot;">​</a></h2><h3 id="javax-websocket" tabindex="-1">javax.websocket <a class="header-anchor" href="#javax-websocket" aria-label="Permalink to &quot;javax.websocket&quot;">​</a></h3><ul><li>@ServerEndpoint</li><li>@ClientEndpoint</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Configuration</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">proxyBeanMethods</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> false</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> JavaxWebSocketConfiguration</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> ServerEndpointExporter</span><span style="color:#61AFEF;"> serverEndpointExporter</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> ServerEndpointExporter</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Component</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">ServerEndpoint</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;/websocket/{type}&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> WebSocketServer</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">OnOpen</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onOpen</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Session</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">EndpointConfig</span><span style="color:#E06C75;font-style:italic;"> config</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                       @</span><span style="color:#E5C07B;">PathParam</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;type&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> type</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //连接建立</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">OnClose</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onClose</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Session</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">CloseReason</span><span style="color:#E06C75;font-style:italic;"> reason</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //连接关闭</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">OnMessage</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Session</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> message</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //接收文本信息</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">OnMessage</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Session</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">PongMessage</span><span style="color:#E06C75;font-style:italic;"> message</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //接收pong信息</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">OnMessage</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Session</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ByteBuffer</span><span style="color:#E06C75;font-style:italic;"> message</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //接收二进制信息，也可以用byte[]接收</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">OnError</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onError</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Session</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Throwable</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //异常处理</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h3 id="spring-boot-starter-websocket" tabindex="-1">spring-boot-starter-websocket <a class="header-anchor" href="#spring-boot-starter-websocket" aria-label="Permalink to &quot;spring-boot-starter-websocket&quot;">​</a></h3><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">EnableWebSocket</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> ServletWebSocketServerConfigurer</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> WebSocketConfigurer</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> registerWebSocketHandlers</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> WebSocketHandlerRegistry</span><span style="color:#E06C75;font-style:italic;"> registry</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        registry</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //添加处理器到对应的路径</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">addHandler</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> ServletWebSocketServerHandler</span><span style="color:#ABB2BF;">(), </span><span style="color:#98C379;">&quot;/websocket&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //添加握手拦截器</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">addInterceptors</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> ServletWebSocketHandshakeInterceptor</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">setAllowedOrigins</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> ServletWebSocketHandshakeInterceptor</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> HandshakeInterceptor</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">        public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> beforeHandshake</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServerHttpRequest</span><span style="color:#E06C75;font-style:italic;"> request</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ServerHttpResponse</span><span style="color:#E06C75;font-style:italic;"> response</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">WebSocketHandler</span><span style="color:#E06C75;font-style:italic;"> wsHandler</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">attributes</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //握手之前</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //继续握手返回true, 中断握手返回false</span></span>
<span class="line"><span style="color:#C678DD;">            return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">        public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> afterHandshake</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServerHttpRequest</span><span style="color:#E06C75;font-style:italic;"> request</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ServerHttpResponse</span><span style="color:#E06C75;font-style:italic;"> response</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">WebSocketHandler</span><span style="color:#E06C75;font-style:italic;"> wsHandler</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Exception</span><span style="color:#E06C75;font-style:italic;"> exception</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //握手之后</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> ServletWebSocketServerHandler</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> WebSocketHandler</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> afterConnectionEstablished</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> WebSocketSession</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //连接建立</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> handleMessage</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> WebSocketSession</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, @</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> WebSocketMessage</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //接收消息</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> handleTransportError</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> WebSocketSession</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, @</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> Throwable</span><span style="color:#E06C75;font-style:italic;"> exception</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //异常处理</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> afterConnectionClosed</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> WebSocketSession</span><span style="color:#E06C75;font-style:italic;"> session</span><span style="color:#ABB2BF;">, @</span><span style="color:#E5C07B;">NonNull</span><span style="color:#E5C07B;"> CloseStatus</span><span style="color:#E06C75;font-style:italic;"> closeStatus</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //连接关闭</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> supportsPartialMessages</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //是否支持接收不完整的消息</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>支持</p><ul><li><a href="https://stomp.github.io/index.html" target="_blank" rel="noreferrer">Simple (or Streaming) Text Orientated Messaging Protocol</a> 简单(流)文本定向消息协议</li><li><a href="https://github.com/sockjs/sockjs-protocol" target="_blank" rel="noreferrer">SockJS</a></li></ul><h2 id="spring-data-rest" tabindex="-1"><a href="https://spring.io/projects/spring-data-rest" target="_blank" rel="noreferrer">Spring Data REST</a> <a class="header-anchor" href="#spring-data-rest" aria-label="Permalink to &quot;[Spring Data REST](https://spring.io/projects/spring-data-rest)&quot;">​</a></h2><p>Annoation</p><ul><li>@RepositoryRestResource</li><li>@RestResource(exported = false)</li><li>@Projection</li><li>@RepositoryEventHandler</li><li>@BasePathAwareController</li></ul><p><strong>Events</strong></p><ul><li>BeforeCreateEvent</li><li>AfterCreateEvent</li><li>BeforeSaveEvent</li><li>AfterSaveEvent</li><li>BeforeLinkSaveEvent</li><li>AfterLinkSaveEvent</li><li>BeforeDeleteEvent</li><li>AfterDeleteEvent</li></ul><h2 id="quartz" tabindex="-1"><a href="https://github.com/quartz-scheduler/quartz" target="_blank" rel="noreferrer">Quartz</a> <a class="header-anchor" href="#quartz" aria-label="Permalink to &quot;[Quartz](https://github.com/quartz-scheduler/quartz)&quot;">​</a></h2><ul><li>Scheduler 和调度程序交互的主要API</li><li>Job 调度器调度的任务组件接口</li><li>JobDetail Job实例，包含了该实例的执行计划和所需要的数据</li><li>Trigger 触发器，定义了一个触发策略</li></ul><table><thead><tr><th>触发器</th><th>适用场景</th></tr></thead><tbody><tr><td>SimpleTrigger</td><td>简单触发器，适用于 按指定的时间间隔执行多少次任务的情况</td></tr><tr><td>CronTrigger</td><td>Cron触发器，通过Cron表达式来控制任务的执行时间</td></tr><tr><td>DailyTimeIntervalTrigger</td><td>日期触发器，在给定的时间范围内或指定的星期内以秒、分钟或者小时为周期进行重复的情况</td></tr><tr><td>CalendarIntervalTrigger</td><td>日历触发器，根据一个给定的日历时间进行重复</td></tr></tbody></table><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> QuartzTest</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 你需要在start和shutdown之间执行你的任务。</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 从工厂中获取Scheduler示例</span></span>
<span class="line"><span style="color:#E5C07B;">            Scheduler</span><span style="color:#E06C75;"> scheduler</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> StdSchedulerFactory</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getDefaultScheduler</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 开始</span></span>
<span class="line"><span style="color:#E5C07B;">            scheduler</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 定义Job，并将其绑定到HelloJob类中</span></span>
<span class="line"><span style="color:#E5C07B;">            JobDetail</span><span style="color:#E06C75;"> job</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JobBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newJob</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HelloJob</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">withIdentity</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;job1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;group1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// name 和 group</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">usingJobData</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;username&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;snow&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 置入JobDataMap</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">usingJobData</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;20&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">withDescription</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;desc-demo&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 触发Job执行，每30s执行一次，直到22：00</span></span>
<span class="line"><span style="color:#E5C07B;">            Trigger</span><span style="color:#E06C75;"> trigger</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> TriggerBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newTrigger</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">withIdentity</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;trigger1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;group1&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">startNow</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 立即开始</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">withSchedule</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SimpleScheduleBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">simpleSchedule</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                            .</span><span style="color:#61AFEF;">withIntervalInSeconds</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                            .</span><span style="color:#61AFEF;">repeatForever</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">endAt</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">dateOf</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 告诉 quartz 使用trigger来调度job</span></span>
<span class="line"><span style="color:#E5C07B;">            scheduler</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">scheduleJob</span><span style="color:#ABB2BF;">(job, trigger);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 关闭，线程终止</span></span>
<span class="line"><span style="color:#E5C07B;">            scheduler</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">shutdown</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">SchedulerException</span><span style="color:#E06C75;font-style:italic;"> se</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">            se</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Slf4j</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> HelloJob</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> Job</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> execute</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;"> context</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> JobExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 从context中获取属性</span></span>
<span class="line"><span style="color:#E5C07B;">        JobDetail</span><span style="color:#E06C75;"> jobDetail</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> context</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getJobDetail</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        JobKey</span><span style="color:#E06C75;"> key</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> jobDetail</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getKey</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        Class</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> Job</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">jobClass</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> jobDetail</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getJobClass</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        String</span><span style="color:#E06C75;"> description</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> jobDetail</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getDescription</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        JobDataMap</span><span style="color:#E06C75;"> jobDataMap</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> jobDetail</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getJobDataMap</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        String</span><span style="color:#E06C75;"> username</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> jobDataMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;username&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        int</span><span style="color:#E06C75;"> age</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> jobDataMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getIntValue</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;age&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        log</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">JobKey : {},</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;"> JobClass : {},</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;"> JobDesc : {},</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;"> username : {},</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;"> age : {}&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                key, </span><span style="color:#E5C07B;">jobClass</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getName</span><span style="color:#ABB2BF;">(), description, username, age);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>spring-boot-starter-quartz</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Slf4j</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> DemoJob</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> QuartzJobBean</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    protected</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> executeInternal</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;"> jobExecutionContext</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> JobExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        String</span><span style="color:#E06C75;"> now</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> DateTimeFormatter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ofPattern</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">        log</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;当前的时间: &quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#ABB2BF;"> now);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>调度器Scheduler绑定</p><ul><li>Bean自动配置</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> QuartzConfig</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;">  public</span><span style="color:#E5C07B;"> JobDetail</span><span style="color:#61AFEF;"> jobDetail1</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> JobBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newJob</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DemoJob</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">withIdentity</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;demo 01&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">withDescription</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;demo job test&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 任务描述</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">storeDurably</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 每次任务执行后进行存储</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;">  public</span><span style="color:#E5C07B;"> Trigger</span><span style="color:#61AFEF;"> trigger1</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 简单的调度计划的构造器</span></span>
<span class="line"><span style="color:#E5C07B;">    SimpleScheduleBuilder</span><span style="color:#E06C75;"> scheduleBuilder</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> SimpleScheduleBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">simpleSchedule</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">withIntervalInSeconds</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 频率</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">repeatForever</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 次数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> TriggerBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newTrigger</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">forJob</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">jobDetail1</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">// 绑定工作任务</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">withIdentity</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;demo 01 Trigger&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">withSchedule</span><span style="color:#ABB2BF;">(scheduleBuilder)</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><ul><li>手动配置</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Component</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> JobInit</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> ApplicationRunner</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> ID </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;DEMO&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> Scheduler</span><span style="color:#E06C75;"> scheduler</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> run</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ApplicationArguments</span><span style="color:#E06C75;font-style:italic;"> args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        JobDetail</span><span style="color:#E06C75;"> jobDetail</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JobBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newJob</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DemoJob</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">withIdentity</span><span style="color:#ABB2BF;">(ID </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &quot; 01&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">storeDurably</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#E5C07B;">        CronScheduleBuilder</span><span style="color:#E06C75;"> scheduleBuilder</span><span style="color:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#E5C07B;">                CronScheduleBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cronSchedule</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;0/5 * * * * ? *&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 创建任务触发器</span></span>
<span class="line"><span style="color:#E5C07B;">        Trigger</span><span style="color:#E06C75;"> trigger</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> TriggerBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newTrigger</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">forJob</span><span style="color:#ABB2BF;">(jobDetail)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">withIdentity</span><span style="color:#ABB2BF;">(ID </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &quot; 01Trigger&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">withSchedule</span><span style="color:#ABB2BF;">(scheduleBuilder)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">startNow</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">//立即執行一次任務</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 手动将触发器与任务绑定到调度器内</span></span>
<span class="line"><span style="color:#E5C07B;">        scheduler</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">scheduleJob</span><span style="color:#ABB2BF;">(jobDetail, trigger);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><strong>数据库方式存储任务信息</strong> <br> yml配置</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">spring</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  # Quartz 的配置，对应 QuartzProperties 配置类</span></span>
<span class="line"><span style="color:#E06C75;">  quartz</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    job-store-type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">jdbc</span><span style="color:#7F848E;font-style:italic;"> # Job 存储器类型。默认为 memory 表示内存</span></span>
<span class="line"><span style="color:#E06C75;">    auto-startup</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#7F848E;font-style:italic;"> # Quartz 是否自动启动</span></span>
<span class="line"><span style="color:#E06C75;">    startup-delay</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#7F848E;font-style:italic;"> # 延迟 N 秒启动</span></span>
<span class="line"><span style="color:#E06C75;">    wait-for-jobs-to-complete-on-shutdown</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#7F848E;font-style:italic;"> # 应用关闭时，是否等待定时任务执行完成。默认false</span></span>
<span class="line"><span style="color:#E06C75;">    overwrite-existing-jobs</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#7F848E;font-style:italic;"> # 是否覆盖已有 Job 的配置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 添加 Quartz Scheduler 附加属性</span></span>
<span class="line"><span style="color:#E06C75;">    properties</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      org</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">        quartz</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          scheduler</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">            instanceName</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">clusteredScheduler</span></span>
<span class="line"><span style="color:#E06C75;">            instanceId</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">AUTO</span></span>
<span class="line"><span style="color:#E06C75;">          jobStore</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">            class</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">org.springframework.scheduling.quartz.LocalDataSourceJobStore</span></span>
<span class="line"><span style="color:#E06C75;">            driverDelegateClass</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span>
<span class="line"><span style="color:#E06C75;">            tablePrefix</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">QRTZ_</span></span>
<span class="line"><span style="color:#E06C75;">            isClustered</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#E06C75;">            clusterCheckinInterval</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10000</span></span>
<span class="line"><span style="color:#E06C75;">            useProperties</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#E06C75;">          threadPool</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">            class</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">org.quartz.simpl.SimpleThreadPool</span><span style="color:#7F848E;font-style:italic;"> # 线程池类型</span></span>
<span class="line"><span style="color:#E06C75;">            threadCount</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10</span><span style="color:#7F848E;font-style:italic;">  # 线程池大小 默认为 10</span></span>
<span class="line"><span style="color:#E06C75;">            threadPriority</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span></span>
<span class="line"><span style="color:#E06C75;">            threadsInheritContextClassLoaderOfInitializingThread</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><table><thead><tr><th>表名</th><th>解释</th></tr></thead><tbody><tr><td>QRTZ_CALENDARS</td><td>以 Blob 类型存储 Quartz 的 Calendar 信息</td></tr><tr><td>QRTZ_CRON_TRIGGERS</td><td>存储 Cron Trigger，包括 Cron 表达式和时区信息</td></tr><tr><td>QRTZ_FIRED_TRIGGERS</td><td>存储与已触发的 Trigger 相关的状态信息，以及相联 Job 的执行信息</td></tr><tr><td>QRTZ_PAUSED_TRIGGER_GRPS</td><td>存储已暂停的 Trigger 组的信息</td></tr><tr><td>QRTZ_SCHEDULER_STATE</td><td>存储少量的有关 Scheduler 的状态信息，和别的 Scheduler 实例(假如是用于一个集群中)</td></tr><tr><td>QRTZ_LOCKS</td><td>存储程序的悲观锁的信息</td></tr><tr><td>QRTZ_JOB_DETAILS</td><td>存储每一个已配置的 Job 的详细信息</td></tr><tr><td>QRTZ_SIMPLE_TRIGGERS</td><td>存储简单的 Trigger，包括重复次数，间隔，以及已触的次数</td></tr><tr><td>QRTZ_BLOG_TRIGGERS</td><td>Trigger 作为 Blob 类型存储(用于 Quartz 用户用 JDBC 创建他们自己定制的 Trigger 类型，JobStore 并不知道如何存储实例的时候)</td></tr><tr><td>QRTZ_TRIGGER_LISTENERS</td><td>存储已配置的 TriggerListener 的信息</td></tr><tr><td>QRTZ_TRIGGERS</td><td>存储已配置的 Trigger 的信息</td></tr></tbody></table>`,86),o=[p];function r(t,c,i,B,y,b){return a(),n("div",null,o)}const F=s(e,[["render",r]]);export{u as __pageData,F as default};
