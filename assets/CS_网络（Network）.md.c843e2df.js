import{_ as t,c as r,o as e,a}from"./app.6a0e111d.js";const d="/Notes/assets/1643807418041-e22d909e-f6e6-4703-8ac8-18b51c69511d.c7112a28.png",s="/Notes/assets/1643807418142-0a6801cb-34bd-44f2-84dc-247bd1f6a749.9e5382f3.jpeg",n="/Notes/assets/1643807418256-bd6af272-937f-46f2-a949-7118465d2a84.0b85eb59.jpeg",l="/Notes/assets/1643807418368-bc9bdc7a-1ba9-4127-9c1a-9caa82c50548.8e28813b.jpeg",i="/Notes/assets/1643807418476-ff68797c-e5b8-42f6-ae3c-fddca4aef771.4538dd31.png",o="/Notes/assets/1643807418563-2acecf30-91bd-44ad-97f5-edfa1591e8e6.068f0b69.png",p="/Notes/assets/1643807418652-ce150b6b-602b-4d29-aa39-8061b41a39c5.0cb9ded6.gif",h="/Notes/assets/1643807418743-b61d00a8-91f3-43b9-8a90-54ad19d97512.ebaff078.jpeg",m=JSON.parse('{"title":"网络（Network）","description":"","frontmatter":{"title":"网络（Network）","created_at":"2022-02-02T13:10:18.000Z","updated_at":"2022-03-03T16:03:15.000Z","word_count":18960},"headers":[{"level":2,"title":"—— 网络（Network）——","slug":"——-网络-network-——","link":"#——-网络-network-——","children":[]},{"level":2,"title":"互联网协议套件（Internet Protocol Suite，IPS）","slug":"互联网协议套件-internet-protocol-suite-ips","link":"#互联网协议套件-internet-protocol-suite-ips","children":[]},{"level":2,"title":"网络结构","slug":"网络结构","link":"#网络结构","children":[]},{"level":2,"title":"应用层（Application layer）","slug":"应用层-application-layer","link":"#应用层-application-layer","children":[{"level":3,"title":"HTTP","slug":"http","link":"#http","children":[]},{"level":3,"title":"HTTPS","slug":"https","link":"#https","children":[]},{"level":3,"title":"SMTP","slug":"smtp","link":"#smtp","children":[]},{"level":3,"title":"POP","slug":"pop","link":"#pop","children":[]},{"level":3,"title":"IMAP","slug":"imap","link":"#imap","children":[]},{"level":3,"title":"FTP","slug":"ftp","link":"#ftp","children":[]},{"level":3,"title":"SSH","slug":"ssh","link":"#ssh","children":[]},{"level":3,"title":"DHCP","slug":"dhcp","link":"#dhcp","children":[]},{"level":3,"title":"DNS","slug":"dns","link":"#dns","children":[]},{"level":3,"title":"SOCKS","slug":"socks","link":"#socks","children":[]}]},{"level":2,"title":"传输层（Transport Layer）","slug":"传输层-transport-layer","link":"#传输层-transport-layer","children":[{"level":3,"title":"TCP","slug":"tcp","link":"#tcp","children":[]},{"level":3,"title":"UDP","slug":"udp","link":"#udp","children":[]},{"level":3,"title":"TLS / SSL","slug":"tls-ssl","link":"#tls-ssl","children":[]}]},{"level":2,"title":"网络层（Network Layer）","slug":"网络层-network-layer","link":"#网络层-network-layer","children":[{"level":3,"title":"IP","slug":"ip","link":"#ip","children":[]},{"level":3,"title":"ICMP","slug":"icmp","link":"#icmp","children":[]}]},{"level":2,"title":"链路层（link layer）","slug":"链路层-link-layer","link":"#链路层-link-layer","children":[{"level":3,"title":"MAC","slug":"mac","link":"#mac","children":[]},{"level":3,"title":"ARP","slug":"arp","link":"#arp","children":[]}]},{"level":2,"title":"网络标准","slug":"网络标准","link":"#网络标准","children":[{"level":3,"title":"会话（Session）","slug":"会话-session","link":"#会话-session","children":[]},{"level":3,"title":"URI","slug":"uri","link":"#uri","children":[]},{"level":3,"title":"MIME","slug":"mime","link":"#mime","children":[]},{"level":3,"title":"Port","slug":"port","link":"#port","children":[]}]},{"level":2,"title":"CLI","slug":"cli","link":"#cli","children":[{"level":3,"title":"PING","slug":"ping","link":"#ping","children":[]},{"level":3,"title":"Tracert","slug":"tracert","link":"#tracert","children":[]},{"level":3,"title":"pathping","slug":"pathping","link":"#pathping","children":[]},{"level":3,"title":"nslookup","slug":"nslookup","link":"#nslookup","children":[]},{"level":3,"title":"netstat","slug":"netstat","link":"#netstat","children":[]}]},{"level":2,"title":"网络设备","slug":"网络设备","link":"#网络设备","children":[]}],"relativePath":"CS/网络（Network）.md"}'),c={name:"CS/网络（Network）.md"},b=a('<h2 id="——-网络-network-——" tabindex="-1">—— 网络（Network）—— <a class="header-anchor" href="#——-网络-network-——" aria-hidden="true">#</a></h2><p><strong>互联网</strong>（Internet）：<a href="https://zh.wikipedia.org/wiki/20%E4%B8%96%E7%B4%80" target="_blank" rel="noreferrer">20世纪</a>末期兴起电脑网络与电脑网络之间所串连成的庞大网络系统。 <br> 万维网是一个由许多互相链接的超文本组成的系统，通过互联网访问。是互联网的一项服务</p><p>局域网（Local Area Network，LAN）：又称内网。指覆盖局部区域（如办公室或楼层）的<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">计算机网络</a>。 <br> 广域网（Wide Area Network，WAN）：又称外网、公网。是连接不同地区<a href="https://zh.wikipedia.org/wiki/%E5%B1%80%E5%9F%9F%E7%BD%91" target="_blank" rel="noreferrer">局域网</a>或城域网计算机通信的远程网。</p><p>VPN（Virtual Private Network，虚拟私人网络）：一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。它利用<a href="https://zh.wikipedia.org/wiki/%E9%9A%A7%E9%81%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="noreferrer">隧道协议</a>（Tunneling Protocol）来达到发送端认证、消息保密与准确性等功能。 <br> 在公用网络上建立专用网络，进行加密通讯。VPN网关通过对数据包的加密和数据包目标地址的转换实现远程访问。</p><p><strong>(网络)代理</strong>（Proxy）：一种特殊的网络服务，允许一个<a href="https://zh.wikipedia.org/w/index.php?title=%E7%BD%91%E7%BB%9C%E7%BB%88%E7%AB%AF&amp;action=edit&amp;redlink=1" target="_blank" rel="noreferrer">网络终端</a>（一般为客户端）通过这个服务与另一个网络终端（一般为服务器）进行非直接的连接。 <br> <strong>Wi-Fi</strong>（wireless fidelity，无线网络/热点）一个基于<a href="https://zh.wikipedia.org/wiki/IEEE_802.11" target="_blank" rel="noreferrer">IEEE 802.11</a>标准的无线局域网技术。</p><table><thead><tr><th>频段</th><th>2.4G</th><th>5G</th></tr></thead><tbody><tr><td>优点</td><td>信号频率低，在空气或障碍物中传播时衰减较小，传播距离更远。</td><td>信号频宽较宽，无线环境比较干净，干扰少，网速稳定，且支持更高的无线速率。</td></tr><tr><td>缺点</td><td>信号频宽较窄，家电、无线设备大多使用2.4G频段，无线环境更加拥挤，干扰较大。</td><td>信号频率较高，在空气或障碍物中传播时衰减较大，覆盖距离一般比2.4G信号小。</td></tr></tbody></table><p><strong>SSID</strong>（Service Set Identifier，服务集标识符）：一个或一组基础架构模式<a href="https://zh.wikipedia.org/wiki/%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">无线网络</a>的标识</p><ul><li>基本服务集标识符（BSSID）：AP的数据链路层的MAC地址</li><li>扩展服务集定标识符（ESSID）：无线网络的名称（一个最长32字节区分大小写的字符串）</li></ul><p><strong>WAP</strong>（Wireless Access Point，无线接入点）：<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E8%85%A6%E7%B6%B2%E7%B5%A1" target="_blank" rel="noreferrer">电脑网络</a>中一种连接无线网络至有线网络（以太网）的设备，又称为无线基站</p><p>WPS（Wi-Fi Protected Setup，<strong>Wi-Fi保护设置</strong>）是一个<a href="https://zh.wikipedia.org/wiki/%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">无线网络</a>安全标准，旨在让家庭用户使用无线网络时简化加密步骤。 <br> <strong>WPA</strong>（Wi-Fi Protected Access，Wi-Fi访问保护）：一种保护<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E7%B7%9A%E7%B6%B2%E8%B7%AF" target="_blank" rel="noreferrer">无线网络</a>（Wi-Fi）访问安全的技术标准。</p><ul><li>胖AP（FAT）：常见的无线路由器，一般具备WAN、LAN两种接口，支持地址转换（NAT）功能，有自己的管理系统、DHCP服务等，需要每台AP分别进行设置。</li><li>瘦AP（FIT）：本身没有管理系统，需要专门的设备（无线控制器）来统一管理、下发数据等集中管理设备，在AP数量大的情况下，及大简化了管理工作。</li></ul><p>无线终端切换信号的规则：无线终端会设置一个阈值，根据当前链路的情况，如信号强度、信噪比以及其它的通信参数来判断当前链路的质量，并决定是否需要切断当前的AP，来寻找其它可用AP。</p><p><strong>漫游</strong>：一台无线终端设备（手机、电脑等），随着位置的移动，经过两个AP的各自覆盖区域与重叠区域的过程，提供不中断的网络服务</p><ul><li>有缝漫游：由多个无线路由器组成的无线网络，无线终端在各个路由器中移动时，不一定会切换到较强的无线路由器上，自动切换信号的时机取决于无线终端的本身。要么就只能手动来切换信号，切换信号时，有明显中断，可能在1s-5s左右。</li><li>无缝漫游：通过AC管理系统，设置RSSI阈值、强制下线、禁止接入、计算信号切换时机等条件下，才能达到快速漫游，信号切换时间在20ms左右，减少用户感知以及丢包率等。 <ul><li>无线AP必须设置为相同的SSID。</li><li>必须采用相同的WEP或WPA加密。</li><li>无线AP与无线客户端必须处于同一VLAN、同一IP地址段。</li></ul></li></ul><p>快速漫游协议 802.11k/v/r</p><p><strong>以太网</strong>（Ethernet）是一种<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA" target="_blank" rel="noreferrer">计算机</a>局域网技术。 <br> <strong>蜂窝网络</strong>（Cellular network），又称移动网络（mobile network）是一种<a href="https://zh.wikipedia.org/wiki/%E7%A7%BB%E5%8A%A8%E9%80%9A%E4%BF%A1" target="_blank" rel="noreferrer">移动通信</a>硬件架构，分为模拟蜂窝网络和数字蜂窝网络。 <br> <strong>蓝牙</strong>（Bluetooth），一种<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E7%B7%9A%E9%80%9A%E8%A8%8A" target="_blank" rel="noreferrer">无线通讯</a>技术标准，用来让固定与移动设备，在短距离间交换资料，以形成个人局域网（PAN）。 <br> NFC（Near-field communication，<strong>近距离无线通信</strong>）是一套<a href="https://zh.wikipedia.org/wiki/%E9%80%9A%E8%A8%8A%E5%8D%94%E5%AE%9A" target="_blank" rel="noreferrer">通信协议</a>，让两个电子设备在相距几厘米之内进行通信</p><table><thead><tr><th></th><th>NFC</th><th>蓝牙</th></tr></thead><tbody><tr><td><a href="https://zh.wikipedia.org/wiki/RFID" target="_blank" rel="noreferrer">RFID</a>兼容</td><td>ISO 18000-3</td><td>active</td></tr><tr><td>标准化机构</td><td>ISO/IEC</td><td>Bluetooth SIG</td></tr><tr><td>网络标准</td><td>ISO 13157 etc.</td><td>IEEE 802.15.1</td></tr><tr><td>网络类型</td><td>Point-to-point</td><td>WPAN</td></tr><tr><td>加密</td><td>not with RFID</td><td>available</td></tr><tr><td>范围</td><td>&lt; 0.2 m</td><td>~10 m (class 2)</td></tr><tr><td>频率</td><td>13.56 MHz</td><td>2.4-2.5 GHz</td></tr><tr><td>Bit rate</td><td>424 kbit/s</td><td>2.1 Mbit/s</td></tr><tr><td>设置程序</td><td>&lt; 0.1 s</td><td>&lt; 6 s</td></tr><tr><td>功耗</td><td>&lt; 15mA (read)</td><td>varies with class</td></tr></tbody></table><p><strong>P2P</strong>（peer-to-peer，对等式网络），又称点对点技术，是<a href="https://zh.wikipedia.org/wiki/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96" target="_blank" rel="noreferrer">无中心服务器</a>、依靠用户群（peers）交换信息的互联网体系 <br> 减低以往网路传输中的节点，以降低资料遗失的风险。</p><p><strong>防火墙</strong>（Firewall）是一个架设在互联网与企业内网之间的信息安全系统，根据企业预定的策略来监控往来的传输。</p><p>隔离网络，透过将网络划分成不同的区域（通常情况下称为ZONE），制定出不同区域之间的<a href="https://zh.wikipedia.org/wiki/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6" target="_blank" rel="noreferrer">访问控制</a>策略来控制不同信任程度区域间传送的数据流</p><ul><li>比特率（Bit rate）：单位时间内传输送或处理的比特的数量。单位为比特每秒（bit/s或bps）</li><li>带宽：数字信道所能传送的最高速率。b/s（bps）</li><li>吞吐量：单位时间内通过某个网络（或信道、接口）的实际数据量。其绝对上限值等于带宽。</li><li>时延：数据（一个报文或分组、甚至比特）从网络（或链路）的一段传送到另一端的时间，也称延迟。</li></ul><p>数据在TCP层称为流（Stream），数据分组称为分段（Segment） <br> 数据在IP层称为Datagram，数据分组称为分片（Fragment）。 <br> UDP 中分组称为Message。</p><h2 id="互联网协议套件-internet-protocol-suite-ips" tabindex="-1">互联网协议套件（Internet Protocol Suite，IPS） <a class="header-anchor" href="#互联网协议套件-internet-protocol-suite-ips" aria-hidden="true">#</a></h2><p>一个网络通信模型，以及一整个<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="noreferrer">网络传输协议</a>家族，为网际网络的基础通信架构。 <br> 常被通称为<strong>TCP/IP协议族</strong>（TCP/IP Protocol Suite），TCP/IP协议栈（TCP/IP Protocol Stack）,简称TCP/IP <br> 定义了电子设备（比如计算机）如何连入因特网，以及数据如何在它们之间传输的标准。 <br> TCP 负责应用软件和网络软件之间的通信。 <br> IP 负责计算机之间的通信。 <br> TCP 负责将数据分割并装入 IP 包，然后在它们到达的时候重新组合它们。 <br> IP 负责将包发送至接受者。</p><h2 id="网络结构" tabindex="-1">网络结构 <a class="header-anchor" href="#网络结构" aria-hidden="true">#</a></h2><p><img src="'+d+'" alt=""> <br> <strong>OSI（Open System Interconnection ，开放式系统互联）</strong></p><table><thead><tr><th>分层</th><th>作用</th><th>协议</th></tr></thead><tbody><tr><td>物理层</td><td>利用传输介质为数据链路层提供物理连接，实现比特流的透明传输。（比特 Bit）</td><td>RJ45、CLOCK、IEEE802.3（中继器，集线器）</td></tr><tr><td>数据链路层</td><td>将比特组装成帧和点到点的传递（帧 Frame）</td><td>PPP、FR、HDLC、VLAN、MAC（网桥，交换机）</td></tr><tr><td>网络层</td><td>负责数据包从源到宿的传递和网际互连（包 Packet）</td><td>IP、ICMP、ARP、RARP、OSPF、IPX、RIP、IGRP（路由器）</td></tr><tr><td>运输层</td><td>提供端到端的可靠报文传递和错误恢复（ 段Segment）</td><td>TCP、UDP、SPX</td></tr><tr><td>会话层</td><td>建立、管理和终止会话（会话协议数据单元 SPDU）</td><td>NFS、SQL、NETBIOS、RPC</td></tr><tr><td>表示层</td><td>对数据进行翻译、加密和压缩（表示协议数据单元 PPDU）</td><td>JPEG、MPEG、ASII</td></tr><tr><td>应用层</td><td>允许访问OSI环境的手段（应用协议数据单元 APDU）</td><td>FTP、DNS、Telnet、SMTP、HTTP、WWW、NFS</td></tr></tbody></table><h2 id="应用层-application-layer" tabindex="-1">应用层（Application layer） <a class="header-anchor" href="#应用层-application-layer" aria-hidden="true">#</a></h2><p>直接和应用程序接口结合，并提供常见的网络应用服务。</p><h3 id="http" tabindex="-1">HTTP <a class="header-anchor" href="#http" aria-hidden="true">#</a></h3><p><strong>超文本传输协议</strong>（HyperText Transfer Protocol）是一种用于分布式、协作式和<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E5%AA%92%E9%AB%94" target="_blank" rel="noreferrer">超媒体</a>信息系统的应用层协议。 <br> HTTP是<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2" target="_blank" rel="noreferrer">万维网</a>的数据通信的基础。 <br> 特点</p><ul><li>简单快速：客户向服务器请求服务时，只需传送请求方法和路径。</li><li>灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</li><li>无连接：限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。节省传输时间。</li><li>无状态：对于事务处理没有记忆能力。应答较快。</li><li>支持B/S及C/S模式。</li></ul><p>发展历史</p><table><thead><tr><th>版本</th><th>产生时间</th><th>内容</th><th>发展现状</th></tr></thead><tbody><tr><td>HTTP/0.9</td><td>1991年</td><td>不涉及数据包传输，规定客户端和服务器之间通信格式，只能GET请求</td><td>没有作为正式的标准</td></tr><tr><td>HTTP/1.0</td><td>1996年</td><td>传输内容格式不限制，增加PUT、PATCH、HEAD、 OPTIONS、DELETE命令</td><td>正式作为标准</td></tr><tr><td>HTTP/1.1</td><td>1997年</td><td>持久连接(长连接)、节约带宽、HOST域、管道机制、分块传输编码</td><td>2015年前使用最广泛</td></tr><tr><td>HTTP/2</td><td>2015年</td><td>多路复用、服务器推送、头信息压缩、二进制协议等</td><td>逐渐覆盖市场</td></tr></tbody></table><h4 id="http-请求方法-request-method" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods" target="_blank" rel="noreferrer">HTTP 请求方法</a> (Request Method) <a class="header-anchor" href="#http-请求方法-request-method" aria-hidden="true">#</a></h4><p>HTTP1.0 定义了三种请求方法：GET, POST 和 HEAD方法。 <br> HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。</p><table><thead><tr><th>序号</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>GET</td><td>请求指定的页面信息，并返回实体主体。</td></tr><tr><td>2</td><td>HEAD</td><td>类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td>3</td><td>POST</td><td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。</td></tr><tr><td>4</td><td>PUT</td><td>从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td>5</td><td>DELETE</td><td>请求服务器删除指定的页面。</td></tr><tr><td>6</td><td>CONNECT</td><td>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td>7</td><td>OPTIONS</td><td>允许客户端查看服务器的性能。</td></tr><tr><td>8</td><td>TRACE</td><td>回显服务器收到的请求，主要用于测试或诊断。</td></tr><tr><td>9</td><td>PATCH</td><td>实体中包含一个表，表中说明与该URI所表示的原内容的区别。</td></tr><tr><td>10</td><td>MOVE</td><td>请求服务器将指定的页面移至另一个网络地址。</td></tr><tr><td>11</td><td>COPY</td><td>请求服务器将指定的页面拷贝至另一个网络地址。</td></tr><tr><td>12</td><td>LINK</td><td>请求服务器建立链接关系。</td></tr><tr><td>13</td><td>UNLINK</td><td>断开链接关系。</td></tr><tr><td>14</td><td>WRAPPED</td><td>允许客户端发送经过封装的请求。</td></tr><tr><td>15</td><td>Extension-mothed</td><td>在不改动协议的前提下，可增加另外的方法。</td></tr></tbody></table><p>GET和POST的区别</p><ul><li>GET提交的数据放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连。POST把提交的数据放在HTTP包的Body中；</li><li>GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制；</li><li>GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码；</li><li>GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。</li></ul><h4 id="http-状态码-status-code" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status" target="_blank" rel="noreferrer">HTTP </a>状态码 (Status Code) <a class="header-anchor" href="#http-状态码-status-code" aria-hidden="true">#</a></h4><p>由三个十进制数字组成，第一个十进制数字定义了状态码的类型 <br> <strong>HTTP状态码分类</strong></p><table><thead><tr><th>分类</th><th>分类描述</th></tr></thead><tbody><tr><td>1**</td><td>信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td>2**</td><td>成功，操作被成功接收并处理</td></tr><tr><td>3**</td><td>重定向，需要进一步的操作以完成请求</td></tr><tr><td>4**</td><td>客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td>5**</td><td>服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table><p><strong>HTTP状态码列表</strong></p><table><thead><tr><th><strong>状态码</strong></th><th><strong>状态码英文名称</strong></th><th><strong>中文描述</strong></th></tr></thead><tbody><tr><td>100</td><td>Continue</td><td>继续。<a href="http://www.dreamdu.com/webbuild/client_vs_server/" target="_blank" rel="noreferrer">客户端</a>应继续其请求</td></tr><tr><td>101</td><td>Switching Protocols</td><td>切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议</td></tr><tr><td></td><td></td><td></td></tr><tr><td>200</td><td>OK</td><td>请求成功。一般用于GET与POST请求</td></tr><tr><td>201</td><td>Created</td><td>已创建。成功请求并创建了新的资源</td></tr><tr><td>202</td><td>Accepted</td><td>已接受。已经接受请求，但未处理完成</td></tr><tr><td>203</td><td>Non-Authoritative Information</td><td>非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td>204</td><td>No Content</td><td>无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td>205</td><td>Reset Content</td><td>重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td>206</td><td>Partial Content</td><td>部分内容。服务器成功处理了部分GET请求</td></tr><tr><td></td><td></td><td></td></tr><tr><td>300</td><td>Multiple Choices</td><td>多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td>302</td><td>Found</td><td>临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td>303</td><td>See Other</td><td>查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td>304</td><td>Not Modified</td><td>未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td>305</td><td>Use Proxy</td><td>使用代理。所请求的资源必须通过代理访问</td></tr><tr><td>306</td><td>Unused</td><td>已经被废弃的HTTP状态码</td></tr><tr><td>307</td><td>Temporary Redirect</td><td>临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td></td><td></td><td></td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求的语法错误，服务器无法理解</td></tr><tr><td>401</td><td>Unauthorized</td><td>请求要求用户的身份认证</td></tr><tr><td>402</td><td>Payment Required</td><td>保留，将来使用</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td>404</td><td>Not Found</td><td>服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置&quot;您所请求的资源无法找到&quot;的个性页面</td></tr><tr><td>405</td><td>Method Not Allowed</td><td>客户端请求中的方法被禁止</td></tr><tr><td>406</td><td>Not Acceptable</td><td>服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td>407</td><td>Proxy Authentication Required</td><td>请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td>408</td><td>Request Time-out</td><td>服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td>409</td><td>Conflict</td><td>服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td>410</td><td>Gone</td><td>客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td>411</td><td>Length Required</td><td>服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td>412</td><td>Precondition Failed</td><td>客户端请求信息的先决条件错误</td></tr><tr><td>413</td><td>Request Entity Too Large</td><td>由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td>414</td><td>Request-URI Too Large</td><td>请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td>415</td><td>Unsupported Media Type</td><td>服务器无法处理请求附带的媒体格式</td></tr><tr><td>416</td><td>Requested range not satisfiable</td><td>客户端请求的范围无效</td></tr><tr><td>417</td><td>Expectation Failed</td><td>服务器无法满足Expect的请求头信息</td></tr><tr><td></td><td></td><td></td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误，无法完成请求</td></tr><tr><td>501</td><td>Not Implemented</td><td>服务器不支持请求的功能，无法完成请求</td></tr><tr><td>502</td><td>Bad Gateway</td><td>作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td>503</td><td>Service Unavailable</td><td>由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td>504</td><td>Gateway Time-out</td><td>充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td>505</td><td>HTTP Version not supported</td><td>服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table><h4 id="http消息结构" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Messages" target="_blank" rel="noreferrer">HTTP消息</a>结构 <a class="header-anchor" href="#http消息结构" aria-hidden="true">#</a></h4><p><strong>客户端请求消息</strong></p><ul><li>起始行 (start-line) ： HTTP 方法、请求目标 (request target)、HTTP 版本 (HTTP version)</li><li>请求头部（header） <ul><li>General headers，例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Via" target="_blank" rel="noreferrer">Via</a>，适用于整个报文。</li><li>Request headers，例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/User-Agent" target="_blank" rel="noreferrer">User-Agent</a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Type" target="_blank" rel="noreferrer">Accept-Type</a>，通过进一步的定义(例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Language" target="_blank" rel="noreferrer">Accept-Language</a>)，或者给定上下文(例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Referer" target="_blank" rel="noreferrer">Referer</a>)，或者进行有条件的限制 (例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-None" target="_blank" rel="noreferrer">If-None</a>) 来修改请求。</li><li>Entity headers，例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length" target="_blank" rel="noreferrer">Content-Length</a>，适用于请求的 body。如果请求中没有任何 body，则不会发送这样的头文件。</li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Messages#body" target="_blank" rel="noreferrer">Body</a> 不是所有的请求都有一个 body，例如获取资源的请求，GET，HEAD，DELETE 和 OPTIONS，通常它们不需要 body。</li></ul><p><img src="'+s+`" alt=""></p><p><strong>服务器响应消息</strong></p><ul><li>状态行 (status line) <ul><li>协议版本，通常为 HTTP/1.1。</li><li>状态码 (status code)，表明请求是成功或失败。常见的状态码是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200" target="_blank" rel="noreferrer">200</a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/404" target="_blank" rel="noreferrer">404</a>，或 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/302" target="_blank" rel="noreferrer">302</a>。</li><li>状态文本 (status text)。一个简短的，纯粹的信息，通过状态码的文本描述，帮助人们理解该 HTTP 消息。</li></ul></li><li>Headers <ul><li>General headers，例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Via" target="_blank" rel="noreferrer">Via</a>，适用于整个报文。</li><li>Response headers，例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Vary" target="_blank" rel="noreferrer">Vary</a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Ranges" target="_blank" rel="noreferrer">Accept-Ranges</a>，提供其它不符合状态行的关于服务器的信息。</li><li>Entity headers，例如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length" target="_blank" rel="noreferrer">Content-Length</a>，适用于请求的 body。如果请求中没有任何 body，则不会发送这样的头文件。</li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Messages#body_2" target="_blank" rel="noreferrer">Body</a> 不是所有的响应都有 body，具有状态码 (如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201" target="_blank" rel="noreferrer">201</a> 或 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204" target="_blank" rel="noreferrer">204</a>) 的响应，通常不会有 body。</li></ul><h4 id="http-headers" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers" target="_blank" rel="noreferrer">HTTP Headers</a> <a class="header-anchor" href="#http-headers" aria-hidden="true">#</a></h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/General_header" target="_blank" rel="noreferrer">General header（通用首部）</a> 可以应用于请求和响应中，但是不能应用于消息内容自身的 HTTP 首部 。常见包括：Date、Cache-Control 或 Connection。 <br> <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Request_header" target="_blank" rel="noreferrer">Request header（请求头）</a></p><div class="language-http line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">GET</span><span style="color:#ABB2BF;"> /home.html </span><span style="color:#C678DD;">HTTP</span><span style="color:#ABB2BF;">/</span><span style="color:#D19A66;">1.1</span></span>
<span class="line"><span style="color:#E06C75;">Host</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">developer.mozilla.org</span></span>
<span class="line"><span style="color:#E06C75;">User-Agent</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:50.0) Gecko/20100101 Firefox/50.0</span></span>
<span class="line"><span style="color:#E06C75;">Accept</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span></span>
<span class="line"><span style="color:#E06C75;">Accept-Language</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">en-US,en;q=0.5</span></span>
<span class="line"><span style="color:#E06C75;">Accept-Encoding</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">gzip, deflate, br</span></span>
<span class="line"><span style="color:#E06C75;">Referer</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">https://developer.mozilla.org/testpage.html</span></span>
<span class="line"><span style="color:#E06C75;">Connection</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">keep-alive</span></span>
<span class="line"><span style="color:#E06C75;">Upgrade-Insecure-Requests</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">1</span></span>
<span class="line"><span style="color:#E06C75;">If-Modified-Since</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Mon, 18 Jul 2016 02:36:04 GMT</span></span>
<span class="line"><span style="color:#E06C75;">If-None-Match</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;c561c68d0ba92bbeb8b0fff2a9199f722e3a621a&quot;</span></span>
<span class="line"><span style="color:#E06C75;">Cache-Control</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">max-age=0</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Response_header" target="_blank" rel="noreferrer">Response header （响应头</a>）</p><div class="language-http line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">200 OK</span></span>
<span class="line"><span style="color:#E06C75;">Access-Control-Allow-Origin</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">*</span></span>
<span class="line"><span style="color:#E06C75;">Connection</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Keep-Alive</span></span>
<span class="line"><span style="color:#E06C75;">Content-Encoding</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">gzip</span></span>
<span class="line"><span style="color:#E06C75;">Content-Type</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">text/html; charset=utf-8</span></span>
<span class="line"><span style="color:#E06C75;">Date</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Mon, 18 Jul 2016 16:06:00 GMT</span></span>
<span class="line"><span style="color:#E06C75;">Etag</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;c561c68d0ba92bbeb8b0f612a9199f722e3a621a&quot;</span></span>
<span class="line"><span style="color:#E06C75;">Keep-Alive</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">timeout=5, max=997</span></span>
<span class="line"><span style="color:#E06C75;">Last-Modified</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Mon, 18 Jul 2016 02:36:04 GMT</span></span>
<span class="line"><span style="color:#E06C75;">Server</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Apache</span></span>
<span class="line"><span style="color:#E06C75;">Set-Cookie</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">mykey=myvalue; expires=Mon, 17-Jul-2017 16:06:00 GMT; Max-Age=31449600; Path=/; secure</span></span>
<span class="line"><span style="color:#E06C75;">Transfer-Encoding</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">chunked</span></span>
<span class="line"><span style="color:#E06C75;">Vary</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">Cookie, Accept-Encoding</span></span>
<span class="line"><span style="color:#E06C75;">X-Backend-Server</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">developer2.webapp.scl3.mozilla.com</span></span>
<span class="line"><span style="color:#E06C75;">X-Cache-Info</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">not cacheable; meta data too large</span></span>
<span class="line"><span style="color:#E06C75;">X-kuma-revision</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">1085259</span></span>
<span class="line"><span style="color:#E06C75;">x-frame-options</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">DENY</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header" target="_blank" rel="noreferrer">Entity headers</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header" target="_blank" rel="noreferrer">实体报头</a>） 描述了一个 HTTP 消息有效载荷（即关于消息主体的元数据）的 HTTP 报头。包括 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length" target="_blank" rel="noreferrer">Content-Length</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Language" target="_blank" rel="noreferrer">Content-Language</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Encoding" target="_blank" rel="noreferrer">Content-Encoding</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type" target="_blank" rel="noreferrer">Content-Type</a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expires" target="_blank" rel="noreferrer">Expires</a> 等。</p><table><thead><tr><th><strong>Header</strong></th><th><strong>解释</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>Accept</td><td>指定客户端能够接收的内容类型</td><td>Accept: text/plain, text/html</td></tr><tr><td>Accept-Charset</td><td>浏览器可以接受的字符编码集。</td><td>Accept-Charset: iso-8859-5</td></tr><tr><td>Accept-Encoding</td><td>指定浏览器可以支持的web服务器返回内容压缩编码类型。</td><td>Accept-Encoding: compress, gzip</td></tr><tr><td>Accept-Language</td><td>浏览器可接受的语言</td><td>Accept-Language: en,zh</td></tr><tr><td>Accept-Ranges</td><td>可以请求网页实体的一个或者多个子范围字段</td><td>Accept-Ranges: bytes</td></tr><tr><td>Authorization</td><td>HTTP授权的授权证书</td><td>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Cache-Control</td><td>指定请求和响应遵循的缓存机制</td><td>Cache-Control: no-cache</td></tr><tr><td>Connection</td><td>是否需要持久连接。（HTTP 1.1默认是）</td><td>Connection: close</td></tr><tr><td>Cookie</td><td>HTTP请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器。</td><td>Cookie: $Version=1; Skin=new;</td></tr><tr><td>Content-Length</td><td>请求的内容长度</td><td>Content-Length: 348</td></tr><tr><td>Content-Type</td><td>请求的与实体对应的MIME信息</td><td>Content-Type: application/x-www-form-urlencoded</td></tr><tr><td>Date</td><td>请求发送的日期和时间</td><td>Date: Tue, 15 Nov 2010 08:12:31 GMT</td></tr><tr><td>Expect</td><td>请求的特定的服务器行为</td><td>Expect: 100-continue</td></tr><tr><td>From</td><td>发出请求的用户的Email</td><td>From: <a href="mailto:user@email.com" target="_blank" rel="noreferrer">user@email.com</a></td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td><td>Host: <a href="http://www.zcmhi.com" target="_blank" rel="noreferrer">www.zcmhi.com</a></td></tr><tr><td>If-Match</td><td>只有请求内容与实体相匹配才有效</td><td>If-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Modified-Since</td><td>如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回304代码</td><td>If-Modified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>If-None-Match</td><td>如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变</td><td>If-None-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Range</td><td>如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为Etag</td><td>If-Range: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Unmodified-Since</td><td>只在实体在指定时间之后未被修改才请求成功</td><td>If-Unmodified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>Max-Forwards</td><td>限制信息通过代理和网关传送的时间</td><td>Max-Forwards: 10</td></tr><tr><td>Pragma</td><td>用来包含实现特定的指令</td><td>Pragma: no-cache</td></tr><tr><td>Proxy-Authorization</td><td>连接到代理的授权证书</td><td>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td><td>Range: bytes=500-999</td></tr><tr><td>Referer</td><td>先前网页的地址，当前请求网页紧随其后，即来路</td><td>Referer: <a href="http://www.zcmhi.com/archives/71.html" target="_blank" rel="noreferrer">http://www.zcmhi.com/archives/71.html</a></td></tr><tr><td>TE</td><td>客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息</td><td>TE: trailers,deflate;q=0.5</td></tr><tr><td>Upgrade</td><td>向服务器指定某种传输协议以便服务器进行转换</td><td>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</td></tr><tr><td>User-Agent</td><td>User-Agent的内容包含发出请求的用户信息</td><td>User-Agent: Mozilla/5.0 (Linux; X11)</td></tr><tr><td>Via</td><td>通知中间网关或代理服务器地址，通信协议</td><td>Via: 1.0 fred, 1.1 <a href="http://nowhere.com" target="_blank" rel="noreferrer">nowhere.com</a> (Apache/1.1)</td></tr><tr><td>Warning</td><td>关于消息实体的警告信息</td><td>Warn: 199 Miscellaneous warning</td></tr></tbody></table><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Connection_management_in_HTTP_1.x" target="_blank" rel="noreferrer"><strong>HTTP/1.x 的连接管理</strong></a></p><ul><li>短连接：建立连接、传输数据、关闭连接（频繁建立和关闭会导致开销大）</li><li>长连接：通过Connection:Keep-alive请求头，保持TCP连接不断开。通过Content-Length（请求长度）或Transfer-Encoding:chunked（分段发送）来区分HTTP请求。</li><li>HTTP 流水线</li></ul><h4 id="http-security" tabindex="-1"><a href="https://infosec.mozilla.org/guidelines/web_security" target="_blank" rel="noreferrer">HTTP security</a> <a class="header-anchor" href="#http-security" aria-hidden="true">#</a></h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP" target="_blank" rel="noreferrer">内容安全策略( CSP )</a>：一个额外的安全层，用于检测并削弱某些特定类型的攻击，包括跨站脚本 (XSS) 和数据注入攻击等。</p><ul><li>使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy" target="_blank" rel="noreferrer">Content-Security-Policy</a> HTTP头部</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">Content-Security-Policy: &lt;</span><span style="color:#E06C75;">policy-directive</span><span style="color:#ABB2BF;">&gt;; &lt;</span><span style="color:#E06C75;">policy-directive</span><span style="color:#ABB2BF;">&gt;（一个包含了各种描述你的CSP策略指令的字符串）</span></span>
<span class="line"><span style="color:#ABB2BF;">// 允许内容来自信任的域名及其子域名 (域名不必须与CSP设置所在的域名相同)</span></span>
<span class="line"><span style="color:#ABB2BF;">Content-Security-Policy: default-src &#39;self&#39; *.trusted.com</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta" target="_blank" rel="noreferrer"><meta></a> 配置策略</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Content-Security-Policy&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;default-src &#39;self&#39;; img-src https://*; child-src &#39;none&#39;;&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Public_Key_Pinning" target="_blank" rel="noreferrer">HTTP Public Key Pinning (HPKP)</a> 公钥锁定（HPKP）是一种安全功能，它告诉Web客户端将特定加密公钥与某个Web服务器相关联，以降低使用伪造证书进行MITM攻击的风险。 <br> <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Strict-Transport-Security" target="_blank" rel="noreferrer">HTTP Strict Transport Security</a> 一个安全功能，它告诉浏览器只能通过HTTPS访问当前资源，而不是HTTP。 <br> <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies" target="_blank" rel="noreferrer">HTTP cookies</a></p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>NAME/VALUE</td><td>Cookie的名称及相对应的值，对于认证Cookie，Value值包括Web服务器所提供的访问令牌</td></tr><tr><td>Expires</td><td>Cookie的生存期。两种存储类型：会话性与持久性。Expires属性缺省时，为会话性</td></tr><tr><td>Domain</td><td>指定Cookie的域名，默认是当前域名。domain设置时可以设置为自身及其父域，子域可以访问父域的Cookie，反之不能。</td></tr><tr><td>Path</td><td>定义了Web站点上可以访问该Cookie的目录</td></tr><tr><td>Secure</td><td>是否使用<a href="https://baike.baidu.com/item/HTTPS/285356" target="_blank" rel="noreferrer">HTTPS</a>安全协议发送Cookie</td></tr><tr><td>HTTPOnly</td><td>限制Cookie仅在HTTP传输过程中被读取，一定程度上防御XSS攻击</td></tr></tbody></table><h3 id="https" tabindex="-1">HTTPS <a class="header-anchor" href="#https" aria-hidden="true">#</a></h3><p>超文本传输安全协议（Hypertext Transfer Protocol Secure）：一种通过计算机网络进行安全通信的传输协议。</p><ul><li>HTTPS 经由 HTTP 进行通信，但利用 SSL/TLS 来加密数据包。HTTPS报文中的任何东西都被加密，包括所有报头和荷载</li><li>提供对<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E7%AB%99" target="_blank" rel="noreferrer">网站</a>服务器的<a href="https://zh.wikipedia.org/wiki/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81" target="_blank" rel="noreferrer">身份认证</a>，保护交换资料的隐私与<a href="https://zh.wikipedia.org/wiki/%E5%AE%8C%E6%95%B4%E6%80%A7" target="_blank" rel="noreferrer">完整性</a>。</li><li>HTTPS的信任基于预先安装在<a href="https://zh.wikipedia.org/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" target="_blank" rel="noreferrer">操作系统</a>中的<a href="https://zh.wikipedia.org/wiki/%E8%AF%81%E4%B9%A6%E9%A2%81%E5%8F%91%E6%9C%BA%E6%9E%84" target="_blank" rel="noreferrer">证书颁发机构</a>（CA）</li></ul><p>HTTPS工作流程 <br> 1、TCP 三次同步握手 <br> 2、客户端验证服务器数字证书 <br> 3、DH 算法协商对称加密算法的密钥、hash 算法的密钥 <br> 4、SSL 安全加密隧道协商完成 <br> 5、网页以加密的方式传输，用协商的对称加密算法和密钥加密，保证数据机密性；用协商的hash算法进行数据完整性保护，保证数据不被篡改。</p><p><strong>HTTP 与 HTTPS 区别</strong></p><ul><li>HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP） 数据传输过程是加密的，安全性较好。</li><li>使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。</li><li>HTTP 页面响应速度快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。</li><li>http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</li><li>HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。</li></ul><h3 id="smtp" tabindex="-1">SMTP <a class="header-anchor" href="#smtp" aria-hidden="true">#</a></h3><p>简易邮件传输协议（Simple Mail Transfer Protocol）一个在<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF" target="_blank" rel="noreferrer">互联网</a>上传输电子邮件的标准。 <br> <img src="`+n+'" alt=""> <br> 不启用SSL时端口号为25，启用SSL时端口号多为465或994</p><h3 id="pop" tabindex="-1">POP <a class="header-anchor" href="#pop" aria-hidden="true">#</a></h3><p><strong>邮局协议</strong>（Post Office Protocol）用于支持使用<a href="https://zh.wikipedia.org/wiki/%E5%AE%A2%E6%88%B7%E7%AB%AF" target="_blank" rel="noreferrer">客户端</a>远程管理在服务器上的电子邮件。最新版本为POP3 <br> 不启用SSL时端口号为110，启用SSL时端口号多为995。</p><h3 id="imap" tabindex="-1">IMAP <a class="header-anchor" href="#imap" aria-hidden="true">#</a></h3><p><strong>因特网信息访问协议</strong>（Internet Message Access Protocol）用来从本地邮件客户端访问远程服务器上的邮件。 <br> 不启用SSL时端口号为143，启用SSL时端口号多为993</p><h3 id="ftp" tabindex="-1">FTP <a class="header-anchor" href="#ftp" aria-hidden="true">#</a></h3><p><strong>文件传输协议</strong>（File Transfer Protocol）是一个用于在<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">计算机网络</a>上在客户端和服务器之间进行文件传输的协议。 <br> FTP服务</p><ul><li>端口20：用于在客户端和服务器之间传输数据流</li><li>端口21：用于传输控制流，并且是命令通向ftp服务器的进口。</li></ul><p>使用模式</p><ul><li>主动模式：要求客户端和服务器端同时打开并且监听一个端口以创建连接</li><li>被动模式：只要求服务器端产生一个监听相应端口的进程，可以绕过客户端安装了防火墙的问题。</li></ul><p>FTP URL 格式为：<code>ftp://[user[:password]@]host[:port]/url-path</code></p><h3 id="ssh" tabindex="-1">SSH <a class="header-anchor" href="#ssh" aria-hidden="true">#</a></h3><p><strong>Secure Shell</strong>（安全外壳协议）是一种加密的<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="noreferrer">网络传输协议</a>，可在不安全的网络中为网络服务提供安全的传输环境</p><ul><li>通过在网络中创建安全隧道来实现SSH客户端与服务器之间的连接</li><li>以非对称加密实现身份验证</li></ul><p>协议框架</p><ul><li>传输层协议（The Transport Layer Protocol）：传输层协议提供服务器认证，数据机密性，信息完整性等的支持。</li><li>用户认证协议（The User Authentication Protocol）：用户认证协议为服务器提供客户端的身份鉴别。</li><li>连接协议（The Connection Protocol）：连接协议将加密的信息隧道复用成若干个逻辑通道，提供给更高层的应用协议使用。</li></ul><h3 id="dhcp" tabindex="-1">DHCP <a class="header-anchor" href="#dhcp" aria-hidden="true">#</a></h3><p><strong>动态主机设置协议</strong>（Dynamic Host Configuration Protocol，动态主机组态协定）是一个用于<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AE" target="_blank" rel="noreferrer">IP</a>网络的网络协议</p><ul><li>用于内部网或网络服务供应商自动分配IP地址给用户</li><li>用于内部网管理员对所有电脑作中央管理</li></ul><p>原理</p><ul><li>使用两个<a href="https://zh.wikipedia.org/wiki/IANA" target="_blank" rel="noreferrer">IANA</a>分配的端口作为<a href="https://zh.wikipedia.org/wiki/BOOTP" target="_blank" rel="noreferrer">BOOTP</a>：<a href="https://zh.wikipedia.org/wiki/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF" target="_blank" rel="noreferrer">服务器端</a>使用67/udp，<a href="https://zh.wikipedia.org/wiki/%E5%AE%A2%E6%88%B7%E7%AB%AF" target="_blank" rel="noreferrer">客户端</a>使用68/udp。</li><li>四个基本过程：请求IP租约、提供IP租约、选择IP租约、确认IP租约。</li><li>客户在获得了一个IP地址后，就可以发送一个<a href="https://zh.wikipedia.org/wiki/ARP" target="_blank" rel="noreferrer">ARP</a>请求来避免由于DHCP服务器地址池重叠而引发的IP冲突。</li></ul><h3 id="dns" tabindex="-1">DNS <a class="header-anchor" href="#dns" aria-hidden="true">#</a></h3><p>域名系统（Domain Name System）：互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53。</p><p><strong>网域（Domain Name）</strong>：由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。</p><ul><li>域名不区分大小写</li><li>每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符</li></ul><p>ICANN(因特网域名与地址管理机构，Internet Corporation for Assigned Names and Numbers)：承担域名系统管理、IP地址分配、协议参数配置，以及主服务器系统管理等职能而设立的非盈利机构。</p><h3 id="socks" tabindex="-1">SOCKS <a class="header-anchor" href="#socks" aria-hidden="true">#</a></h3><p>（Protocol for sessions traversal across firewall securely，防火墙安全会话转换协议 ）：用于客户端与外网服务器之间通讯的中间传递。</p><h2 id="传输层-transport-layer" tabindex="-1">传输层（Transport Layer） <a class="header-anchor" href="#传输层-transport-layer" aria-hidden="true">#</a></h2><p>该层的协议为应用进程提供端到端的通信服务。它提供<a href="https://zh.wikipedia.org/wiki/%E9%80%A3%E6%8E%A5%E5%B0%8E%E5%90%91%E5%BC%8F%E9%80%9A%E8%A8%8A" target="_blank" rel="noreferrer">面向连接的</a>数据流支持、可靠性、流量控制、多路复用等服务。</p><h3 id="tcp" tabindex="-1">TCP <a class="header-anchor" href="#tcp" aria-hidden="true">#</a></h3><p><strong>传输控制协议</strong>（Transmission Control Protocol）一种面向连接的、可靠的、基于<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AF%80%E6%B5%81" target="_blank" rel="noreferrer">字节流</a>的传输层通信协议 <br> 三个阶段：</p><ul><li>连接创建 (connection establishment) <ul><li>三次握手</li></ul></li><li>数据传送（data transfer） <ul><li>超时重传（Retransmission timeout，RTO）</li><li>重复累计确认（duplicate cumulative acknowledgements，DupAcks）</li></ul></li><li>连接终止（connection termination）</li></ul><p><strong>TCP数据报结构</strong> <br> <img src="'+l+'" alt=""> <br> 序号Seq（Sequence Number）：占32位，用来标识从计算机A发送到计算机B的数据包的序号，计算机发送数据时对此进行标记。 <br> 确认号Ack（Acknowledge Number）：占32位，客户端和服务器端都可以发送，Ack = Seq + 1。</p><p>标志位：每个标志位占用1Bit，共有6个</p><ul><li>SYN(synchronous)： 发送/同步标志，用来建立连接。</li><li>ACK(acknowledgement)：确认标志，表示确认收到请求。</li><li>PSH(push) ：表示推送操作，指数据包到达接收端以后，不对其进行队列处理，而是尽可能的将数据交给应用程序处理；</li><li>FIN(finish)：结束标志，用于结束一个TCP会话；</li><li>RST(reset)：重置复位标志，用于复位对应的TCP连接。</li><li>URG(urgent)：紧急标志，用于保证TCP连接不被中断，并且督促中间层设备尽快处理。</li></ul><p><strong>三次握手 (Three-way Handshake)</strong> <br> 建立一个TCP连接时，需要客户端和服务器总共发送3个包。 <br> 目的是连接服务器指定端口，建立TCP连接，并同步连接双方的顺序号和确认号并交换 TCP信息 <br> <img src="'+i+'" alt=""></p><ul><li>第一次握手：客户端Client发送位码为SYN＝1，随机产生消息序列号seq=x的数据包到服务器，服务器Server由SYN=1知道，客户端Client要求建立联机；</li><li>第二次握手：服务器Server收到请求后要确认联机信息，向客户端Client发送ack=(客户端Client请求连接时的seq)+1，SYN=1，ACK=1，产生seq=y的包，代表接收到连接请求并且向客户端再次确认；</li><li>第三次握手：客户端Client收到后检查ack是否正确，即第一次发送的seq+1，以及位码ACK是否为1，代表收到了服务器端发过来的确认信息。之后客户端Client会再向服务器发送ack=(服务器Server的seq+1)，ACK=1，服务器Server收到后确认ack 值与ACK=1，连接建立成功。</li></ul><p>**四次挥手 **(four-way handshake) <br> <img src="'+o+'" alt=""></p><p><strong>MSL(Maximum Segment Lifetime) 报文最长存活时间</strong></p><ul><li>客户端Client进程发出连接释放报文，并且停止发送数据。其中FIN=1，顺序号为seq=m（等于前面已经传送过来的数据的最后一个字节的序号加1），此时，客户端Client进入FIN-WAIT-1（终止等待1）状态。 TCP规定，FIN报文段即使不携带数据，也要消耗一个序号。</li><li>服务器Server收到连接释放报文，发出确认报文，ACK=1，ack=m+1，并且带上自己的顺序号seq=n，此时，服务器Server就进入了CLOSE-WAIT（关闭等待）状态。TCP服务器通知高层的应用进程，客户端Client向服务器的方向就释放了，这时候处于半关闭状态，即客户端Client已经没有数据要发送了，但是服务器Server若发送数据，客户端Client依然要接受。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。</li><li>客户端Client收到服务器Server的确认信息后，此时，客户端Client就进入FIN-WAIT-2（终止等待2）状态，等待服务器Server发送连接释放报文（在这之前还需要接受服务器Server发送的最后的数据）。</li><li>服务器Server将最后的数据发送完毕后，就向客户端发送连接释放报文，FIN=1，ack=m+1，由于在半关闭状态，服务器Server很可能又发送了一些数据，假定此时的顺序号为seq=p，此时，服务器Server就进入了LAST-ACK（最后确认）状态，等待客户端Client的确认。</li><li>客户端Client收到服务器Server的连接释放报文后，必须发出确认，ACK=1，ack=p+1，而自己的顺序号是seq=m+1，此时，客户端Client就进入了TIME-WAIT（时间等待）状态。注意此时TCP连接还没有释放，必须经过2*MSL（最长报文段寿命）的时间后，当客户端Client撤销相应的TCB（保护程序）后，才进入CLOSED状态。</li><li>服务器Server只要收到了客户端Client发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器Server结束TCP连接的时间要比客户端Client早一些。</li></ul><p><strong>为什么连接的时候是三次握手，关闭的时候却是四次握手？</strong> <br> 因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，&quot;你发的FIN报文我收到了&quot;。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。 <br> <strong>为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？</strong> <br> 按照前面所说，当四个报文全部发送完毕后，理论上就算是结束了。但是实际情况往往不会那么可靠，比如最后一条报文发出后丢失了，那么服务器端就不会接收到这一报文，每隔一段时间，服务器端会再次发出FIN报文，此时如果客户端已经断开了，那么就无法响应服务器的二次请求，这样服务器会继续发出FIN报文，从而变成了死循环。所以需要设置一个时间段，如果在这个时间段内接收到了服务器端的再次请求，则代表客户端发出的ACK报文没有接收成功。反之，则代表服务器端成功接收响应报文，客户端进入CLOSED状态，此次连接成功关闭。而这个时间，就规定为了2MSL，即客户端发出ACK报文到服务器端的最大时间 + 服务器没有接收到ACK报文再次发出FIN的最大时间 = 2MSL</p><h3 id="udp" tabindex="-1">UDP <a class="header-anchor" href="#udp" aria-hidden="true">#</a></h3><p><strong>用户</strong><a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E6%8A%A5" target="_blank" rel="noreferrer"><strong>数据报</strong></a><strong>协议</strong>（User Datagram Protocol）是一个简单的面向数据报的通信协议，提供面向事务的简单不可靠信息传送服务</p><p><strong>TCP &amp; UDP</strong> <br> 1、TCP是面向连接的（在客户端和服务器之间传输数据之前要先建立连接），UDP是无连接的 <br> 2、TCP提供可靠的服务（无差错，不丢失，不重复，且按序到达）；UDP提供面向事务的简单的不可靠的传输。 <br> 3、UDP具有较好的实时性，工作效率比TCP高，适用于对高速传输和实时性比较高的通讯或广播通信 <br> 4、TCP连接只能是点到点的，UDP支持一对一，一对多和多对多的交互通信。 <br> 5、TCP对系统资源要求比较多，UDP对系统资源要求比较少 <br> 6、UDP程序结构更加简单 <br> 7、TCP是流模式，UDP是数据报模式</p><h3 id="tls-ssl" tabindex="-1">TLS / SSL <a class="header-anchor" href="#tls-ssl" aria-hidden="true">#</a></h3><p><strong>传输层安全性协议</strong>（Transport Layer Security）及其前身安全套接层（Secure Sockets Layer）是一种<a href="https://zh.wikipedia.org/wiki/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE" target="_blank" rel="noreferrer">安全协议</a>，为互联网通信提供安全及数据完整性保障。</p><ul><li>采用主从式架构模型，用于在两个应用程序间透过网络创建起安全的连线，防止在交换资料时受到窃听及篡改。</li></ul><p><strong>安全连接</strong></p><ul><li>当客户端连接到支持TLS协议的服务器要求创建安全连接并列出了受支持的密码包（包括加密算法、散列算法等），握手开始。</li><li>服务器从该列表中决定密码包，并通知客户端。</li><li>服务器发回其数字证书，此证书通常包含服务器的名称、受信任的证书颁发机构（CA）和服务器的公钥。</li><li>客户端确认其颁发的证书的有效性。</li><li>为了生成会话密钥用于安全连接，客户端使用服务器的公钥加密随机生成的密钥，并将其发送到服务器，只有服务器才能使用自己的私钥解密。</li><li>利用随机数，双方生成用于加密和解密的对称密钥。这就是TLS协议的握手，握手完毕后的连接是安全的，直到连接（被）关闭。如果上述任何一个步骤失败，TLS握手过程就会失败，并且断开所有的连接。</li></ul><h2 id="网络层-network-layer" tabindex="-1">网络层（Network Layer） <a class="header-anchor" href="#网络层-network-layer" aria-hidden="true">#</a></h2><p>提供<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1" target="_blank" rel="noreferrer">路由</a>和寻址的功能，使两终端系统能够互连且决定最佳路径，并具有一定的拥塞控制和流量控制的能力。</p><p><strong>路由器</strong>（Router）是一种<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E8%A8%8A" target="_blank" rel="noreferrer">电讯</a>网络设备，提供路由与转送两种重要机制，可以决定数据包从来源端到目的端所经过的路由路径（host到host之间的传输路径），这个过程称为路由</p><h3 id="ip" tabindex="-1">IP <a class="header-anchor" href="#ip" aria-hidden="true">#</a></h3><p><strong>网际协议</strong>（Internet Protocol，互联网协议）是用于<a href="https://zh.wikipedia.org/wiki/%E5%B0%81%E5%8C%85%E4%BA%A4%E6%8F%9B" target="_blank" rel="noreferrer">分组交换</a>数据网络的一种协议 <br> IP 地址（Internet Protocol Address）：用于标识<strong>发送</strong>或接收<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E6%8A%A5" target="_blank" rel="noreferrer">数据报</a>的设备的一串数字</p><ul><li>标识设备或网络</li><li>寻址（location addressing）</li></ul><h4 id="ipv4" tabindex="-1">IPv4 <a class="header-anchor" href="#ipv4" aria-hidden="true">#</a></h4><p><strong>网际协议版本4</strong>（Internet Protocol version 4，又称互联网通信协议第四版） <br> 一种<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E9%80%A3%E6%8E%A5%E5%BC%8F%E9%80%9A%E8%A8%8A" target="_blank" rel="noreferrer">无连接</a>的协议，操作在使用分组交换的链路层（如以太网）上。此协议会尽最大努力交付数据包，即它不保证任何数据包均能送达目的地，也不保证所有数据包均按照正确的顺序无重复地到达。</p><p><strong>IP 地址 ::= {&lt; 网络号 &gt;, &lt; 主机号 &gt;}</strong> <br> IPv4 使用32位（4字节）地址，被分为 4 个 8 位段。 <br> 基本分类</p><ul><li>A 类：前 8 位表示网络 ID，后 24 位表示主机 ID；该地址分配给政府机关单位使用。</li><li>B 类：前 16 位表示网络 ID，后 16 位表示主机 ID；该地址分配给中等规模的企业使用。</li><li>C 类：前 24 位表示网络 ID，后 8 位表示主机 ID；该地址分配给任何需要的人使用。</li></ul><p>两类隐藏地址</p><ul><li>D 类：不分网络 ID 和主机 ID；该地址用于多播。</li><li>E 类：不分网络 ID 和主机 ID；该地址用于实验。</li></ul><p><img src="'+p+'" alt=""></p><p>网关（Gateway）：是转发其他服务器通信数据的服务器，接收从客户端发送来的请求时，它就像自己拥有资源的源服务器一样对请求进行处理。</p><p><strong>特殊用途的地址</strong></p><table><thead><tr><th><a href="https://zh.wikipedia.org/wiki/CIDR" target="_blank" rel="noreferrer">CIDR</a>地址块</th><th>描述</th></tr></thead><tbody><tr><td>0.0.0.0/8</td><td>本网络（仅作为源地址时合法）</td></tr><tr><td>10.0.0.0/8</td><td><a href="https://zh.wikipedia.org/wiki/%E4%B8%93%E7%94%A8%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">专用网络</a></td></tr><tr><td>100.64.0.0/10</td><td><a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E4%BF%A1%E7%BA%A7NAT" target="_blank" rel="noreferrer">电信级NAT</a></td></tr><tr><td>127.0.0.0/8</td><td><a href="https://zh.wikipedia.org/wiki/Localhost" target="_blank" rel="noreferrer">环回</a></td></tr><tr><td>169.254.0.0/16</td><td><a href="https://zh.wikipedia.org/wiki/%E9%93%BE%E8%B7%AF%E6%9C%AC%E5%9C%B0%E5%9C%B0%E5%9D%80" target="_blank" rel="noreferrer">链路本地</a></td></tr><tr><td>172.16.0.0/12</td><td><a href="https://zh.wikipedia.org/wiki/%E4%B8%93%E7%94%A8%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">专用网络</a></td></tr><tr><td>192.0.0.0/24</td><td>保留（IANA）</td></tr><tr><td>192.0.2.0/24</td><td>TEST-NET-1，文档和示例</td></tr><tr><td>192.88.99.0/24</td><td><a href="https://zh.wikipedia.org/wiki/6to4" target="_blank" rel="noreferrer">6to4</a>中继</td></tr><tr><td>192.168.0.0/16</td><td><a href="https://zh.wikipedia.org/wiki/%E4%B8%93%E7%94%A8%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">专用网络</a></td></tr><tr><td>198.18.0.0/15</td><td>网络基准测试</td></tr><tr><td>198.51.100.0/24</td><td>TEST-NET-2，文档和示例</td></tr><tr><td>203.0.113.0/24</td><td>TEST-NET-3，文档和示例</td></tr><tr><td>224.0.0.0/4</td><td><a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E6%92%AD" target="_blank" rel="noreferrer">多播</a>（之前的D类网络）</td></tr><tr><td>240.0.0.0/4</td><td>保留（之前的E类网络）</td></tr><tr><td>255.255.255.255/32</td><td><a href="https://zh.wikipedia.org/wiki/%E5%8F%97%E9%99%90%E5%B9%BF%E6%92%AD" target="_blank" rel="noreferrer">受限广播</a></td></tr></tbody></table><p>专用网络（<strong>私有IP）</strong> <br> 不能直接与公共网络通信。需使用<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2" target="_blank" rel="noreferrer">网络地址转换</a>（NAT）或者代理服务器 （proxy server）来实现</p><table><thead><tr><th>IP地址区块</th><th>IP数量</th><th><a href="https://zh.wikipedia.org/wiki/%E5%88%86%E7%B1%BB%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">分类网络</a> 说明</th><th>最大<a href="https://zh.wikipedia.org/wiki/%E6%97%A0%E7%B1%BB%E5%88%AB%E5%9F%9F%E9%97%B4%E8%B7%AF%E7%94%B1" target="_blank" rel="noreferrer">CIDR</a>区块 （<a href="https://zh.wikipedia.org/wiki/%E5%AD%90%E7%BD%91#%E7%BD%91%E7%BB%9C%E6%8E%A9%E7%A0%81" target="_blank" rel="noreferrer">子网掩码</a>）</th><th>主机端位长</th></tr></thead><tbody><tr><td>10.0.0.0 – 10.255.255.255</td><td>16,777,216</td><td>单个A类网络</td><td>10.0.0.0/8 (255.0.0.0)</td><td>24位</td></tr><tr><td>172.16.0.0 – 172.31.255.255</td><td>1,048,576</td><td>16个连续B类网络</td><td>172.16.0.0/12 (255.240.0.0)</td><td>20位</td></tr><tr><td>192.168.0.0 – 192.168.255.255</td><td>65,536</td><td>256个连续C类网络</td><td>192.168.0.0/16 (255.255.0.0)</td><td>16位</td></tr></tbody></table><p><strong>环回地址 (Loopback Address)</strong> <br> 地址块127.0.0.0/8被保留作环回通信用。发送至此地址的报文被作为同一虚拟网络设备上的入站报文（环回），主要用于检查TCP/IP协议栈是否正确运行和本机对本机的链接。</p><p>无类域间路由（Classless Inter-Domain Routing，CIDR）</p><ul><li>一个用于给用户分配IP地址以及在互联网上有效地路由IP数据包的对IP地址进行归类的方法。</li><li>基于可变长子网掩码（VLSM）来进行任意长度的前缀的分配的</li></ul><p>NAT（Network Address Translation，<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2" target="_blank" rel="noreferrer">网络地址转换</a>、<strong>网络掩蔽</strong>、IP掩蔽）</p><ul><li>一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术。</li><li>实现局域网的IP地址与广域网的地址之间的相互转换，将广域网IP地址转换为大量的局域网IP地址，减少对公网IP地址的占用。</li></ul><p><strong>网络地址端口转换（NAPT）</strong></p><p><strong>IP数据报格式</strong> <br> <img src="'+h+`" alt=""></p><ul><li>版本 : 有 4（IPv4）和 6（IPv6）两个值；</li><li>首部长度 : 占 4 位，因此最大值为 15。值为 1 表示的是 1 个 32 位字的长度，也就是 4 字节。因为固定部分长度为 20 字节，因此该值最小为 5。如果可选字段的长度不是 4 字节的整数倍，就用尾部的填充部分来填充。</li><li>区分服务 : 用来获得更好的服务，一般情况下不使用。</li><li>总长度 : 包括首部长度和数据部分长度。</li><li>生存时间 ：TTL，它的存在是为了防止无法交付的数据报在互联网中不断兜圈子。以路由器跳数为单位，当 TTL 为 0 时就丢弃数据报。</li><li>协议 ：指出携带的数据应该上交给哪个协议进行处理，例如 ICMP、TCP、UDP 等。</li><li>首部检验和 ：因为数据报每经过一个路由器，都要重新计算检验和，因此检验和不包含数据部分可以减少计算的工作量。</li><li>标识 : 在数据报长度过长从而发生分片的情况下，相同数据报的不同分片具有相同的标识符。</li><li>片偏移 : 和标识符一起，用于发生分片的情况。片偏移的单位为 8 字节。</li></ul><h4 id="ipv6" tabindex="-1">IPv6 <a class="header-anchor" href="#ipv6" aria-hidden="true">#</a></h4><p>地址长度为128位，16^32，8组4位十六进制地址 <br> 2001:0db8:86a3:08d3:1319:8a2e:0370:7344 <br> 可以用双冒号“::”表示一组0或多组连续的0，但只能出现一次</p><p>**IPv6 地址 = **64位的网络前缀 + 64位的主机地址 <br> EUI-64（64-位扩展唯一标识）：主机地址通常根据物理地址自动生成</p><p><strong>地址分类</strong></p><ul><li>单播（unicast）地址：标示一个网络接口。单点广播在来源和目的地间直接进行通信</li><li>多播（multicast）地址：组播地址。被指定到一群不同的接口，送到多播地址的数据包会被发送到所有的地址。多播地址由皆为一的字节起始，亦即：它们的前置为FF00::/8。其第二个字节的最后四个比特用以标明&quot;范畴&quot;。多点广播存在于单一来源和多个目的地进行通信。</li><li>任播（anycast）地址：像是Unicast（单点传播）与Broadcast（多点广播）的综合</li></ul><p><strong>特殊地址</strong></p><ul><li>未指定地址 ::/128－所有比特皆为零的地址称作未指定地址。</li><li>链路本地地址 ::1/128－是一种单播绕回地址。</li><li>唯一区域地址 fc00::/7－唯一区域地址（ULA，unique local address）只可用于本地通信</li><li>IPv4转译地址 ::ffff:x.x.x.x/96－用于IPv4映射地址。</li><li>···</li></ul><p><strong>地址转换</strong> <br> IPv4的一个地址为135.75.43.52（十六进制为0x874B2B34）， <br> 转化为0000:0000:0000:0000:0000:FFFF:874B:2B34 或者::FFFF:874B:2B34。 <br> 使用混合符号（IPv4-compatible address），则地址可以为::ffff:135.75.43.52。</p><h3 id="icmp" tabindex="-1">ICMP <a class="header-anchor" href="#icmp" aria-hidden="true">#</a></h3><p><strong>互联网控制消息协议</strong>（Internet Control Message Protocol）用于<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AE" target="_blank" rel="noreferrer">网际协议</a>（IP）中发送控制消息，提供可能发生在通信环境中的各种问题反馈。 <br> ICMP报头从IP报头的第160位开始（IP首部20字节）</p><table><thead><tr><th>Bits</th><th>160-167</th><th>168-175</th><th>176-183</th><th>184-191</th></tr></thead><tbody><tr><td><strong>160</strong></td><td>Type</td><td>Code</td><td>校验码（checksum）</td><td></td></tr><tr><td><strong>192</strong></td><td>Rest of Header</td><td></td><td></td><td></td></tr></tbody></table><ul><li>Type - ICMP的类型,标识生成的错误报文；</li><li>Code - 进一步划分ICMP的类型,该字段用来查找产生错误的原因.；例如，ICMP的目标不可达类型可以把这个位设为1至15等来表示不同的意思。</li><li>Checksum - Internet校验和（RFC 1071），用于进行错误检查，该校验和是从ICMP头和以该字段替换为0的数据计算得出的。</li><li>Rest of Header - 报头的其余部分，四字节字段，内容根据ICMP类型和代码而有所不同。</li></ul><h2 id="链路层-link-layer" tabindex="-1">链路层（link layer） <a class="header-anchor" href="#链路层-link-layer" aria-hidden="true">#</a></h2><p><strong>数据链路层</strong>（Data Link Layer）</p><h3 id="mac" tabindex="-1">MAC <a class="header-anchor" href="#mac" aria-hidden="true">#</a></h3><p><strong>媒体接入控制</strong>（Media Access Control）子层，提供寻址及媒体访问的控制方式，使得不同设备或网络上的节点可以在多点的网络上通信，而不会互相冲突</p><p><strong>MAC地址</strong>（Media Access Control Address，媒体访问控制地址），也称为局域网地址（LAN Address），以太网地址（Ethernet Address）或物理地址（Physical Address），用来确认网络设备位置的地址，在网络中唯一标示一个<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E5%8D%A1" target="_blank" rel="noreferrer">网卡</a></p><p>MAC地址共48位（6个字节），以<a href="https://zh.wikipedia.org/wiki/%E5%8D%81%E5%85%AD%E9%80%B2%E4%BD%8D" target="_blank" rel="noreferrer">十六进制</a>表示</p><ul><li>第1Bit为广播地址(0)/群播地址(1)</li><li>第2Bit为广域地址(0)/区域地址(1)</li><li>前3~24位由IEEE决定如何分配给每一家制造商，且不重复</li><li>后24位由实际生产该网络设备的厂商自行指定且不重复</li></ul><p>网卡（Network Adapter，网络适配器），是连接计算机和传输介质的接口，用来将计算机数据转换为能够通过传输介质传输的信号。</p><h3 id="arp" tabindex="-1">ARP <a class="header-anchor" href="#arp" aria-hidden="true">#</a></h3><p><strong>地址解析协议</strong>（Address Resolution Protocol）是一个通过解析<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%B1%82" target="_blank" rel="noreferrer">网络层</a>地址来找寻数据链路层地址的网络传输协议 <br> <strong>地址解析（address resolution）</strong>：主机在发送帧前将目标IP地址转换成目标MAC地址的过程</p><h2 id="网络标准" tabindex="-1">网络标准 <a class="header-anchor" href="#网络标准" aria-hidden="true">#</a></h2><p><strong>从输入网址到获得页面的过程</strong></p><ol><li>浏览器查询 DNS，获取域名对应的IP地址:具体过程包括浏览器搜索自身的DNS缓存、搜索操作系统的DNS缓存、读取本地的Host文件和向本地DNS服务器进行查询等。对于向本地DNS服务器进行查询，如果要查询的域名包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析(此解析具有权威性)；如果要查询的域名不由本地DNS服务器区域解析，但该服务器已缓存了此网址映射关系，则调用这个IP地址映射，完成域名解析（此解析不具有权威性）。如果本地域名服务器并未缓存该网址映射关系，那么将根据其设置发起递归查询或者迭代查询；</li><li>浏览器获得域名对应的IP地址以后，浏览器向服务器请求建立链接，发起三次握手；</li><li>TCP/IP链接建立起来后，浏览器向服务器发送HTTP请求；</li><li>服务器接收到这个请求，并根据路径参数映射到特定的请求处理器进行处理，并将处理结果及相应的视图返回给浏览器；</li><li>浏览器解析并渲染视图，若遇到对js文件、css文件及图片等静态资源的引用，则重复上述步骤并向服务器请求这些资源；</li><li>浏览器根据其请求到的资源、数据渲染页面，最终向用户呈现一个完整的页面。</li></ol><h3 id="会话-session" tabindex="-1">会话（Session） <a class="header-anchor" href="#会话-session" aria-hidden="true">#</a></h3><p>跟踪是Web程序中常用的技术，用来跟踪用户的整个会话。 <br> 会话跟踪技术</p><ul><li>Cookie：通过在客户端记录信息确定用户身份，实际上是一小段的文本信息</li><li>Session：通过在服务器端记录信息确定用户身份。</li></ul><p><strong>cookies &amp; session</strong></p><ul><li>cookie数据存放在客户的浏览器上，session数据放在服务器上</li><li>cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗考虑到安全应当使用session</li><li>session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能考虑到减轻服务器性能方面</li><li>单个cookie保存的数据&lt;=4KB，一个站点最多保存20个Cookie。</li></ul><h3 id="uri" tabindex="-1">URI <a class="header-anchor" href="#uri" aria-hidden="true">#</a></h3><p><strong>统一资源</strong><a href="https://zh.wikipedia.org/wiki/%E6%A0%87%E8%AF%86" target="_blank" rel="noreferrer"><strong>标识</strong></a><strong>符</strong>（Uniform Resource Identifier）：一个用于标识某一互联网资源名称的字符串 <br> 格式 <br> <code>[协议名]://[用户名]:[密码]@[主机名]:[端口]/[路径]?[查询参数]#[片段ID] </code></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web#urls" target="_blank" rel="noreferrer">URL</a>（<strong>U</strong>niform <strong>R</strong>esource <strong>L</strong>ocator，<strong>统一资源定位符</strong>、<strong>统一资源定位器</strong>、<strong>网页地址</strong>、<strong>网址</strong>） <br> <a href="https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91" target="_blank" rel="noreferrer">因特网</a>上标准的资源的地址，URI的一种常见形式</p><p>标准格式 <br> <code>[协议类型]://[服务器地址]:[端口号]/[资源层级UNIX文件路径][文件名]?[查询]#[片段ID] </code> <br> 完整格式 <br> <code>[协议类型]://[访问资源需要的凭证信息]@[服务器地址]:[端口号]/[资源层级UNIX文件路径][文件名]?[查询]#[片段ID] </code></p><p>示例： <a href="https://zh.wikipedia.org/w/index.php?title=Special:%E9%9A%8F%E6%9C%BA%E9%A1%B5%E9%9D%A2" target="_blank" rel="noreferrer">https://zh.wikipedia.org:443/w/index.php?title=Special:随机页面</a> <br> 语法规则：</p><ul><li>:port - 定义主机上的端口号（http 的默认端口号是 80）</li><li>path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。</li><li>锚点名称通过网页元素的id属性命名</li></ul><p>Protocol</p><table><thead><tr><th>方案</th><th>描述</th></tr></thead><tbody><tr><td>data</td><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Data_URIs" target="_blank" rel="noreferrer">Data URIs</a></td></tr><tr><td>file</td><td>指定主机上文件的名称</td></tr><tr><td>ftp</td><td><a href="https://developer.mozilla.org/en-US/docs/Glossary/FTP" target="_blank" rel="noreferrer">文件传输协议</a></td></tr><tr><td>http/https</td><td><a href="https://developer.mozilla.org/en-US/docs/Glossary/HTTP" target="_blank" rel="noreferrer">超文本传输协议／安全的超文本传输协议</a></td></tr><tr><td>mailto</td><td>电子邮件地址</td></tr><tr><td>ssh</td><td>安全 shell</td></tr><tr><td>tel</td><td>电话</td></tr><tr><td>urn</td><td>统一资源名称</td></tr><tr><td>view-source</td><td>资源的源代码</td></tr><tr><td>ws/wss</td><td>（加密的） <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API" target="_blank" rel="noreferrer">WebSocket (en-US)</a> 连接</td></tr></tbody></table><h3 id="mime" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types" target="_blank" rel="noreferrer">MIME</a> <a class="header-anchor" href="#mime" aria-hidden="true">#</a></h3><p><strong>媒体类型</strong>（Multipurpose Internet Mail Extensions ）是一种标准，用来表示文档、文件或字节流的性质和格式。 <br> 通用结构</p><blockquote><p>type/subtype 由类型与子类型两个字符串中间用&#39;/&#39;分隔而组成。不允许空格存在。type 表示可以被分多个子类的独立类别。</p></blockquote><p>MIME类型对大小写不敏感，但是传统写法都是小写。 <br> <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_Types#%E9%87%8D%E8%A6%81%E7%9A%84mime%E7%B1%BB%E5%9E%8B" target="_blank" rel="noreferrer"><strong>重要的MIME类型</strong></a></p><ul><li>application/octet-stream 默认值，未知的应用程序文件 ，浏览器一般不会自动执行或询问执行。</li><li>text/plain 文本文件默认值，浏览器认为是可以直接展示的</li><li>text/css</li><li>text/html</li><li>text/javascript</li><li>multipart/form-data 用于HTML表单从浏览器发送信息给服务器。</li></ul><h3 id="port" tabindex="-1">Port <a class="header-anchor" href="#port" aria-hidden="true">#</a></h3><p><strong>端口</strong>，又称协议端口（protocol port）是一种经由软件创建的服务，在一个电脑<a href="https://zh.wikipedia.org/wiki/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1" target="_blank" rel="noreferrer">操作系统</a>中扮演通信的端点（endpoint）。</p><ul><li>标识服务器上提供特定网络服务的进程。</li><li>由本机地址、本机端口号、目标机地址、目标机端口号、通信协议组成的五元组，用于唯一确定正在使用的网络链接。</li></ul><p>TCP，UDP协议使用16bits端口号来表示和区别网络中的不同应用程序，网络层协议IP使用特定的协议号（TCP 6，UDP 17）来表示和区别传输层协议。</p><p><strong>分类</strong></p><ul><li>公认端口（Well Known Ports）：0——1023，它们紧密绑定（binding）于一些服务。通常这些端口的通讯明确表明了某种服务的协议。</li><li>注册端口（Registered Ports）：1024——49151。它们松散地绑定于一些服务</li><li>动态和/或私有端口（Dynamic and/or Private Ports）：49152——65535。理论上，不应为服务分配这些端口。</li></ul><p>常见端口</p><table><thead><tr><th><strong>端口号</strong></th><th><strong>名称</strong></th><th><strong>注释</strong></th></tr></thead><tbody><tr><td>1</td><td>tcpmux</td><td>TCP 端口服务多路复用</td></tr><tr><td>5</td><td>rje</td><td>远程作业入口</td></tr><tr><td>7</td><td>echo</td><td>Echo 服务</td></tr><tr><td>9</td><td>discard</td><td>用于连接测试的空服务</td></tr><tr><td>11</td><td>systat</td><td>用于列举连接了的端口的系统状态</td></tr><tr><td>13</td><td>daytime</td><td>给请求主机发送日期和时间</td></tr><tr><td>17</td><td>qotd</td><td>给连接了的主机发送每日格言</td></tr><tr><td>18</td><td>msp</td><td>消息发送协议</td></tr><tr><td>19</td><td>chargen</td><td>字符生成服务；发送无止境的字符流</td></tr><tr><td>20</td><td>ftp-data</td><td>FTP 数据端口</td></tr><tr><td>21</td><td>ftp</td><td>文件传输协议（FTP）端口；有时被文件服务协议（FSP）使用</td></tr><tr><td>22</td><td>ssh</td><td>安全 Shell（SSH）服务</td></tr><tr><td>23</td><td>telnet</td><td>Telnet 服务</td></tr><tr><td>25</td><td>smtp</td><td>简单邮件传输协议（SMTP）</td></tr><tr><td>37</td><td>time</td><td>时间协议</td></tr><tr><td>39</td><td>rlp</td><td>资源定位协议</td></tr><tr><td>42</td><td>nameserver</td><td>互联网名称服务</td></tr><tr><td>43</td><td>nicname</td><td>WHOIS 目录服务</td></tr><tr><td>49</td><td>tacacs</td><td>用于基于 TCP/IP 验证和访问的终端访问控制器访问控制系统</td></tr><tr><td>50</td><td>re-mail-ck</td><td>远程邮件检查协议</td></tr><tr><td>53</td><td>domain</td><td>域名服务（如 BIND）</td></tr><tr><td>63</td><td>whois++</td><td>WHOIS++，被扩展了的 WHOIS 服务</td></tr><tr><td>67</td><td>bootps</td><td>引导协议（BOOTP）服务；还被动态主机配置协议（DHCP）服务使用</td></tr><tr><td>68</td><td>bootpc</td><td>Bootstrap（BOOTP）客户；还被动态主机配置协议（DHCP）客户使用</td></tr><tr><td>69</td><td>tftp</td><td>小文件传输协议（TFTP）</td></tr><tr><td>70</td><td>gopher</td><td>Gopher 互联网文档搜寻和检索</td></tr><tr><td>71</td><td>netrjs-1</td><td>远程作业服务</td></tr><tr><td>72</td><td>netrjs-2</td><td>远程作业服务</td></tr><tr><td>73</td><td>netrjs-3</td><td>远程作业服务</td></tr><tr><td>73</td><td>netrjs-4</td><td>远程作业服务</td></tr><tr><td>79</td><td>finger</td><td>用于用户联系信息的 Finger 服务</td></tr><tr><td>80</td><td>http</td><td>用于万维网（WWW）服务的超文本传输协议（HTTP）</td></tr><tr><td>88</td><td>kerberos</td><td>Kerberos 网络验证系统</td></tr><tr><td>95</td><td>supdup</td><td>Telnet 协议扩展</td></tr><tr><td>101</td><td>hostname</td><td>SRI-NIC 机器上的主机名服务</td></tr><tr><td>102</td><td>iso-tsap</td><td>ISO 开发环境（ISODE）网络应用</td></tr><tr><td>105</td><td>csnet-ns</td><td>邮箱名称服务器；也被 CSO 名称服务器使用</td></tr><tr><td>107</td><td>rtelnet</td><td>远程 Telnet</td></tr><tr><td>109</td><td>pop2</td><td>邮局协议版本2</td></tr><tr><td>110</td><td>pop3</td><td>邮局协议版本3</td></tr><tr><td>111</td><td>sunrpc</td><td>用于远程命令执行的远程过程调用（RPC）协议，被网络文件系统（NFS）使用</td></tr><tr><td>113</td><td>auth</td><td>验证和身份识别协议</td></tr><tr><td>115</td><td>sftp</td><td>安全文件传输协议（SFTP）服务</td></tr><tr><td>117</td><td>uucp-path</td><td>Unix 到 Unix 复制协议（UUCP）路径服务</td></tr><tr><td>119</td><td>nntp</td><td>用于 USENET 讨论系统的网络新闻传输协议（NNTP）</td></tr><tr><td>123</td><td>ntp</td><td>网络时间协议（NTP）</td></tr><tr><td>137</td><td>netbios-ns</td><td>在红帽企业 Linux 中被 Samba 使用的 NETBIOS 名称服务</td></tr><tr><td>138</td><td>netbios-dgm</td><td>在红帽企业 Linux 中被 Samba 使用的 NETBIOS 数据报服务</td></tr><tr><td>139</td><td>netbios-ssn</td><td>在红帽企业 Linux 中被 Samba 使用的NET BIOS 会话服务</td></tr><tr><td>143</td><td>imap</td><td>互联网消息存取协议（IMAP）</td></tr><tr><td>161</td><td>snmp</td><td>简单网络管理协议（SNMP）</td></tr><tr><td>162</td><td>snmptrap</td><td>SNMP 的陷阱</td></tr><tr><td>163</td><td>cmip-man</td><td>通用管理信息协议（CMIP）</td></tr><tr><td>164</td><td>cmip-agent</td><td>通用管理信息协议（CMIP）</td></tr><tr><td>174</td><td>mailq</td><td>MAILQ</td></tr><tr><td>177</td><td>xdmcp</td><td>X 显示管理器控制协议</td></tr><tr><td>178</td><td>nextstep</td><td>NeXTStep 窗口服务器</td></tr><tr><td>179</td><td>bgp</td><td>边界网络协议</td></tr><tr><td>191</td><td>prospero</td><td>Cliffod Neuman 的 Prospero 服务</td></tr><tr><td>194</td><td>irc</td><td>互联网中继聊天（IRC）</td></tr><tr><td>199</td><td>smux</td><td>SNMP UNIX 多路复用</td></tr><tr><td>201</td><td>at-rtmp</td><td>AppleTalk 选路</td></tr><tr><td>202</td><td>at-nbp</td><td>AppleTalk 名称绑定</td></tr><tr><td>204</td><td>at-echo</td><td>AppleTalk echo 服务</td></tr><tr><td>206</td><td>at-zis</td><td>AppleTalk 区块信息</td></tr><tr><td>209</td><td>qmtp</td><td>快速邮件传输协议（QMTP）</td></tr><tr><td>210</td><td>z39.50</td><td>NISO Z39.50 数据库</td></tr><tr><td>213</td><td>ipx</td><td>互联网络分组交换协议（IPX），被 Novell Netware 环境常用的数据报协议</td></tr><tr><td>220</td><td>imap3</td><td>互联网消息存取协议版本3</td></tr><tr><td>245</td><td>link</td><td>LINK</td></tr><tr><td>347</td><td>fatserv</td><td>Fatmen 服务器</td></tr><tr><td>363</td><td>rsvp_tunnel</td><td>RSVP 隧道</td></tr><tr><td>369</td><td>rpc2portmap</td><td>Coda 文件系统端口映射器</td></tr><tr><td>370</td><td>codaauth2</td><td>Coda 文件系统验证服务</td></tr><tr><td>372</td><td>ulistproc</td><td>UNIX Listserv</td></tr><tr><td>389</td><td>ldap</td><td>轻型目录存取协议（LDAP）</td></tr><tr><td>427</td><td>svrloc</td><td>服务位置协议（SLP）</td></tr><tr><td>434</td><td>mobileip-agent</td><td>可移互联网协议（IP）代理</td></tr><tr><td>435</td><td>mobilip-mn</td><td>可移互联网协议（IP）管理器</td></tr><tr><td>443</td><td>https</td><td>安全超文本传输协议（HTTP）</td></tr><tr><td>444</td><td>snpp</td><td>小型网络分页协议</td></tr><tr><td>445</td><td>microsoft-ds</td><td>通过 TCP/IP 的服务器消息块（SMB）</td></tr><tr><td>464</td><td>kpasswd</td><td>Kerberos 口令和钥匙改换服务</td></tr><tr><td>468</td><td>photuris</td><td>Photuris 会话钥匙管理协议</td></tr><tr><td>487</td><td>saft</td><td>简单不对称文件传输（SAFT）协议</td></tr><tr><td>488</td><td>gss-http</td><td>用于 HTTP 的通用安全服务（GSS）</td></tr><tr><td>496</td><td>pim-rp-disc</td><td>用于协议独立的多址传播（PIM）服务的会合点发现（RP-DISC）</td></tr><tr><td>500</td><td>isakmp</td><td>互联网安全关联和钥匙管理协议（ISAKMP）</td></tr><tr><td>535</td><td>iiop</td><td>互联网内部对象请求代理协议（IIOP）</td></tr><tr><td>538</td><td>gdomap</td><td>GNUstep 分布式对象映射器（GDOMAP）</td></tr><tr><td>546</td><td>dhcpv6-client</td><td>动态主机配置协议（DHCP）版本6客户</td></tr><tr><td>547</td><td>dhcpv6-server</td><td>动态主机配置协议（DHCP）版本6服务</td></tr><tr><td>554</td><td>rtsp</td><td>实时流播协议（RTSP）</td></tr><tr><td>563</td><td>nntps</td><td>通过安全套接字层的网络新闻传输协议（NNTPS）</td></tr><tr><td>565</td><td>whoami</td><td>whoami</td></tr><tr><td>587</td><td>submission</td><td>邮件消息提交代理（MSA）</td></tr><tr><td>610</td><td>npmp-local</td><td>网络外设管理协议（NPMP）本地 / 分布式排队系统（DQS）</td></tr><tr><td>611</td><td>npmp-gui</td><td>网络外设管理协议（NPMP）GUI / 分布式排队系统（DQS）</td></tr><tr><td>612</td><td>hmmp-ind</td><td>HMMP 指示 / DQS</td></tr><tr><td>631</td><td>ipp</td><td>互联网打印协议（IPP）</td></tr><tr><td>636</td><td>ldaps</td><td>通过安全套接字层的轻型目录访问协议（LDAPS）</td></tr><tr><td>674</td><td>acap</td><td>应用程序配置存取协议（ACAP）</td></tr><tr><td>694</td><td>ha-cluster</td><td>用于带有高可用性的群集的心跳服务</td></tr><tr><td>749</td><td>kerberos-adm</td><td>Kerberos 版本5（v5）的“kadmin”数据库管理</td></tr><tr><td>750</td><td>kerberos-iv</td><td>Kerberos 版本4（v4）服务</td></tr><tr><td>765</td><td>webster</td><td>网络词典</td></tr><tr><td>767</td><td>phonebook</td><td>网络电话簿</td></tr><tr><td>873</td><td>rsync</td><td>rsync 文件传输服务</td></tr><tr><td>992</td><td>telnets</td><td>通过安全套接字层的 Telnet（TelnetS）</td></tr><tr><td>993</td><td>imaps</td><td>通过安全套接字层的互联网消息存取协议（IMAPS）</td></tr><tr><td>994</td><td>ircs</td><td>通过安全套接字层的互联网中继聊天（IRCS）</td></tr><tr><td>995</td><td>pop3s</td><td>通过安全套接字层的邮局协议版本3（POPS3）</td></tr></tbody></table><h2 id="cli" tabindex="-1">CLI <a class="header-anchor" href="#cli" aria-hidden="true">#</a></h2><h3 id="ping" tabindex="-1">PING <a class="header-anchor" href="#ping" aria-hidden="true">#</a></h3><p><strong>Packet Internet Groper (因特网包探索器)</strong>——用于测试网络连接量的程序。 <br> Ping是工作在 TCP/IP网络体系结构中应用层的一个服务命令， 主要是向特定的目的主机发送 ICMP（Internet Control Message Protocol，因特网报文控制协议）Echo 请求报文，测试目的站是否可达及了解其有关状态。</p><p>ping用于确定本地主机是否能与另一台主机成功交换(发送与接收)数据包，再根据返回的信息，就可以推断<a href="https://baike.baidu.com/item/TCP%2FIP/214077" target="_blank" rel="noreferrer">TCP/IP</a>参数是否设置正确，以及运行是否正常、网络是否通畅等。Ping命令可以进行以下操作：</p><ol><li>通过将ICMP(Internet控制消息协议)回显数据包发送到计算机并侦听回显回复数据包来验证与一台或多台远程计算机的连接。</li><li>每个发送的数据包最多等待一秒。</li><li>打印已传输和接收的数据包数。</li></ol><p>需要注意的是，Ping成功并不一定就代表<a href="https://baike.baidu.com/item/TCP%2FIP/214077" target="_blank" rel="noreferrer">TCP/IP</a>配置正确，有可能还要执行大量的本地主机与远程主机的数据包交换，才能确信TCP/IP配置的正确性。如果执行ping成功而网络仍无法使用，那么问题很可能出在网络系统的软件配置方面，ping成功只保证当前主机与目的主机间存在一条连通的物理路径  。</p><p><strong>ping [-t] [-a] [-n count] [-l size] [-f] [-i TTL]</strong> <br> ** [-r count] [-s count] [[-j host-list] | [-k host-list]]** <br> ** [-w timeout] [-S srcaddr] [-c compartment] [-p]** <br> ** [-4] [-6] target_name** <br> 选项:</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">-t             Ping 指定的主机，直到停止。</span></span>
<span class="line"><span style="color:#abb2bf;">-a             将地址解析为主机名。</span></span>
<span class="line"><span style="color:#abb2bf;">-n count       要发送的回显请求数。</span></span>
<span class="line"><span style="color:#abb2bf;">-l size        发送缓冲区大小。</span></span>
<span class="line"><span style="color:#abb2bf;">-f             在数据包中设置“不分段”标记(仅适用于 IPv4)。</span></span>
<span class="line"><span style="color:#abb2bf;">-i TTL         生存时间。</span></span>
<span class="line"><span style="color:#abb2bf;">-r count       记录计数跃点的路由(仅适用于 IPv4)。</span></span>
<span class="line"><span style="color:#abb2bf;">-s count       计数跃点的时间戳(仅适用于 IPv4)。</span></span>
<span class="line"><span style="color:#abb2bf;">-j host-list   与主机列表一起使用的松散源路由(仅适用于 IPv4)。</span></span>
<span class="line"><span style="color:#abb2bf;">-k host-list    与主机列表一起使用的严格源路由(仅适用于 IPv4)。</span></span>
<span class="line"><span style="color:#abb2bf;">-w timeout     等待每次回复的超时时间(毫秒)。</span></span>
<span class="line"><span style="color:#abb2bf;">-S srcaddr     要使用的源地址。</span></span>
<span class="line"><span style="color:#abb2bf;">-c compartment 路由隔离舱标识符。</span></span>
<span class="line"><span style="color:#abb2bf;">-p             Ping Hyper-V 网络虚拟化提供程序地址。</span></span>
<span class="line"><span style="color:#abb2bf;">-4             强制使用 IPv4。</span></span>
<span class="line"><span style="color:#abb2bf;">-6             强制使用 IPv6。</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>localhost：环回地址127.0.0.1的别名, ping环回地址可以验证本地计算机是否正确配置安装TCP/IP协议。 <br> 一个网络故障的典型检测过程是从<strong>本地主机</strong>开始的,在大家检测localhost工作正常以后,可以开始按顺序检测本机IP地址、本地局域网相同子网主机、默认网关,最后检测目标主机的网络是否正常。</p><p><strong>TTL（Time To Live，IPv4包头的一个8 bit字段），指定IP包被路由器丢弃之前允许通过的最大网段数量。</strong></p><h3 id="tracert" tabindex="-1">Tracert <a class="header-anchor" href="#tracert" aria-hidden="true">#</a></h3><p>显示数据包到达目标主机所经过的路径（路由器），并显示到达每个节点（路由器）的时间 <br> <strong>tracert [-d] [-h maximum_hops] [-j host-list] [-w timeout]</strong> <br> ** [-R] [-S srcaddr] [-4] [-6] target_name** <br> 选项:</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">-d                 不将地址解析成主机名。</span></span>
<span class="line"><span style="color:#abb2bf;">-h maximum_hops    搜索目标的最大跃点数。</span></span>
<span class="line"><span style="color:#abb2bf;">-j host-list       与主机列表一起的松散源路由(仅适用于 IPv4)。</span></span>
<span class="line"><span style="color:#abb2bf;">-w timeout         等待每个回复的超时时间(以毫秒为单位)。</span></span>
<span class="line"><span style="color:#abb2bf;">-R                 跟踪往返行程路径(仅适用于 IPv6)。</span></span>
<span class="line"><span style="color:#abb2bf;">-S srcaddr         要使用的源地址(仅适用于 IPv6)。</span></span>
<span class="line"><span style="color:#abb2bf;">-4                 强制使用 IPv4。</span></span>
<span class="line"><span style="color:#abb2bf;">-6                 强制使用 IPv6。</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>返回结果格式</strong></p><ul><li>最左侧的, 1, 2.,经过路由节点序号;</li><li>中间这三列,单位是ms,是表示我们连接到每个路由节点的速度,返回速度和多次链接反馈的平均值;</li><li>后面的IP,就是每个路由节点对应的IP</li><li>*,在第7个路由节点上,返回消息是超时。</li></ul><p><strong>工作原理</strong> <br> 通过向目标发送不同IP生存时间(TTL)值的&quot;Internet控制消息协议(ICMP)&quot;回应数据包，Tracert诊断程序确定到目标所采取的路由。要求路径上的每个路由器在转发数据包之前至少将数据包上的TTL递减1，数据包上的TTL减为0时,路由器应该将&quot;ICMP已超时”的消息发回源系统。 <br> Tracert先发送TTL为1的回应数据包，并在随后的每次发送过程将TTL递增1，直到目标响应或TTL达到最大值，从而<strong>确定路由</strong>。通过检查中间路由器发回的&quot;ICMP已超时”的消息确定路由。某些路由器不经询问直接丢弃TTL过期的数据包，这在Tracert实用程序中看不到。</p><h3 id="pathping" tabindex="-1">pathping <a class="header-anchor" href="#pathping" aria-hidden="true">#</a></h3><p><strong>路由跟踪工具</strong>，提供有关在源和目标之间的中间路由的延迟和网络丢包的信息，它将 ping 和 tracert 命令的功能与这两个工具所不提供的其他信息结合起来，综合了二者的功能</p><p><strong>pathping [-g host-list] [-h maximum_hops] [-i address] [-n]</strong> <br> ** [-p period] [-q num_queries] [-w timeout]** <br> ** [-4] [-6] target_name** <br> 选项:</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">-g host-list     与主机列表一起的松散源路由。</span></span>
<span class="line"><span style="color:#abb2bf;">-h maximum_hops  搜索目标的最大跃点数。</span></span>
<span class="line"><span style="color:#abb2bf;">-i address       使用指定的源地址。</span></span>
<span class="line"><span style="color:#abb2bf;">-n               不将地址解析成主机名。</span></span>
<span class="line"><span style="color:#abb2bf;">-p period        两次 Ping 之间等待的时间(以毫秒为单位)。</span></span>
<span class="line"><span style="color:#abb2bf;">-q num_queries   每个跃点的查询数。</span></span>
<span class="line"><span style="color:#abb2bf;">-w timeout       每次回复等待的超时时间(以毫秒为单位)。</span></span>
<span class="line"><span style="color:#abb2bf;">-4               强制使用 IPv4。</span></span>
<span class="line"><span style="color:#abb2bf;">-6               强制使用 IPv6。</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="nslookup" tabindex="-1">nslookup <a class="header-anchor" href="#nslookup" aria-hidden="true">#</a></h3><p>用于解析域名，一般用来检测本机的DNS设置是否配置正确</p><ul><li>nslookup [-opt ...] # 使用默认服务器的交互模式</li><li>nslookup [-opt ...] - server # 使用 &quot;server&quot; 的交互模式</li><li>nslookup [-opt ...] host # 仅查找使用默认服务器的 &quot;host&quot;</li><li>nslookup [-opt ...] host server # 仅查找使用 &quot;server&quot; 的 &quot;host&quot;</li></ul><h3 id="netstat" tabindex="-1">netstat <a class="header-anchor" href="#netstat" aria-hidden="true">#</a></h3><p>显示协议统计信息和当前 TCP/IP 网络连接 <br> <strong>NETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-x] [-t] [interval]</strong> <br> ** -a 显示所有连接和侦听端口**。 <br> -b 显示在创建每个连接或侦听端口时涉及的可执行程序。 <br> <strong>-e 显示以太网统计信息</strong>。 <br> -f 显示外部地址的完全限定域名(FQDN)。 <br> <strong>-n 以数字形式显示地址和端口号</strong>。 <br> -o 显示拥有的与每个连接关联的进程 ID。 <br> -p proto 显示 proto 指定的协议的连接 <br> -q 显示所有连接、侦听端口和绑定的非侦听 TCP 端口。 <br> -r 显示路由表。 <br> ** -s 显示每个协议的统计信息。**默认情况下显示 IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 和 UDPv6 的统计信息; <br> -t 显示当前连接卸载状态。 <br> -x 显示 NetworkDirect 连接、侦听器和共享终结点。 <br> -y 显示所有连接的 TCP 连接模板。无法与其他选项结合使用。 <br> interval 重新显示选定的统计信息，各个显示间暂停的间隔秒数。 <br> Netstat是在<a href="https://baike.baidu.com/item/%E5%86%85%E6%A0%B8/108410" target="_blank" rel="noreferrer">内核</a>中访问网络连接状态及其相关信息的程序，它能提供TCP连接，TCP和UDP监听，进程内存管理的相关报告。 <br> 可以显示<a href="https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E8%A1%A8/2707408" target="_blank" rel="noreferrer">路由表</a>、实际的网络连接以及每一个网络接口设备的状态信息，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。</p><p>查看所有端口：netstat -ano <br> 查看指定端口：netstat -ano | findstr &quot;808&quot; <br> 查看指定进程：tasklist | findstr &quot;808&quot;</p><p>arp -a</p><h2 id="网络设备" tabindex="-1">网络设备 <a class="header-anchor" href="#网络设备" aria-hidden="true">#</a></h2><p><strong>双工</strong>（duplex）：二台<a href="https://zh.wikipedia.org/wiki/%E9%80%9A%E8%A8%8A" target="_blank" rel="noreferrer">通信</a>设备之间，允许有双向的资料传输</p><ul><li>半双工（half-duplex）的系统允许二台设备之间的双向资料传输，但不能同时进行。</li><li>全双工（full-duplex）的系统允许二台设备间同时进行双向资料传输。</li></ul><p><strong>时分双工</strong>（TDD，Time-Division Duplexing）：利用<a href="https://zh.wikipedia.org/wiki/%E6%99%82%E9%96%93%E5%88%86%E9%9A%94%E5%A4%9A%E5%B7%A5" target="_blank" rel="noreferrer">时间分隔多任务</a>技术来分隔发送及接收的信号。 <br> <strong>频分双工</strong>（FDD，Frequency-Division Duplexing）：利用<a href="https://zh.wikipedia.org/wiki/%E9%A0%BB%E7%8E%87%E5%88%86%E9%9A%94%E5%A4%9A%E5%B7%A5" target="_blank" rel="noreferrer">频率分隔多任务</a>技术来分隔发送及接收的信号。上传及 <br> 下载的区段之间用“频率偏移”（frequency offset）的方式分隔。</p><p>交换机（Switch）：将多个网络设备连接起来组成一个局域网。 <br> <strong>网络交换机</strong>（Network switch）：一种网络硬件，通过<a href="https://zh.wikipedia.org/wiki/%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2" target="_blank" rel="noreferrer">报文交换</a>接收和转发数据到目标设备，它能够在计算机网络上连接不同的设备。</p><p><strong>路由器</strong>（Router）：又称网关设备，用于连接多个逻辑上分开的网络。 <br> <strong>中继器</strong>（Repeater）：一个将输入信号增强放大的<a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E6%93%AC%E4%BF%A1%E8%99%9F" target="_blank" rel="noreferrer">模拟</a>设备，而不考虑输入信号种类。 <br> <strong>调制解调器</strong>（Modem，modulator-demodulator）：俗称“猫”，一个将<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7" target="_blank" rel="noreferrer">数字信号</a>调变到模拟信号上进行传输，并解调收到的模拟信号以得到数字信号的电子设备。 <br> <strong>桥接器</strong>（network bridge，网桥）：一种<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C" target="_blank" rel="noreferrer">网络</a>设备，负责网络桥接（network bridging）。将网络的多个网段在数据链路层连接起来。</p><ul><li>无线桥接（Wireless bridge）：连接两个或多个物理上或逻辑上（不同网络传输协议）分开的网络区段的硬件组件。</li><li>透明桥接：使用一个称为转发信息库的表来控制网段之间的帧转发。</li></ul><p><strong>分组交换</strong>（Packet switching）：一种相对于<a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2" target="_blank" rel="noreferrer">电路交换</a>的通信范例，分组（又称消息、或消息碎片）在节点间单独路由，不需要在传输前先建立通信路径。</p><p><strong>多路复用</strong>（Multiplexing）：在一个<a href="https://zh.wikipedia.org/wiki/%E4%BF%A1%E9%81%93" target="_blank" rel="noreferrer">信道</a>上<a href="https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93" target="_blank" rel="noreferrer">传输</a>多路<a href="https://zh.wikipedia.org/wiki/%E4%BF%A1%E5%8F%B7" target="_blank" rel="noreferrer">信号</a>或<a href="https://zh.wikipedia.org/w/index.php?title=%E6%95%B0%E6%8D%AE%E6%B5%81&amp;action=edit&amp;redlink=1" target="_blank" rel="noreferrer">数据流</a>的过程和技术。</p><ul><li><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E5%88%86%E5%A4%8D%E7%94%A8" target="_blank" rel="noreferrer">时分复用</a>（TDM）</li><li><a href="https://zh.wikipedia.org/wiki/%E9%A2%91%E5%88%86%E5%A4%8D%E7%94%A8" target="_blank" rel="noreferrer">频分复用</a>（FDM）</li><li><a href="https://zh.wikipedia.org/w/index.php?title=%E7%A9%BA%E5%88%86%E5%A4%8D%E7%94%A8&amp;action=edit&amp;redlink=1" target="_blank" rel="noreferrer">空分复用</a>（SDM）</li><li><a href="https://zh.wikipedia.org/wiki/%E7%A0%81%E5%88%86%E5%A4%9A%E5%9D%80" target="_blank" rel="noreferrer">码分复用</a>（CDM）</li></ul>`,238),g=[b];function u(P,f,T,E,k,C){return e(),r("div",null,g)}const B=t(c,[["render",u]]);export{m as __pageData,B as default};
