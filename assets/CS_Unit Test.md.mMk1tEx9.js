import{_ as s,o as n,c as a,R as l}from"./chunks/framework.RQC-XgH8.js";const u=JSON.parse('{"title":"Unit Test","description":"","frontmatter":{"title":"Unit Test","created_at":"2023-02-18T05:29:41.000Z","updated_at":"2023-04-25T14:37:58.000Z","word_count":1485},"headers":[],"relativePath":"CS/Unit Test.md","filePath":"CS/Unit Test.md"}'),p={name:"CS/Unit Test.md"},o=l(`<h2 id="junit" tabindex="-1"><a href="https://junit.org/junit5/" target="_blank" rel="noreferrer">JUnit</a> <a class="header-anchor" href="#junit" aria-label="Permalink to &quot;[JUnit](https://junit.org/junit5/)&quot;">​</a></h2><p>Fixture</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// main</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> Calculator</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> long</span><span style="color:#E06C75;"> n </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> long</span><span style="color:#61AFEF;"> add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;font-style:italic;"> x</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        n </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> n </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> x;</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> n;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> long</span><span style="color:#61AFEF;"> sub</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;font-style:italic;"> x</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        n </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> n </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> x;</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> n;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// test</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> CalculatorTest</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    Calculator</span><span style="color:#E06C75;"> calculator</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    static</span><span style="color:#E5C07B;"> Database</span><span style="color:#E06C75;"> db</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">BeforeAll</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> initDatabase</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        db </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> createDb</span><span style="color:#ABB2BF;">(...);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">AfterAll</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> dropDatabase</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        ...</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">BeforeEach</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> setUp</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">calculator</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Calculator</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">AfterEach</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> tearDown</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">calculator</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> testAdd</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">        assertEquals</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">calculator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#61AFEF;">        assertEquals</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">calculator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#61AFEF;">        assertEquals</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">130</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">calculator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">) ,</span></span>
<span class="line"><span style="color:#98C379;">                     &quot;The optional assertion message is now the last parameter.&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> testSub</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">        assertAll</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sub method&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            () </span><span style="color:#C678DD;">-&gt;</span><span style="color:#61AFEF;">  assertEquals</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">calculator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sub</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)),</span></span>
<span class="line"><span style="color:#ABB2BF;">            () </span><span style="color:#C678DD;">-&gt;</span><span style="color:#61AFEF;"> assertEquals</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">calculator</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sub</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>异常测试</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// main</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> Factorial</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> long</span><span style="color:#61AFEF;"> fact</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;font-style:italic;"> n</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (n </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">            throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> IllegalArgumentException</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Negative&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        long</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; i </span><span style="color:#56B6C2;">&lt;=</span><span style="color:#ABB2BF;"> n; i++) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            r </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> r </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> i;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> r;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testNegative</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">    assertThrows</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">IllegalArgumentException</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Executable</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">        public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> execute</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Throwable</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">            Factorial</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fact</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E06C75;">    })</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// or</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testNegative</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    Throwable</span><span style="color:#E06C75;"> exception </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> assertThrows</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">IllegalArgumentException</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> () </span><span style="color:#C678DD;">-&gt;</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        Factorial</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fact</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    })</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    assertEquals</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;Negative&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> exception</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getMessage</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>超时</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> timeoutNotExceeded</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // The following assertion succeeds.</span></span>
<span class="line"><span style="color:#61AFEF;">    assertTimeout</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">ofMinutes</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> () </span><span style="color:#C678DD;">-&gt;</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Perform task that takes less than 2 minutes.</span></span>
<span class="line"><span style="color:#E06C75;">    })</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> timeoutNotExceededWithResult</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // The following assertion succeeds, and returns the supplied object.</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> actualResult </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> assertTimeout</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">ofMinutes</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> () </span><span style="color:#C678DD;">-&gt;</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#98C379;"> &quot;a result&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    })</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    assertEquals</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;a result&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> actualResult)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>条件测试</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Disabled</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testBug101</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 这个测试不会运行</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">EnabledIfEnvironmentVariable</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">named</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;DEBUG&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> matches</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;true&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testOnlyOnDebugMode</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // TODO: this test is only run on DEBUG=true</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>参数化测试</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 单参数</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">ParameterizedTest</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">ValueSource</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">ints</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> { </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">100</span><span style="color:#E06C75;"> })</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testAbsNegative</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> x) {</span></span>
<span class="line"><span style="color:#61AFEF;">    assertEquals</span><span style="color:#E06C75;">(</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">abs</span><span style="color:#ABB2BF;">(x)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 多参数</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">ParameterizedTest</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">MethodSource</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testCapitalize</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> input</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> result) {</span></span>
<span class="line"><span style="color:#61AFEF;">    assertEquals</span><span style="color:#E06C75;">(result</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StringUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">capitalize</span><span style="color:#ABB2BF;">(input)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">static</span><span style="color:#E5C07B;"> List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">Arguments</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> testCapitalize</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> List</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">( </span><span style="color:#7F848E;font-style:italic;">// arguments:</span></span>
<span class="line"><span style="color:#E5C07B;">            Arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">arguments</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Abc&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#E5C07B;">            Arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">arguments</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;APPLE&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Apple&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#E5C07B;">            Arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">arguments</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;gooD&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Good&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// csv</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">ParameterizedTest</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">CsvSource</span><span style="color:#E06C75;">({ </span><span style="color:#98C379;">&quot;abc, Abc&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;APPLE, Apple&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;gooD, Good&quot;</span><span style="color:#E06C75;"> })</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @CsvFileSource(resources = { &quot;/test-capitalize.csv&quot; })</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> testCapitalize</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> input</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> result) {</span></span>
<span class="line"><span style="color:#61AFEF;">    assertEquals</span><span style="color:#E06C75;">(result</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StringUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">capitalize</span><span style="color:#ABB2BF;">(input)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="assertj" tabindex="-1"><a href="https://assertj.github.io/doc/" target="_blank" rel="noreferrer">AssertJ</a> <a class="header-anchor" href="#assertj" aria-label="Permalink to &quot;[AssertJ](https://assertj.github.io/doc/)&quot;">​</a></h2><p>流式断言</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> assertjDemo</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">  assertThat</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isEmpty</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isTrue</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  assertThat</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Arrays</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">asList</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;3&quot;</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">doesNotContainNull</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">containsSequence</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;3&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">isNotEmpty</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  assertThat</span><span style="color:#E06C75;">(someFile)</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">exists</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">isFile</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">canRead</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">      .</span><span style="color:#61AFEF;">canWrite</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="hamcrest" tabindex="-1"><a href="https://github.com/hamcrest/JavaHamcrest" target="_blank" rel="noreferrer">Hamcrest</a> <a class="header-anchor" href="#hamcrest" aria-label="Permalink to &quot;[Hamcrest](https://github.com/hamcrest/JavaHamcrest)&quot;">​</a></h2><p>A library of matcher objects (also known as constraints or predicates).</p><p><strong>Core</strong></p><ul><li>anything - always matches, useful if you don&#39;t care what the object under test is</li><li>describedAs - decorator to adding custom failure description</li><li>is - decorator to improve readability</li></ul><p><strong>Logical</strong></p><ul><li>allOf - matches if all matchers match, short circuits (like Java &amp;&amp;)</li><li>anyOf - matches if any matchers match, short circuits (like Java ||)</li><li>not - matches if the wrapped matcher doesn&#39;t match and vice versa</li></ul><p><strong>Object</strong></p><ul><li>equalTo - test object equality using Object.equals</li><li>hasToString - test Object.toString</li><li>instanceOf, isCompatibleType - test type</li><li>notNullValue, nullValue - test for null</li><li>sameInstance - test object identity</li></ul><p><strong>Beans</strong></p><ul><li>hasProperty - test JavaBeans properties</li></ul><p><strong>Collections</strong></p><ul><li>array - test an array&#39;s elements against an array of matchers</li><li>hasEntry, hasKey, hasValue - test a map contains an entry, key or value</li><li>hasItem, hasItems - test a collection contains elements</li><li>hasItemInArray - test an array contains an element</li></ul><p><strong>Number</strong></p><ul><li>closeTo - test floating point values are close to a given value</li><li>greaterThan, greaterThanOrEqualTo, lessThan, lessThanOrEqualTo - test ordering</li></ul><p><strong>Text</strong></p><ul><li>equalToIgnoringCase - test string equality ignoring case</li><li>equalToIgnoringWhiteSpace - test string equality ignoring differences in runs of whitespace</li><li>containsString, endsWith, startsWith - test string matching</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> hamcrestDemo</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // allOf: 所有条件都必须满足，相当于&amp;&amp;</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">allOf</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;my&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">containsString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Name&quot;</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // either: 两者之一</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">either</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">equalToIgnoringCase</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;my&quot;</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">or</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">endsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Name&quot;</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // everyItem: 每个元素都需满足特定条件</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Arrays</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">asList</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;my&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;mine&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">everyItem</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;m&quot;</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // hasItems: 包含多个元素</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Arrays</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">asList</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;my&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;mine&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;your&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">hasItems</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;your&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;my&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // is: is(equalTo(x))或is(instanceOf(clazz.class))的简写</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">is</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // anything(): 任何情况下，都匹配正确</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">anything</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;123&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">is</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">notNullValue</span><span style="color:#ABB2BF;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">greaterThanOrEqualTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // emptyArray: 空数组</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> String</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">], </span><span style="color:#61AFEF;">emptyArray</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">in</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Arrays</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">asList</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;yourName&quot;</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">is</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">in</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Arrays</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">asList</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myName&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;yourName&quot;</span><span style="color:#ABB2BF;">))));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // Map匹配</span></span>
<span class="line"><span style="color:#E5C07B;">  Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> String</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> myMap </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> HashMap</span><span style="color:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">  myMap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;john&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // hasEntry: key &amp;&amp; value匹配</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(myMap, </span><span style="color:#61AFEF;">hasEntry</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;john&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // hasKey: key匹配</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(myMap, </span><span style="color:#61AFEF;">hasKey</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">equalTo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Name&quot;</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // hasValue: value匹配</span></span>
<span class="line"><span style="color:#E5C07B;">  MatcherAssert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assertThat</span><span style="color:#ABB2BF;">(myMap, </span><span style="color:#61AFEF;">hasValue</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">equalTo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;john&quot;</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="mockito" tabindex="-1"><a href="https://github.com/mockito/mockito" target="_blank" rel="noreferrer">mockito</a> <a class="header-anchor" href="#mockito" aria-label="Permalink to &quot;[mockito](https://github.com/mockito/mockito)&quot;">​</a></h2><p>底层使用了动态代理（CGLIB），需要被mock的对象，Mockito会生成一个子类继承该类，代理的对象会代替真实的对象进行执行。子类会覆盖父类。</p><ul><li><a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#mock-java.lang.Class-" target="_blank" rel="noreferrer">mock()</a>/<a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mock.html" target="_blank" rel="noreferrer">@Mock</a>: create mock <ul><li>optionally specify how it should behave via <a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/stubbing/Answer.html" target="_blank" rel="noreferrer">Answer</a>/<a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/MockSettings.html" target="_blank" rel="noreferrer">MockSettings</a></li><li><a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#when-T-" target="_blank" rel="noreferrer">when()</a>/<a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/BDDMockito.html#given-T-" target="_blank" rel="noreferrer">given()</a> to specify how a mock should behave</li><li>If the provided answers don&#39;t fit your needs, write one yourself extending the <a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/stubbing/Answer.html" target="_blank" rel="noreferrer">Answer</a> interface</li></ul></li><li><a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#spy-T-" target="_blank" rel="noreferrer">spy()</a>/<a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Spy.html" target="_blank" rel="noreferrer">@Spy</a>: partial mocking, real methods are invoked but still can be verified and stubbed</li><li><a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/InjectMocks.html" target="_blank" rel="noreferrer">@InjectMocks</a>: automatically inject mocks/spies fields annotated with @Spy or @Mock</li><li><a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#verify-T-" target="_blank" rel="noreferrer">verify()</a>: to check methods were called with given arguments <ul><li>can use flexible argument matching, for example any expression via the <a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/ArgumentMatchers.html#any--" target="_blank" rel="noreferrer">any()</a></li><li>or capture what arguments were called using <a href="http://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Captor.html" target="_blank" rel="noreferrer">@Captor</a> instead</li></ul></li></ul><p>验证操作</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"> // 使用Mock对象</span></span>
<span class="line"><span style="color:#E5C07B;"> mockOne</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;one&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 普通验证</span></span>
<span class="line"><span style="color:#61AFEF;"> verify</span><span style="color:#E06C75;">(mockOne)</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;one&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 验证某个交互是否从未被执行</span></span>
<span class="line"><span style="color:#61AFEF;"> verify</span><span style="color:#E06C75;">(mockOne</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;"> never</span><span style="color:#E06C75;">())</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;two&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 验证mock对象没有交互过</span></span>
<span class="line"><span style="color:#61AFEF;"> verifyZeroInteractions</span><span style="color:#E06C75;">(mockTwo</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> mockThree)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>执行顺序</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// A. 验证mock一个对象的函数执行顺序</span></span>
<span class="line"><span style="color:#E5C07B;"> List</span><span style="color:#E06C75;"> singleMock </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> mock</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> //using a single mock</span></span>
<span class="line"><span style="color:#E5C07B;"> singleMock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was added first&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;"> singleMock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was added second&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 为该mock对象创建一个inOrder对象</span></span>
<span class="line"><span style="color:#E5C07B;"> InOrder</span><span style="color:#E06C75;"> inOrder </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> inOrder</span><span style="color:#E06C75;">(singleMock)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 确保add函数首先执行的是add(&quot;was added first&quot;),然后才是add(&quot;was added second&quot;)</span></span>
<span class="line"><span style="color:#E5C07B;"> inOrder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verify</span><span style="color:#ABB2BF;">(singleMock).</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was added first&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;"> inOrder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verify</span><span style="color:#ABB2BF;">(singleMock).</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was added second&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // B .验证多个mock对象的函数执行顺序</span></span>
<span class="line"><span style="color:#E5C07B;"> List</span><span style="color:#E06C75;"> firstMock </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> mock</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;"> List</span><span style="color:#E06C75;"> secondMock </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> mock</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> //using mocks</span></span>
<span class="line"><span style="color:#E5C07B;"> firstMock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was called first&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;"> secondMock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was called second&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 为这两个Mock对象创建inOrder对象</span></span>
<span class="line"><span style="color:#E5C07B;"> InOrder</span><span style="color:#E06C75;"> inOrder </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> inOrder</span><span style="color:#E06C75;">(firstMock</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> secondMock)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 验证它们的执行顺序</span></span>
<span class="line"><span style="color:#E5C07B;"> inOrder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verify</span><span style="color:#ABB2BF;">(firstMock).</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was called first&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;"> inOrder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verify</span><span style="color:#ABB2BF;">(secondMock).</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;was called second&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><a href="https://github.com/powermock/powermock" target="_blank" rel="noreferrer">PowerMock</a> 本质是通过修改字节码来实现对静态和final等方法的mock的</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">RunWith</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">PowerMockRunner</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">PrepareForTest</span><span style="color:#E06C75;">( { </span><span style="color:#E5C07B;">Static</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;"> })</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> YourTestCase</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> testMethodThatCallsStaticMethod</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // mock all the static methods in a class called &quot;Static&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">        PowerMockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mockStatic</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Static</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // use Mockito to set up your expectation</span></span>
<span class="line"><span style="color:#E5C07B;">        Mockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">when</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Static</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">firstStaticMethod</span><span style="color:#ABB2BF;">(param)).</span><span style="color:#61AFEF;">thenReturn</span><span style="color:#ABB2BF;">(value);</span></span>
<span class="line"><span style="color:#E5C07B;">        Mockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">when</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Static</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">secondStaticMethod</span><span style="color:#ABB2BF;">()).</span><span style="color:#61AFEF;">thenReturn</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">123</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // execute your test</span></span>
<span class="line"><span style="color:#E5C07B;">        classCallStaticMethodObj</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Different from Mockito, always use PowerMockito.verifyStatic(Class) first</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // to start verifying behavior</span></span>
<span class="line"><span style="color:#E5C07B;">        PowerMockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verifyStatic</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Static</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Mockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">times</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // IMPORTANT:  Call the static method you want to verify</span></span>
<span class="line"><span style="color:#E5C07B;">        Static</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">firstStaticMethod</span><span style="color:#ABB2BF;">(param);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // IMPORTANT: You need to call verifyStatic(Class) per method verification,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // so call verifyStatic(Class) again</span></span>
<span class="line"><span style="color:#E5C07B;">        PowerMockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verifyStatic</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Static</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// default times is once</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Again call the static method which is being verified</span></span>
<span class="line"><span style="color:#E5C07B;">        Static</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">secondStaticMethod</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Again, remember to call verifyStatic(Class)</span></span>
<span class="line"><span style="color:#E5C07B;">        PowerMockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verifyStatic</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Static</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Mockito</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">never</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // And again call the static method.</span></span>
<span class="line"><span style="color:#E5C07B;">        Static</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">thirdStaticMethod</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><ul><li>Whitebox.setInternalState() set a non-public member of an instance or class.</li><li>Whitebox.getInternalState() get a non-public member of an instance or class.</li><li>Whitebox.invokeMethod() invoke a non-public method of an instance or class.</li><li>Whitebox.invokeConstructor() create an instance of a class with a private constructor.</li></ul><h2 id="spring-test" tabindex="-1"><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing" target="_blank" rel="noreferrer">Spring Test</a> <a class="header-anchor" href="#spring-test" aria-label="Permalink to &quot;[Spring Test](https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing)&quot;">​</a></h2><ul><li><p><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#unit-testing-utilities" target="_blank" rel="noreferrer">General Testing Utilities</a></p></li><li><p><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#unit-testing-spring-mvc" target="_blank" rel="noreferrer">Spring MVC Testing Utilities</a></p></li><li><p><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing-annotations" target="_blank" rel="noreferrer">Annotations</a></p><ul><li><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing-annotations-spring" target="_blank" rel="noreferrer">Spring Testing Annotations</a></li><li><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing-annotations-standard" target="_blank" rel="noreferrer">Standard Annotation Support</a></li><li><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing-annotations-junit4" target="_blank" rel="noreferrer">Spring JUnit 4 Testing Annotations</a></li><li><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing-annotations-junit-jupiter" target="_blank" rel="noreferrer">Spring JUnit Jupiter Testing Annotations</a></li><li><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#integration-testing-annotations-meta" target="_blank" rel="noreferrer">Meta-Annotation Support for Testing</a></li></ul></li><li><p><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#testcontext-framework" target="_blank" rel="noreferrer">Spring TestContext Framework</a></p></li><li><p><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/testing.html#spring-mvc-test-framework" target="_blank" rel="noreferrer">MockMvc</a></p><ul><li>MockMvcBuilders.*</li><li>MockMvcRequestBuilders.*</li><li>MockMvcResultMatchers.*</li><li>MockMvcResultHandlers.*</li></ul></li></ul><h3 id="spring-boot-test" tabindex="-1"><a href="https://docs.spring.io/spring-boot/docs/2.7.8/reference/html/features.html#features.testing" target="_blank" rel="noreferrer">Spring Boot Test</a> <a class="header-anchor" href="#spring-boot-test" aria-label="Permalink to &quot;[Spring Boot Test](https://docs.spring.io/spring-boot/docs/2.7.8/reference/html/features.html#features.testing)&quot;">​</a></h3><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">SpringBootTest</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">AutoConfigureMockMvc</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> MyMockMvcTests</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> testWithMockMvc</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">Autowired</span><span style="color:#E5C07B;"> MockMvc</span><span style="color:#E06C75;font-style:italic;"> mvc</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        mockMvc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">perform</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/persons/{id}&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">35</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">andDo</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">andExpect</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">status</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">isOk</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">andExpect</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">content</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Hello World&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // If Spring WebFlux is on the classpath, you can drive MVC tests with a WebTestClient</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> testWithWebTestClient</span><span style="color:#ABB2BF;">(@</span><span style="color:#E5C07B;">Autowired</span><span style="color:#E5C07B;"> WebTestClient</span><span style="color:#E06C75;font-style:italic;"> webClient</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        webClient</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">uri</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">exchange</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">expectStatus</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">isOk</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">expectBody</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">isEqualTo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Hello World&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.beans.factory.annotation.Autowired</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.boot.test.mock.mockito.MockBean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.http.MediaType</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.test.web.servlet.MockMvc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> org.mockito.BDDMockito.given</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> org.springframework.test.web.servlet.result.MockMvcResultMatchers.content</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> org.springframework.test.web.servlet.result.MockMvcResultMatchers.status</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">WebMvcTest</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">UserVehicleController</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> MyControllerTests</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> MockMvc</span><span style="color:#E06C75;"> mvc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">MockBean</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> UserVehicleService</span><span style="color:#E06C75;"> userVehicleService</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> testExample</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">        given</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">userVehicleService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getVehicleDetails</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sboot&quot;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">willReturn</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> VehicleDetails</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Honda&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Civic&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">mvc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">perform</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/sboot/vehicle&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">MediaType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">TEXT_PLAIN</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">andExpect</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">status</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">isOk</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">andExpect</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">content</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Honda Civic&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.beans.factory.annotation.Autowired</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> org.assertj.core.api.Assertions.assertThat</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">DataJpaTest</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> MyRepositoryTests</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> TestEntityManager</span><span style="color:#E06C75;"> entityManager</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Autowired</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> UserRepository</span><span style="color:#E06C75;"> repository</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> testExample</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">entityManager</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">persist</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> User</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sboot&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;1234&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">        User</span><span style="color:#E06C75;"> user</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">repository</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">findByUsername</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sboot&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">        assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">user</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getUsername</span><span style="color:#ABB2BF;">()).</span><span style="color:#61AFEF;">isEqualTo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sboot&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">        assertThat</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">user</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeNumber</span><span style="color:#ABB2BF;">()).</span><span style="color:#61AFEF;">isEqualTo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;1234&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p><a href="https://github.com/skyscreamer/JSONassert" target="_blank" rel="noreferrer">JSONassert</a>: An assertion library for JSON. <br> <a href="https://github.com/jayway/JsonPath" target="_blank" rel="noreferrer">JsonPath</a>: XPath for JSON.</p>`,48),e=[o];function r(t,c,B,i,y,F){return n(),a("div",null,e)}const A=s(p,[["render",r]]);export{u as __pageData,A as default};
