import{_ as s,c as n,o as a,a as l}from"./app.36aa1ef3.js";const p="/Notes/assets/1648980617193-da03ea44-e27e-480e-86e0-e043e2b95f87.cb753027.gif",E=JSON.parse('{"title":"Java API","description":"","frontmatter":{"title":"Java API","created_at":"2022-02-01T05:44:36.000Z","updated_at":"2022-11-13T13:57:18.000Z","word_count":9944},"headers":[{"level":2,"title":"API","slug":"api","link":"#api","children":[]},{"level":2,"title":"Collections","slug":"collections","link":"#collections","children":[{"level":3,"title":"Interface Collection","slug":"interface-collection","link":"#interface-collection","children":[]},{"level":3,"title":"class Collections","slug":"class-collections","link":"#class-collections","children":[]},{"level":3,"title":"List","slug":"list","link":"#list","children":[]},{"level":3,"title":"Queue","slug":"queue","link":"#queue","children":[]},{"level":3,"title":"Set","slug":"set","link":"#set","children":[]},{"level":3,"title":"Map","slug":"map","link":"#map","children":[]}]},{"level":2,"title":"J.U.C","slug":"j-u-c","link":"#j-u-c","children":[]},{"level":2,"title":"Time","slug":"time","link":"#time","children":[]},{"level":2,"title":"Number","slug":"number","link":"#number","children":[{"level":3,"title":"BigDecimal","slug":"bigdecimal","link":"#bigdecimal","children":[]},{"level":3,"title":"Math","slug":"math","link":"#math","children":[]},{"level":3,"title":"Random","slug":"random","link":"#random","children":[]}]},{"level":2,"title":"Process","slug":"process","link":"#process","children":[{"level":3,"title":"Runtime","slug":"runtime","link":"#runtime","children":[]},{"level":3,"title":"ProcessBuilder","slug":"processbuilder","link":"#processbuilder","children":[]}]},{"level":2,"title":"JDBC","slug":"jdbc","link":"#jdbc","children":[]},{"level":2,"title":"Network","slug":"network","link":"#network","children":[]},{"level":2,"title":"Web","slug":"web","link":"#web","children":[{"level":3,"title":"Servlet","slug":"servlet","link":"#servlet","children":[]},{"level":3,"title":"Filter","slug":"filter","link":"#filter","children":[]},{"level":3,"title":"Listener","slug":"listener","link":"#listener","children":[]}]},{"level":2,"title":"国际化","slug":"国际化","link":"#国际化","children":[]}],"relativePath":"CS/Java API.md"}'),o={name:"CS/Java API.md"},e=l('<p><a href="https://github.com/openjdk" target="_blank" rel="noreferrer">openjdk</a>/<a href="https://github.com/openjdk/jdk" target="_blank" rel="noreferrer">jdk</a></p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><table><thead><tr><th><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/beans/package-summary.html" target="_blank" rel="noreferrer">java.beans</a></th><th>包含与开发 _bean_相关的类 - 基于JavaBeans架构的组件。</th></tr></thead><tbody><tr><td><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/beans/beancontext/package-summary.html" target="_blank" rel="noreferrer">java.beans.beancontext</a></td><td>提供与bean上下文相关的类和接口。</td></tr><tr><td><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/io/package-summary.html" target="_blank" rel="noreferrer">java.io</a></td><td>通过数据流，序列化和文件系统提供系统输入和输出。</td></tr><tr><td><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/lang/package-summary.html" target="_blank" rel="noreferrer">java.lang</a></td><td>提供对Java编程语言设计至关重要的类。</td></tr><tr><td><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/lang/annotation/package-summary.html" target="_blank" rel="noreferrer">java.lang.annotation</a></td><td>为Java编程语言注释工具提供库支持。</td></tr><tr><td><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/math/package-summary.html" target="_blank" rel="noreferrer">java.math</a></td><td>提供执行任意精度整数运算（ BigInteger ）和任意精度十进制运算（ BigDecimal ）的类。</td></tr><tr><td><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/net/package-summary.html" target="_blank" rel="noreferrer">java.net</a></td><td>提供实现网络应用程序的类。</td></tr><tr><td><a href="https://www.matools.com/file/manual/jdk_api_1.8_google/java/nio/package-summary.html" target="_blank" rel="noreferrer">java.nio</a></td><td>定义缓冲区，它们是数据容器，并提供其他NIO包的概述。</td></tr></tbody></table><h2 id="collections" tabindex="-1">Collections <a class="header-anchor" href="#collections" aria-hidden="true">#</a></h2><p><img src="'+p+`" alt=""> <br> Iterable 和 Iterator</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">interface</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Iterator</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">boolean</span><span style="color:#61AFEF;"> hasNext</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">E</span><span style="color:#61AFEF;"> next</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">default</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> remove</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">throw</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">UnsupportedOperationException</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;remove&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">default</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> forEachRemaining</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Consumer</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">super</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">action</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Objects</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">requireNonNull</span><span style="color:#ABB2BF;">(action);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">interface</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Iterable</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">Iterator</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#61AFEF;"> iterator</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">default</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Consumer</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">super</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">action</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Objects</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">requireNonNull</span><span style="color:#ABB2BF;">(action);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">(t);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">default</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">Spliterator</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#61AFEF;"> spliterator</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Spliterators</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">spliteratorUnknownSize</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">iterator</span><span style="color:#ABB2BF;">(), </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="interface-collection" tabindex="-1">Interface Collection <a class="header-anchor" href="#interface-collection" aria-hidden="true">#</a></h3><ul><li>增加 <ul><li><code>boolean add(Object o)</code>：向集合里添加<strong>一个</strong>元素，如果集合对象被添加操作改变了，则返回 true</li><li><code>boolean addAll(Collection c)</code>：把集合 c 里的所有元素添加到指定集合里，如果集合对象被添加操作改变了，则返回 true</li></ul></li><li>删除 <ul><li><code>boolean remove(Object o)</code>：删除集合中第一个符合条件的<strong>指定元素</strong> o，返回 true</li><li><code>boolean removeAll(Collecrion c)</code>：从该集合中<strong>删除</strong>集合 c 里包含的所有元素，如果删除了一个或一个以上的元素，该方法将返回 true</li><li><code>boolean retainAll(Collection c)</code>：使该集合中<strong>仅保留</strong>集合 c 里包含的元素（求两个集合的<strong>交集</strong>），如果该操作改变了调用该方法的集合，则该方法返回 true</li><li><code>void clear()</code>：清除集合里的所有元素，将集合长度变为 0</li></ul></li><li>查询 <ul><li><code>boolean contains(Object o)</code>：判断集合里是否包含指定元素 o</li><li><code>boolean containsAll(Collection c)</code>：判断集合里是否包含集合 c 里的所有元素</li><li><code>boolean isEmpty()</code>：判断集合是否为空，当集合长度为 0 时返回 true，否则返回 false</li><li><code>int size()</code>：返回集合里元素的个数</li></ul></li><li>其它操作 <ul><li><code>Iterator&lt;E&gt; iterator()</code>：获取一个 Iterator 对象（迭代器）</li><li><code>Object[] toArray()</code>：把集合转换成一个数组，所有的集合元素变成对应的数组元素（<strong>转换成 Object 数组时</strong>，没有必要使用 toArray[new Object[0]]，可以直接使用 toArray()）</li><li><code>T[] toArray(T[] a)</code>：返回一个包含此集合中所有元素的数组（返回数组的运行时类型是指定数组的类型）。如果指定的数组 a <strong>能容纳</strong>该集合，则 a 将在其中返回；否则，将分配一个具有指定数组的运行时类型和此集合大小的<strong>新数组</strong>（<strong>集合转换为类型 T 数组时</strong>，尽量传入空数组 T[0]）</li></ul></li><li>默认方法 <ul><li><code>Stream&lt;E&gt; stream()</code></li><li><code>Stream&lt;E&gt; parallelStream()</code></li><li><code>boolean removeIf(Predicate&lt;E&gt; filter)</code>：删除满足给定谓词的此集合的所有元素</li><li><code>void forEach(Consumer&lt;? super T&gt; action)</code>：对 Iterable 的每个元素执行给定的操作</li></ul></li></ul><h3 id="class-collections" tabindex="-1">class Collections <a class="header-anchor" href="#class-collections" aria-hidden="true">#</a></h3><ul><li>排序操作 <ul><li><code>void reverse(List list)</code>：反转指定 List 集合中元素的顺序</li><li><code>void shuffle(Listlist)</code>：对 List 集合元素进行随机排序</li><li><code>void sort(List list)</code>：根据元素的自然顺序对指定 List 集合的元素按升序进行排序（底层是调用 Arrays.sort()）</li><li><code>sort(List&lt;T&gt; list, Comparator&lt;? super T&gt; c)</code>：根据指定比较器产生的顺序对指定 List 集合的元素进行排序</li><li><code>void swap(List list, int i, int j)</code>：将指定 List 集合的 i 处元素和 j 处元素进行交换</li></ul></li><li>查找、替换、添加操作 <ul><li><code>int binarySearch(List list, Object key)</code>：使用二分搜索法搜索指定对象在 List 集合中的索引（调用该方法时要求 List 中的元素已经处于有序状态）</li><li><code>Object min(Collection coll)</code>：根据元素的自然顺序， 返回给定集合中的最小元素</li><li><code>Object max(Collectioncoll)</code>：根据元素的自然顺序， 返回给定集合中的最大元素</li><li><code>boolean replaceAll(List list, Object oldVal, Object newVal)</code>：使用一个新值 newVal 替换 List 对象的所有旧值 oldVal</li><li><code>boolean addAll(Collection&lt;? super T&gt; c, T... elements)</code>：将所有指定元素添加到指定 collection 中</li></ul></li><li>创建不可变的单元素集合 <ul><li><code>Set&lt;T&gt; singleton(T o)</code>：返回一个只包含指定对象的不可变 set</li><li><code>List&lt;T&gt; singletonList(T o)</code>：返回一个只包含指定对象的不可变列表</li><li><code>Map&lt;K, V&gt; singletonMap(K key, V value)</code>：返回一个不可变的映射，它只将指定键映射到指定值</li></ul></li></ul><h3 id="list" tabindex="-1">List <a class="header-anchor" href="#list" aria-hidden="true">#</a></h3><ul><li>增加 <ul><li><code>void add(int index, Object element)</code>：将元素 element 插入到 List 集合的 index 处，索引范围 [0, size)</li><li><code>boolean addAll(int index, Collection c)</code>：将集合 c 所包含的所有元素都插入到 List 集合的 index 处</li></ul></li><li>删除 <ul><li><code>Object remove(int index)</code>：删除并返回 <strong>index 索引</strong>处的元素</li></ul></li><li><strong>修改</strong><ul><li><code>Object set(int index, Object element)</code>：将 index 索引处的元素替换成 element 对象，返回被替换的旧元素</li></ul></li><li>查询 <ul><li><code>Object get(int index)</code>：返回集合 index 索引处的元素</li><li><code>int indexOf(Object o)</code>：返回对象 o 在 List 集合中第一次出现的位置索引</li><li><code>int lastIndexOf(Object o)</code>：返回对象 o 在 List 集合中最后一次出现的位置索引</li></ul></li><li>其它 <ul><li><code>List subList(int fromlndex, int tolndex)</code>：返回从索引 fromlndex（包含）到索引 tolndex（不包含）处所有集合元素组成的子集合，<strong>返回的列表由此列表支持，因此返回列表中的非结构性更改将反映在此列表中，反之亦然</strong>（对于子列表的所有操作最终会反映到原列表上；对<strong>父集合</strong>元素的增加或删除，均会导致子列表的遍历、增加、删除产生 ConcurrentModificationException 异常）</li><li><code>ListIterator&lt;E&gt; listIterator(int index)</code>：返回一个 ListIterator 对象（双向的迭代器），从列表的指定位置开始</li></ul></li><li>默认方法 <ul><li><code>void replaceAll(UnaryOperator&lt;E&gt; operator)</code>：对列表中的每一个元素执行特定的操作，并用处理的结果替换该元素</li><li><code>void sort(Comparator&lt;E&gt; c)</code>：使用提供的 Comparator 来比较元素排序该列表</li></ul></li><li>常用构造器 <ul><li><code>ArrayList()</code>：一个数组队列，相当于<strong>动态数组</strong>。<strong>ArrayList 默认初始容量大小为 10 ，添加元素时，如果发现容量已满，会自动扩容为原始大小的 1.5 倍</strong>。</li><li><code>ArrayList(Collection&lt;? extends E&gt; c)</code>：构造一个包含指定 collection 的元素的列表，这些元素是按照该 collection 的迭代器返回它们的顺序排列的</li></ul></li></ul><p><strong>LinkedList</strong> 基于双链表结构实现，顺序访问会非常高效，而随机访问效率比较低。</p><ul><li><code>add(E e)</code>：默认添加元素方法（插入尾部）</li><li><code>add(int index, E element)</code>：添加元素到任意位置</li><li><code>addFirst(E e)</code>：在头部添加元素</li><li><code>addLast(E e)</code>：在尾部添加元素</li></ul><h3 id="queue" tabindex="-1">Queue <a class="header-anchor" href="#queue" aria-hidden="true">#</a></h3><blockquote><p>队列，“先进先出”（FIFO）的容器</p></blockquote><ul><li>void add(Objecte)：将指定元素加入此队列的尾部</li><li>Object element()：获取队列头部的元素，但是不删除该元素</li><li>boolean offer(Objecte)：将指定元素加入此队列的尾部。当使用有容量限制的队列时，此方法通常比 add(Object e) 方法更好</li><li>Object peek()：获取队列头部的元素，但是不删除该元素。如果队列为空，则返回 null</li><li>Object poll()：获取队列头部的元素，并删除该元素。如果队列为空，则返回 null</li><li>Object remove()：获取队列头部的元素，并删除该元素</li></ul><h4 id="deque" tabindex="-1">Deque <a class="header-anchor" href="#deque" aria-hidden="true">#</a></h4><p>double ended queue ，双端队列</p><ul><li>尾部插入 addLast(e)、offerLast(e)</li><li>尾部删除 removeLast()、pollLast()</li></ul><h4 id="priorityqueue" tabindex="-1">PriorityQueue <a class="header-anchor" href="#priorityqueue" aria-hidden="true">#</a></h4><blockquote><p>基于堆实现无界优先级队列</p></blockquote><ul><li>在构造器中自定义优先级别 <code>PriorityQueue(Comparator&lt;? super E&gt; comparator)</code></li><li>boolean add(E e)、boolean offer(E e)：将指定的元素插入此优先级队列</li><li>E peek()：获取但不移除此队列的头；如果此队列为空，则返回 null</li><li>E remove()、E poll()：获取并移除此队列的头，队列为空时，remove() 抛出异常，poll() 返回 null</li></ul><h3 id="set" tabindex="-1">Set <a class="header-anchor" href="#set" aria-hidden="true">#</a></h3><p>**HashSet ** <br> 两个对象的 hashCode() 方法返回值相等，并且两个对象通过 equals() 方法比较也相等 <br> <strong>LinkedHashSet</strong></p><p><strong>TreeSet</strong> <br> 根据红黑树结构确定元素的存储位置 <br> 查询</p><ul><li>Object first()：返回集合中的第一个元素</li><li>Object last()：返回集合中的最后一个元素</li><li>Object lower(Object e)：返回集合中位于指定元素之前的元素（即小于指定元素的最大元素，参考元素不需要是 TreeSet 集合里的元素）</li><li>Object higher (Object e)：返回集合中位于指定元素之后的元素（即大于指定元素的最小元素，参考元素不需要是 TreeSet 集合里的元素）</li></ul><p>其它</p><ul><li>SortedSet subSet(Object fromElement, Object toElement)：返回此 Set 的子集合（部分视图），范围从 froraElement（包含）到 toElement （不包含），<strong>返回的 Set 受此 Set 支持，所以在返回 Set 中的更改将反映在此 Set 中，反之亦然</strong></li><li>SortedSet headSet(Object toElement)：返回此 Set 的子集（部分视图），由小于 toElement 的元素组成，<strong>返回的 Set 受此 Set 支持，所以在返回 Set 中的更改将反映在此 Set 中，反之亦然</strong></li><li>SortedSet tailSet(Object fromElement)：返回此 Set 的子集（部分视图），由大于或等于 fromElement 的元素组成，<strong>返回的 Set 受此 Set 支持，所以在返回 Set 中的更改将反映在此 Set 中，反之亦然</strong></li><li>Comparator comparator()：如果 TreeSet 采用了定制排序，则该方法返回定制排序所使用的 Comparator；如果 TreeSet 采用了自然排序，则返回 null</li></ul><h3 id="map" tabindex="-1">Map <a class="header-anchor" href="#map" aria-hidden="true">#</a></h3><blockquote><p>用于保存具有映射关系的数据，元素是 key-value 对（Entry），key 不允许重复</p></blockquote><p>本质 <code>Map.Entry&lt;K,V&gt;[]</code> 自定义对象作为 key 必须覆写 hashCode 和 equals</p><ul><li>增加 / 修改 <ul><li><code>Object put(Object key, Object value)</code>：添加一个 key-value 对，如果当前 Map 中已有一个与该 key 相等的 key-value 对，则新的 key-value 对会<strong>覆盖</strong>原来的 key-value 对，返回被覆盖的 value，否则返回 null</li><li><code>void putAll(Map m)</code>：将指定 Map 中的 key-value 对复制到本 Map 中</li></ul></li><li>删除 <ul><li><code>Object remove(Object key)</code>：删除指定 key 所对应的 key-value 对，返回被删除 key 所关联的 value，如果该 key 不存在，则返回 null</li><li><code>boolean remove(Object key, Object value)</code>：删除指定 key、value 所对应的 key-value 对</li><li><code>void clear()</code>：删除该 Map 对象中的所有 key-value 对</li></ul></li><li>查询 <ul><li><code>Object get(Object key)</code>：返回指定 key 所对应的 value；如果此 Map 中不包含该 key，则返回 null</li><li><code>boolean containsKey(Object key)</code>：查询 Map 中是否包含指定的 key，如果包含则返回 true</li><li><code>boolean containsValue(Object value)</code>：查询 Map 中是否包含一个或多个 value，如果包含则返回true</li><li><code>boolean isEmpty()</code>：查询该 Map 是否为空（即不包含任何 key-value 对），如果为空则返回 true</li><li><code>int size()</code>：查询该 Map 里的 key-value 对的个数</li></ul></li><li>其它 <ul><li><code>Set&lt;K&gt; keySet()</code>：返回该 Map 中所有 key 组成的 Set 集合（相应实现类中的内部类，不支持 add 或 addAll 操作）</li><li><code>Collection&lt;V&gt; values()</code>：返回该 Map 里所有 value 组成的 <strong>Collection</strong>（相应实现类中的内部类，不支持 add 或 addAll 操作）</li><li><code>Set&lt;Map.Entry&lt;K, V&gt;&gt; entrySet()</code>：返回 Map 中包含的 key-value 对所组成的 Set 集合，每个集合元素都是 Map.Entry 对象（不支持 add 或 addAll 操作）</li></ul></li><li>默认方法 <ul><li><code>void forEach(BiConsumer&lt;K, V&gt; action)</code>：对此映射中的每个条目执行给定的操作</li><li><code>V computeIfPresent(K key, BiFunction&lt;K, V, V&gt; remappingFunction)</code></li><li><code>V computeIfAbsent(K key, Function&lt;K, V&gt; mappingFunction)</code>：如果 key 不存在或者对应的值是 null，则调用 mappingFunction 来产生一个值，然后将其放入 Map（<strong>原子操作</strong> CAS），再<strong>返回这个值</strong>；否则的话返回 Map 已存在的对应的值</li><li><code>V putIfAbsent(K key, V value)</code>：如果 key 不存在或者对应的值是 null，则<strong>将 value 设置进去</strong>（<strong>原子操作</strong> CAS），然后<strong>返回 null</strong>；否则返回 Map 中对应的值，而不做其它操作</li><li><code>V getOrDefault(Object key, V defaultValue)</code>：如果 key 不存在或者对应的值是 null，则返回 defaultValue</li><li><code>boolean remove(Object key, Object value)</code>：仅当指定的 key 当前映射到指定的值时删除该条目</li><li><code>boolean replace(K key, V oldValue, V newValue)</code>：仅当当前映射到指定的值时，才替换指定键的条目</li><li><code>V merge(K key, V value, BiFunction&lt;V, V, V&gt; remappingFunction)</code>：如果指定的 key 尚未与值相关联或与 null 相关联，则将其与给定的非空 value 相关联，否则将关联值替换为给定重映射函数的结果</li></ul></li><li>常用构造器 <ul><li><code>HashMap()</code>：构造一个具有默认初始容量（16）和默认加载因子（0.75）的空 HashMap</li><li><code>HashMap(Map&lt;? extends K,? extends V&gt; m)</code>：构造一个映射关系与指定 Map 相同的新 HashMap</li></ul></li></ul><h2 id="j-u-c" tabindex="-1">J.U.C <a class="header-anchor" href="#j-u-c" aria-hidden="true">#</a></h2><p>并发容器</p><table><thead><tr><th>并发容器</th><th>对应的普通容器</th><th>描述</th></tr></thead><tbody><tr><td>ConcurrentHashMap</td><td>HashMap</td><td>Java 1.8 之前采用分段锁机制细化锁粒度，降低阻塞，从而提高并发性；Java 1.8 之后基于 CAS 实现。</td></tr><tr><td>ConcurrentSkipListMap</td><td>SortedMap</td><td>基于跳表实现的</td></tr><tr><td>CopyOnWriteArrayList</td><td>ArrayList</td><td></td></tr><tr><td>CopyOnWriteArraySet</td><td>Set</td><td>基于 CopyOnWriteArrayList 实现。</td></tr><tr><td>ConcurrentSkipListSet</td><td>SortedSet</td><td>基于 ConcurrentSkipListMap 实现。</td></tr><tr><td>ConcurrentLinkedQueue</td><td>Queue</td><td>线程安全的无界队列。底层采用单链表。支持 FIFO。</td></tr><tr><td>ConcurrentLinkedDeque</td><td>Deque</td><td>线程安全的无界双端队列。底层采用双向链表。支持 FIFO 和 FILO。</td></tr><tr><td>ArrayBlockingQueue</td><td>Queue</td><td>数组实现的阻塞队列。</td></tr><tr><td>LinkedBlockingQueue</td><td>Queue</td><td>链表实现的阻塞队列。</td></tr><tr><td>LinkedBlockingDeque</td><td>Deque</td><td>双向链表实现的双端阻塞队列。</td></tr></tbody></table><p>并发工具类 <br> CountDownLatch 递减计数锁，用于控制一个线程等待多个线程</p><ul><li>await() - 调用 await() 方法的线程会被挂起，它会等待直到 count 值为 0 才继续执行。</li><li>await(long timeout, TimeUnit unit) - 和 await() 类似，只不过等待一定的时间后 count 值还没变为 0 的话就会继续执行</li><li>countDown() - 将统计值 count 减 1</li></ul><p>CyclicBarrier 循环栅栏，可以让一组线程等待至某个状态之后再全部同时执行</p><ul><li>public CyclicBarrier(int parties) parties 相当于一个阈值</li><li><code>public CyclicBarrier(int parties, Runnable barrierAction)</code></li><li>await() - 等待调用 await() 的线程数达到屏障数。</li><li>await(long timeout, TimeUnit unit) - 等待至一定的时间，如果还有线程没有到达栅栏状态就直接让到达栅栏状态的线程执行后续任务。</li><li>reset() - 将屏障重置为初始状态</li></ul><p>Semaphore 信号量，用来控制某段代码块的并发数</p><ul><li>acquire() - 获取 1 个 permit。</li><li>acquire(int permits) - 获取 permits 数量的 permit。</li><li>release() - 释放 1 个 permit。</li><li>release(int permits) - 释放 permits 数量的 permit</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">SemaphoreDemo</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">final</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> THREAD_COUNT </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ExecutorService</span><span style="color:#E06C75;"> threadPool </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Executors</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newFixedThreadPool</span><span style="color:#ABB2BF;">(THREAD_COUNT);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Semaphore</span><span style="color:#E06C75;"> semaphore </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Semaphore</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">10</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;"> THREAD_COUNT; i++) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">threadPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">                    </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">                        </span><span style="color:#E5C07B;">semaphore</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">acquire</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">                        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;save data&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                        </span><span style="color:#E5C07B;">semaphore</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">release</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">                    } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">InterruptedException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                        </span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">                    }</span></span>
<span class="line"><span style="color:#ABB2BF;">            });</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">threadPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">shutdown</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="time" tabindex="-1">Time <a class="header-anchor" href="#time" aria-hidden="true">#</a></h2><ul><li>Temporal 的实现类 <ul><li>Instant（代表一个具体的时刻）</li><li>LocalDate（代表不带时区的日期）</li><li>LocalTime（代表不带时区的时间）</li><li>LocalDateTime（代表不带时区的日期、时间）</li><li>Year（代表年）</li><li>YearMonth（代表年月）</li><li>ZonedDateTime（代表带相对于指定时区的日期、时间）</li></ul></li><li>TemporalAmount 的实现类 <ul><li>Duration（代表以秒和纳秒衡量的时长，格式 PnDTnHnMn.nS）</li><li>Period（代表以年、月、日衡量的时长，格式 PnYnMnD）</li></ul></li><li>ZoneId（代表一个时区） <ul><li>ZoneOffset（ZoneId 的子类，代表与 UTC/格林尼治时间的绝对偏差）</li></ul></li><li>Clock（用于获取指定时区的当前日期、时间）</li><li>DayOfWeek（星期枚举类）、Month（月份枚举类）</li><li>ChronoUnit（时间单位枚举类）：YEARS、MONTHS、WEEKS、DAYS、HOURS、MINUTES、SECONDS、NANOS 等</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 获取当前时间</span></span>
<span class="line"><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#E06C75;"> now </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 设置时间</span></span>
<span class="line"><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#E06C75;"> dateTime </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2022</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">59</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">59</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取年、月、日、时、分、秒</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getYear</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// dateTime.get(ChronoField.YEAR);</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getMonth</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getValue</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// dateTime.get(ChronoField.MONTH_OF_YEAR);</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getDayOfMonth</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// dateTime.get(ChronoField.DAY_OF_MONTH);</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getHour</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getMinute</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getSecond</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 调整日期/时间，返回修改了属性的新对象</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">withDayOfMonth</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">25</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// dateTime.with(ChronoField.DAY_OF_MONTH, 25)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 当月的最后一天</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">with</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TemporalAdjusters</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastDayOfMonth</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 比较先后</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isAfter</span><span style="color:#ABB2BF;">(now);</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isBefore</span><span style="color:#ABB2BF;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 加减时间</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">plusDays</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// dateTime.plus(1, ChronoUnit.DAYS);</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">minusDays</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 格式化</span></span>
<span class="line"><span style="color:#E5C07B;">DateTimeFormatter</span><span style="color:#E06C75;"> formatter </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">DateTimeFormatter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ofPattern</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// LocalDateTime 转 String</span></span>
<span class="line"><span style="color:#E5C07B;">formatter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(dateTime);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// dateTime.format(formatter);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// String 转 LocalDateTime</span></span>
<span class="line"><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;2018-10-01 23:59:59&quot;</span><span style="color:#ABB2BF;">, formatter);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// LocalDateTime 转 LocalDate、LocalTime</span></span>
<span class="line"><span style="color:#E5C07B;">LocalDate</span><span style="color:#E06C75;"> localDate </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toLocalDate</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">LocalTime</span><span style="color:#E06C75;"> localTime </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toLocalTime</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// LocalDate、LocalTime 转 LocalDateTime</span></span>
<span class="line"><span style="color:#E06C75;">dateTime </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">localDate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atStartOfDay</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 一天的开始时间</span></span>
<span class="line"><span style="color:#E5C07B;">localDate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atTime</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">LocalTime</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">MIDNIGHT</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 00:00:00.000000000</span></span>
<span class="line"><span style="color:#E5C07B;">localDate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atTime</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">LocalTime</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">MIN</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;">      </span><span style="color:#7F848E;font-style:italic;">// 00:00:00.000000000</span></span>
<span class="line"><span style="color:#E5C07B;">localDate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atTime</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">LocalTime</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">NOON</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;">     </span><span style="color:#7F848E;font-style:italic;">// 12:00:00.000000000</span></span>
<span class="line"><span style="color:#E5C07B;">localDate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atTime</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">LocalTime</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">MAX</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;">      </span><span style="color:#7F848E;font-style:italic;">// 23:59:59.999999999</span></span>
<span class="line"><span style="color:#E06C75;">dateTime </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(localDate, localTime);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取当前时间戳</span></span>
<span class="line"><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> millisecond </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Instant</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">toEpochMilli</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 转换当前时间的毫秒值</span></span>
<span class="line"><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> second </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Instant</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getEpochSecond</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 获取当前时间的秒数</span></span>
<span class="line"><span style="color:#E5C07B;">Instant</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ofEpochMilli</span><span style="color:#ABB2BF;">(millisecond);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 毫秒值转 Instant</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将此日期转换为从 1970-01-01 开始的天数</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toEpochDay</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将此日期时间转换为从 1970-01-01T00：00：00Z 开始的毫秒数</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toInstant</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ZoneOffset</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;+8&quot;</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">toEpochMilli</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// LocalDateTime 转换为 ZonedDateTime，再转换为 Instant，再转换为 Date</span></span>
<span class="line"><span style="color:#E5C07B;">Date</span><span style="color:#E06C75;"> date </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atZone</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ZoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">systemDefault</span><span style="color:#ABB2BF;">()).</span><span style="color:#61AFEF;">toInstant</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Date 转换为 Instant，再转换为 LocalDateTime</span></span>
<span class="line"><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#E06C75;"> dateTime </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ofInstant</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toInstant</span><span style="color:#ABB2BF;">(), </span><span style="color:#E5C07B;">ZoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">systemDefault</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取相差时间间隔（不能使用 Period.between() 返回的是两个日期差几年零几月零几天）</span></span>
<span class="line"><span style="color:#E06C75;">amount </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">start</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">until</span><span style="color:#ABB2BF;">(end, </span><span style="color:#E5C07B;">ChronoUnit</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">DAYS</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// end.toEpochDay() - start.toEpochDay()</span></span>
<span class="line"><span style="color:#E06C75;">amount </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ChronoUnit</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">DAYS</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">between</span><span style="color:#ABB2BF;">(start, end);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 时间长度：Duration、Period</span></span>
<span class="line"><span style="color:#E5C07B;">Duration</span><span style="color:#E06C75;"> d1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Duration</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">between</span><span style="color:#ABB2BF;">(time1, time2);</span></span>
<span class="line"><span style="color:#E5C07B;">Duration</span><span style="color:#E06C75;"> d1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Duration</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">between</span><span style="color:#ABB2BF;">(dateTime1, dateTime2);</span></span>
<span class="line"><span style="color:#E5C07B;">Duration</span><span style="color:#E06C75;"> d2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Duration</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">between</span><span style="color:#ABB2BF;">(instant1, instant2);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Obtains a Period consisting of the number of years, months, and days between two dates.</span></span>
<span class="line"><span style="color:#E5C07B;">Period</span><span style="color:#E06C75;"> tenDays </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Period</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">between</span><span style="color:#ABB2BF;">(date1, date2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Period</span><span style="color:#E06C75;"> sixMonths </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Period</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ofMonths</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">Duration</span><span style="color:#E06C75;"> sixSeconds </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Duration</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ofSeconds</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">plus</span><span style="color:#ABB2BF;">(sixMonths);</span></span>
<span class="line"><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">plus</span><span style="color:#ABB2BF;">(sixSeconds);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 时区 ID</span></span>
<span class="line"><span style="color:#E5C07B;">ZoneId</span><span style="color:#E06C75;"> zoneId </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ZoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">systemDefault</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ZoneId zoneId = TimeZone.getDefault().toZoneId();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ZoneId romeZone = ZoneId.of(&quot;Asia/Shanghai&quot;);</span></span>
<span class="line"><span style="color:#E5C07B;">zoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getId</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 时区 ID：Asia/Shanghai</span></span>
<span class="line"><span style="color:#E5C07B;">zoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getRules</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 时区规则：ZoneRules[currentStandardOffset=+08:00]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ZonedDateTime 有 LocalDateTime 几乎相同的方法，不同的是它可以设置时区</span></span>
<span class="line"><span style="color:#E5C07B;">ZoneId</span><span style="color:#E06C75;"> zoneId </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ZoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;UTC+8&quot;</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// ZoneId.of(&quot;+8&quot;)</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zonedDateTime </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2018</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">59</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">59</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1234</span><span style="color:#ABB2BF;">, zoneId);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 为时间点添加时区信息</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atStartOfDay</span><span style="color:#ABB2BF;">(zoneId);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 时间为 00:00:00</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">dateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atZone</span><span style="color:#ABB2BF;">(zoneId);</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt3 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">instant</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atZone</span><span style="color:#ABB2BF;">(zoneId);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ZoneId</span><span style="color:#E06C75;"> zoneId </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ZoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;-5&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 2020-12-17T15:31:27.870+08:00[Asia/Shanghai]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取当前时刻对应的 ZonedDateTime</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">(zoneId);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 2020-12-17T02:31:27.870-05:00</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 通过给 LocalDateTime 附加一个 ZoneId，变成 ZonedDateTime</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(now, zoneId);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 2020-12-17T15:31:27.870-05:00</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">now</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">atZone</span><span style="color:#ABB2BF;">(zoneId);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 2020-12-17T15:31:27.870-05:00</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 时区转换</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 1. 转换为相同时刻对应的 ZonedDateTime</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">zdt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">withZoneSameInstant</span><span style="color:#ABB2BF;">(zoneId);</span><span style="color:#7F848E;font-style:italic;">// 2020-12-17T02:31:27.870-05:00</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2. 转换为相同日期时间对应的 ZonedDateTime</span></span>
<span class="line"><span style="color:#E5C07B;">ZonedDateTime</span><span style="color:#E06C75;"> zdt2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">zdt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">withZoneSameLocal</span><span style="color:#ABB2BF;">(zoneId);</span><span style="color:#7F848E;font-style:italic;">// 2020-12-17T15:31:27.870-05:00</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br></div></div><p>TemporalAdjusters 工厂类中返回 TemporalAdjuster（调整器）实例的静态方法</p><ul><li>firstDayOfMonth()：当月的第一天</li><li>lastDayOfMonth()：当月的最后一天</li><li>firstDayOfNextMonth()：下月的第一天</li><li>lastInMonth(DayOfWeek dayOfWeek)：下月的最后一天</li><li>firstDayOfNextYear()：明年的第一天</li><li>firstDayOfYear()：当年的第一天</li><li>lastDayOfYear()：今年的最后一天</li><li>dayOfWeekInMonth(int ordinal, DayOfWeek dayOfWeek)：同一个月中，第几个符合星期几要求的值</li><li>firstInMonth(DayOfWeek dayOfWeek)：同一个月中，第一个符合星期几要求的值</li><li>lastInMonth(DayOfWeek dayOfWeek)：同一个月中，最后一个符合星期几要求的值</li><li>previous(DayOfWeek dayOfWeek)：在当前日期之前第一个符合指定星期几要求的日期</li><li>next(DayOfWeek dayOfWeek)：在当前日期之后第一个符合指定星期几要求的日期</li><li>previousOrSame(DayOfWeek dayOfWeek)：在当前日期之后第一个符合指定星期几要求的日期，如果当前日期已经符合要求，直接返回该对象</li><li>nextOrSame(DayOfWeek dayOfWeek)：在当前日期之后第一个符合指定星期几要求的日期，如果当前日期已经符合要求，直接返回该对象</li></ul><h2 id="number" tabindex="-1">Number <a class="header-anchor" href="#number" aria-hidden="true">#</a></h2><h3 id="bigdecimal" tabindex="-1">BigDecimal <a class="header-anchor" href="#bigdecimal" aria-hidden="true">#</a></h3><p>全局静态常量：ZERO、ONE、TEN、ROUND_HALF_UP（对应于 RoundingMode.HALF_UP） <br> 常用实例方法</p><ul><li>BigDecimal divide(BigDecimal divisor)：返回一个 BigDecimal，其值为 (this / divisor)，如果无法表示准确的商值，则抛出 ArithmeticException</li><li>BigDecimal divide(BigDecimal divisor, int scale, RoundingMode roundingMode)：返回一个 BigDecimal，其值为 (this / divisor)，要保留的小数位数 scale，舍入模式 roundingMode（如 RoundingMode.HALF_UP 表示四舍五入）</li><li>BigDecimal setScale(int newScale, RoundingMode roundingMode), BigDecimal setScale(int newScale, int roundingMode)：返回一个 BigDecimal，要保留的小数位数 newScale，舍入模式 roundingMode</li><li>BigDecimal stripTrailingZeros()：返回的 BigDecimal，其数值上等于此小数，但从该表示形式移除所有尾部零</li></ul><h3 id="math" tabindex="-1">Math <a class="header-anchor" href="#math" aria-hidden="true">#</a></h3><p>基本数学运算，如初等指数、对数、平方根和三角函数等，随机数 <br> 常量字段：E、PI <br> 方法</p><ul><li>double random()：返回带正号的 double 值（伪随机数），[0.0, 1.0)</li><li>int min(int a, int b)：返回两个数的较小值</li><li>int max(int a, int b)：返回两个数的较大值</li><li>int toIntExact(long value)：将 long 值转换为 int 值</li><li>int addExact(int x, int y)</li><li>int subtractExact(int x, int y)</li><li>int multiplyExact(int x, int y)</li><li>long round(double a)、int round(float a)：执行标准舍入，将数值四舍五入为最接近的整数</li><li>double ceil(double a)：执行向上舍入，将数值向上舍入为最接近的 double 值</li><li>double floor(double a)：执行向下舍入，将数值向下舍入为最接近的 double 值</li></ul><h3 id="random" tabindex="-1">Random <a class="header-anchor" href="#random" aria-hidden="true">#</a></h3><p>使用种子创建随机数生成器，生成下一个伪随机数 <br> 构造器</p><ul><li>Random()：使用默认的种子创建一个随机数生成器对象（以当前系统时间作为种子）</li><li>Random(long seed)</li></ul><p>实例方法</p><ul><li>int nextInt()：返回一个伪随机整数，[0, int 最大值)，类似还有返回 long、float [0.0, 1.0)、double [0.0, 1.0)、boolean 的方法</li><li>int nextInt(int n)：返回一个伪随机数，[0, n)</li><li>IntStream ints(int randomNumberOrigin, int randomNumberBound)</li><li>IntStream ints(long streamSize, int randomNumberOrigin, int randomNumberBound)：返回一个流，生成 streamSize 个 [randomNumberOrigin, randomNumberBound) 范围内的 int 值</li></ul><h2 id="process" tabindex="-1">Process <a class="header-anchor" href="#process" aria-hidden="true">#</a></h2><h3 id="runtime" tabindex="-1">Runtime <a class="header-anchor" href="#runtime" aria-hidden="true">#</a></h3><p>类方法</p><ul><li>Runtime getRuntime()：获取与当前 Java 应用程序相关的运行时对象（单例模式）</li></ul><p>实例方法</p><ul><li>Process exec(String command)：在单独的进程中执行指定的字符串命令，返回一个新的 Process 对象</li><li>Process exec(String command, String[] envp, File dir)：command从dir目录中执行带有指定环境变量</li><li>Process exec(String cmdArray[])：以字符串数组的形式执行命令</li><li>Process exec(String cmdarray[], String[] envp, File dir)：从dir目录中执行带有指定环境变量的命令</li><li>void exit(int status)：终止 JVM（非 0 的状态码表示异常终止）</li><li>void gc()：运行 GC</li><li>void addShutdownHook(Thread hook)：注册虚拟机关闭钩子（一个已初始化但尚未启动的线程）</li><li>int availableProcessors()：返回虚拟机可用处理器的数目</li></ul><h3 id="processbuilder" tabindex="-1">ProcessBuilder <a class="header-anchor" href="#processbuilder" aria-hidden="true">#</a></h3><ul><li><code>command()</code>：返回此进程生成器的操作系统程序和参数。</li><li><code>command(List&lt;String&gt; command)</code>：设置此进程生成器的操作系统程序和参数。</li><li><code>command(String… command)</code>：设置此进程生成器的操作系统程序和参数。</li><li><code>directory()</code>：返回此进程生成器的工作目录。</li><li><code>directory(File directory)</code>：设置此进程生成器的工作目录。</li><li><code>environment()</code>：返回此进程生成器环境的字符串映射视图。可以修改环境变量</li><li>redirectErrorStream()</li><li><code>redirectErrorStream(boolean redirectErrorStream)</code>：通知进程生成器是否合并标准错误和标准输出。</li><li><code>start()</code>：使用此进程生成器的属性启动一个新进程。</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> command </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;ping 127.0.0.1&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Runtime</span><span style="color:#E06C75;"> runtime </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Runtime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getRuntime</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">Process</span><span style="color:#E06C75;"> process1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">runtime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exec</span><span style="color:#ABB2BF;">(command);</span></span>
<span class="line"><span style="color:#61AFEF;">printResult</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">process1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInputStream</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ProcessBuilder</span><span style="color:#E06C75;"> processBuilder </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">ProcessBuilder</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">command</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">processBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">redirectErrorStream</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">Process</span><span style="color:#E06C75;"> process2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">processBuilder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">printResult</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">process2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInputStream</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">void</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">printResult</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">InputStream</span><span style="color:#E06C75;"> inputStream) throws IOException {</span></span>
<span class="line"><span style="color:#E06C75;">  </span><span style="color:#E5C07B;">BufferedReader</span><span style="color:#E06C75;"> reader </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">BufferedReader</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">InputStreamReader</span><span style="color:#E06C75;">(inputStream</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;gbk&quot;</span><span style="color:#E06C75;">))</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> s</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  </span><span style="color:#C678DD;">while</span><span style="color:#E06C75;"> ((s </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">reader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readLine</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">)</span><span style="color:#56B6C2;">!=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">null</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(s);</span></span>
<span class="line"><span style="color:#E06C75;">  }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="jdbc" tabindex="-1">JDBC <a class="header-anchor" href="#jdbc" aria-hidden="true">#</a></h2><p>Java DataBase Connectivity（Java 数据库连接），一组可以执行 SQL 语句的 Java API（Java 数据库的统一访问接口）</p><p><strong>Connection</strong> <br> 代表数据库连接对象（一个物理连接会话）</p><ul><li>创建语句对象 <br> Statement createStatement()：创建一个 Statement 对象 <br> PreparedStatement prepareStatement(String sql)：创建一个 PreparedStatement 对象 <br> PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)：创建一个 PreparedStatement 对象，并设置该对象是否能<strong>获取自动生成的主键</strong>（int 常量：Statement.RETURN_GENERATED_KEYS）</li><li>控制事务 <br> void setAutoCommit(boolean autoCommit)：false 为关闭自动提交，开启事务（MySQL 默认打开自动提交） <br> void commit()：提交事务，并释放所持有的数据库锁 <br> void rollback()：回滚事务，并释放所持有的数据库锁（<strong>在 catch 块中</strong>回滚事务）</li></ul><p><strong>Statement</strong> <br> 用于执行静态 SQL 语句（将 SQL 语句发送到数据库）</p><ul><li>int 常量：RETURN_GENERATED_KEYS、NO_GENERATED_KEYS</li><li>执行语句 <br> int executeUpdate(String sql)：执行 DML 语句时返回受影响的行数；执行 DDL 语句时返回 0 <br> int executeUpdate(String sql, int autoGeneratedKeys)：执行给定的 DML 语句，并设置此 Statement 生成的自动生成键是否能用于获取 <br> ResultSet executeQuery(String sql)：执行 DQL 语句，并返回查询结果对应的 ResultSet 对象</li><li>批量更新 <br> void addBatch(String sql)：将给定的 SQL 命令添加到此 Statement 对象的当前命令列表中 <br> int[] executeBatch()、long[] executeLargeBatch()：将<strong>一批命令</strong>（DDL、DML 语句）提交给数据库来执行，如果全部命令执行成功，则返回影响行数组成的数组 <br> void clearBatch()：清空此 Statement 对象的当前 SQL 命令列表</li><li>获取自动生成主键 <br> ResultSet getGeneratedKeys()：获取由于执行此 Statement 对象而创建的<strong>所有</strong>自动生成的主键</li></ul><p>**PreparedStatement ** <br> Statement 的子接口，用于执行带占位符（?）参数的 SQL 语句</p><ul><li>给参数设值即添加到批处理 <br> viod setXxx(int parameterIndex, Xxx value)：根据索引（从 1 开始）将 SQL 语句中指定位置的参数设置为 value 值，如果不清楚预编译 SQL 语句中各参数的类型，可以使用 setObject() 方法来传入参数 <br> void setBlob(int parameterIndex, InputStream inputStream)：将指定参数设置为输入流对象 <br> void addBatch()：将<strong>一组参数</strong>添加到此 PreparedStatement 对象的批处理命令中（调用前需先为参数设置）</li><li>执行语句 <br> int executeUpdate()：执行 DML 语句或 DDL 语句（无须接收 SQL 字符串） <br> ResultSet executeQuery()：执行 DQL 语句（无须接收 SQL 字符串）</li></ul><p><strong>ResultSet</strong> <br> 结果集对象 <br> boolean next()：将光标从当前行移动到下一行（光标的初始位置是第一行之前） <br> Xxx getXxx(int columnIndex)：获取当前行中的指定列索引（从 1 开始）的数据 <br> Xxx getXxx(String columnName)：获取当前行中的指定列名的数据</p><p>maven引入</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#E06C75;">  </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">mysql</span><span style="color:#56B6C2;">&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#E06C75;">  </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">mysql</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">connector</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">java</span><span style="color:#56B6C2;">&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#E06C75;">  </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">version</span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;">8.0</span><span style="color:#ABB2BF;">.</span><span style="color:#FFFFFF;">19</span><span style="color:#56B6C2;">&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">java.sql.*</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MySQLDemo</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// MySQL 8.0 以下版本 - JDBC 驱动名及数据库 URL</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// static final String JDBC_DRIVER = &quot;com.mysql.jdbc.Driver&quot;;  </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">//static final String DB_URL = &quot;jdbc:mysql://localhost:3306/RUNOOB&quot;;</span></span>
<span class="line"><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// MySQL 8.0 以上版本 - JDBC 驱动名及数据库 URL</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">final</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> JDBC_DRIVER </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">  </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">final</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> DB_URL </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;jdbc:mysql://localhost:3306/RUNOOB?useSSL=false&amp;serverTimezone=UTC&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 数据库的用户名与密码，需要根据自己的设置</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">final</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> USER </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">final</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> PASS </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;password&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">conn</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Statement</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">stmt</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 注册 JDBC 驱动</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">Class</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forName</span><span style="color:#ABB2BF;">(JDBC_DRIVER);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 打开链接</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;连接数据库...&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            conn </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">DriverManager</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnection</span><span style="color:#ABB2BF;">(DB_URL,USER,PASS);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 执行查询</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot; 实例化Statement对象...&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            stmt </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createStatement</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sql</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            sql </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;SELECT id, name, url FROM websites&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">ResultSet</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">rs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">stmt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeQuery</span><span style="color:#ABB2BF;">(sql);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 展开结果集数据库</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">()){</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInt</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;id&quot;</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">// 可以使用字段名</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getString</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">// 也可以使用字段的顺序，从1开始</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;url&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#7F848E;font-style:italic;">// 输出数据</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ID: &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> id </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;, 站点名称: &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> name) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;, 站点 URL: &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> url);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 完成后关闭</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">rs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">stmt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SQLException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">se</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 处理 JDBC 错误</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">se</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Exception</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 处理 Class.forName 错误</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#C678DD;">finally</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// 关闭资源</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(stmt</span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">stmt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SQLException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">se2</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span><span style="color:#7F848E;font-style:italic;">// 什么都不做</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(conn</span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SQLException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">se</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">se</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Goodbye!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><table><thead><tr><th>SQL数据类型</th><th>Java数据类型</th></tr></thead><tbody><tr><td>BIT, BOOL</td><td>boolean</td></tr><tr><td>INTEGER</td><td>int</td></tr><tr><td>BIGINT</td><td>long</td></tr><tr><td>REAL</td><td>float</td></tr><tr><td>FLOAT, DOUBLE</td><td>double</td></tr><tr><td>CHAR, VARCHAR</td><td>String</td></tr><tr><td>DECIMAL</td><td>BigDecimal</td></tr><tr><td>DATE</td><td>java.sql.Date, LocalDate</td></tr><tr><td>TIME</td><td>java.sql.Time, LocalTime</td></tr></tbody></table><p><strong>prepareStatement + batch</strong></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">void</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">main</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;">[] agr) throws ClassNotFoundException {</span></span>
<span class="line"><span style="color:#E06C75;">	</span><span style="color:#C678DD;">try</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		</span><span style="color:#E5C07B;">Class</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">            </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;">[] web</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;">[] {</span><span style="color:#98C379;">&quot;baidu&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;google&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;yahoo&quot;</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">		</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> sql </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;insert into site value(null,?,?,?)&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">		</span><span style="color:#C678DD;">try</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">Connection</span><span style="color:#E06C75;"> conn </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">DriverManager</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnection</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;jdbc:mysql://localhost/web</span></span>
<span class="line"><span style="color:#98C379;">                  ?useSSL=true&amp;serverTimezone=GMT&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;password&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">		</span><span style="color:#E5C07B;">PreparedStatement</span><span style="color:#E06C75;"> ps </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">prepareStatement</span><span style="color:#ABB2BF;">(sql,</span><span style="color:#E5C07B;">Statement</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">RETURN_GENERATED_KEYS</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">			</span><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E5C07B;">web</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;++</span><span style="color:#E06C75;">i) {</span></span>
<span class="line"><span style="color:#E06C75;">				</span><span style="color:#E5C07B;">ps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setInt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,i);</span></span>
<span class="line"><span style="color:#E06C75;">				</span><span style="color:#E5C07B;">ps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setString</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, web[i]);</span></span>
<span class="line"><span style="color:#E06C75;">				</span><span style="color:#E5C07B;">ps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setString</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">fun</span><span style="color:#ABB2BF;">(web[i]));</span></span>
<span class="line"><span style="color:#E06C75;">				</span><span style="color:#E5C07B;">ps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addBatch</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">			}</span></span>
<span class="line"><span style="color:#E06C75;">			</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] ns</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">ps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeBatch</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">			</span><span style="color:#C678DD;">for</span><span style="color:#E06C75;"> (</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> n </span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> ns) {</span></span>
<span class="line"><span style="color:#E06C75;">			        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(n </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot; inserted.&quot;</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// batch中每个SQL执行的结果数量</span></span>
<span class="line"><span style="color:#E06C75;">			}</span></span>
<span class="line"><span style="color:#E06C75;">		}</span></span>
<span class="line"><span style="color:#E06C75;">	} </span><span style="color:#C678DD;">catch</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">Exception</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">		</span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">	}</span></span>
<span class="line"><span style="color:#E06C75;">	</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;excuted&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"><span style="color:#E06C75;">             </span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">fun</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> a) {</span></span>
<span class="line"><span style="color:#E06C75;">		</span><span style="color:#C678DD;">return</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;www.&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;.com&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><strong>事务</strong></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setAutoCommit</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 关闭自动提交:</span></span>
<span class="line"><span style="color:#E5C07B;">stmt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;update site set name=&#39;google&#39; where id=4&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">stmt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;update site set url=</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">www.google.com</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;"> where id=4&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">commit</span><span style="color:#ABB2BF;">();</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 提交事务:</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>连接池</strong></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">java.sql.*</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">jdbc.ConnectionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">   </span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">TestConnectionPool</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">cp</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">ConnectionPool</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">; i++) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">WorkingThread</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;working thread&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> i, cp).</span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;">   </span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">WorkingThread</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">extends</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Thread</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#E06C75;"> cp</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">   </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> WorkingThread</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">cp</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">super</span><span style="color:#ABB2BF;">(name);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">cp</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> cp;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">   </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> run</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cp</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getName</span><span style="color:#ABB2BF;">()</span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;:</span><span style="color:#56B6C2;">\\t</span><span style="color:#98C379;"> 获取了一根连接，并开始工作&quot;</span><span style="color:#ABB2BF;">  );</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Statement</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">st</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">c</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createStatement</span><span style="color:#ABB2BF;">()){</span></span>
<span class="line"><span style="color:#ABB2BF;">             </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">//模拟时耗１秒的数据库ＳＱＬ语句</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">Thread</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">st</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;select * from hero&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">SQLException</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">InterruptedException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">cp</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">returnConnection</span><span style="color:#ABB2BF;">(c);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="network" tabindex="-1">Network <a class="header-anchor" href="#network" aria-hidden="true">#</a></h2><p>InetAddress</p><ul><li>类方法 <br> InetAddress getByName(String host)：根据主机获取对应的 IP 对象 <br> InetAddress getLocalHost()：类方法，获取本机 IP 地址对应的 IP 对象 <br> isReachable()：测试是否可以在指定时间内到达该地址</li><li>实例方法 <br> String getHostAddress()：返回该 InetAddress 实例对应的 IP 地址字符串 <br> String getHostName()：获取此 IP 地址的主机名 <br> String getCanonicalHostName()：获取此 IP 地址的全限定域名</li></ul><p>URL</p><ul><li>String URLDecoder.decode(String s, String enc)：使用指定字符集将特殊字符串转换成普通字符串（解码）</li><li>String URLEncoder.encode(String s, String enc)：使用指定字符集将普通字符串转换成特殊字符串（编码）（~ ! * ( ) - _ &#39; . 不会被编码）</li></ul><p>UDP</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Server</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	</span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">Exception</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;接受启动中···&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">DatagramSocket</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DatagramSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">9999</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">container</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">byte</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1024</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">60</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">DatagramPacket</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">packet</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DatagramPacket</span><span style="color:#ABB2BF;">(container,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">receive</span><span style="color:#ABB2BF;">(packet);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">datas</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">packet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getData</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">String</span><span style="color:#ABB2BF;">(datas,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">datas</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Client</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	</span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">Exception</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;发送启动中···&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">DatagramSocket</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">client</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DatagramSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8888</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">data</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;Web Programming&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">datas</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBytes</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">DatagramPacket</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">packet</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DatagramPacket</span><span style="color:#ABB2BF;">(datas,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">datas</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">InetSocketAddress</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;localhost&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">9999</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(packet);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><strong>Socket</strong></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">java.net.*</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">java.io.*</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">java.util.*</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//服务端</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Server</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">ServerSocket</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">ss</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">ServerSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8888</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;监听在端口号:8888&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">Socket</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ss</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;有连接过来&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> s);</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">InputStream</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">is</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInputStream</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">//把输入流封装在DataInputStream</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">DataInputStream</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">dis</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DataInputStream</span><span style="color:#ABB2BF;">(is);</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">//使用readUTF读取字符串</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">msg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">dis</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readUTF</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(msg);</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">dis</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">ss</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">IOException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 客户端</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Client</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">Socket</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Socket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8888</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">OutputStream</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">os</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOutputStream</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">DataOutputStream</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">dos</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DataOutputStream</span><span style="color:#ABB2BF;">(os);</span></span>
<span class="line"><span style="color:#ABB2BF;">             </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">//使用Scanner读取控制台的输入，并发送到服务端</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">Scanner</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sc</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">in</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">             </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">dos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeUTF</span><span style="color:#ABB2BF;">(str);</span></span>
<span class="line"><span style="color:#ABB2BF;">             </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">dos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">UnknownHostException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">IOException</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p><strong>RMI（Remote Method Invocation，远程调用）</strong> <br> 一个JVM中的代码可以通过网络实现远程调用另一个JVM的某个方法 <br> RMI要求服务器和客户端共享同一个接口</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">java.rmi.Remote</span></span>
<span class="line"><span style="color:#FFFFFF;">public</span><span style="color:#E5C07B;"> </span><span style="color:#FFFFFF;">interface</span><span style="color:#E5C07B;"> WorldClock </span><span style="color:#FFFFFF;">extends</span><span style="color:#E5C07B;"> Remote {</span></span>
<span class="line"><span style="color:#E5C07B;">    LocalDateTime getLocalDateTime(String zoneId) </span><span style="color:#FFFFFF;">throws</span><span style="color:#E5C07B;"> RemoteException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>服务器</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 服务器的实现类</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">WorldClockService</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">implements</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">WorldClock</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#61AFEF;"> getLocalDateTime</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">zoneId</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">RemoteException</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ZoneId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">of</span><span style="color:#ABB2BF;">(zoneId)).</span><span style="color:#61AFEF;">withNano</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将WorldClock实例注册到RMI服务</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Server</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">RemoteException</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;create World clock remote service...&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 实例化一个WorldClock:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">WorldClock</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">worldClock</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">WorldClockService</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 将此服务转换为远程服务接口:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">WorldClock</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">skeleton</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (WorldClock) </span><span style="color:#E5C07B;">UnicastRemoteObject</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exportObject</span><span style="color:#ABB2BF;">(worldClock, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 将RMI服务注册到1099端口:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Registry</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">registry</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">LocateRegistry</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createRegistry</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1099</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 注册此服务，服务名为&quot;WorldClock&quot;:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">registry</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rebind</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;WorldClock&quot;</span><span style="color:#ABB2BF;">, skeleton);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>客户端</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Client</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">RemoteException</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">NotBoundException</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 连接到服务器localhost，端口1099:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Registry</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">registry</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">LocateRegistry</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getRegistry</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;localhost&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1099</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 查找名称为&quot;WorldClock&quot;的服务并强制转型为WorldClock接口:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">WorldClock</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">worldClock</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (WorldClock) </span><span style="color:#E5C07B;">registry</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lookup</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;WorldClock&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 正常调用接口方法:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">now</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">worldClock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getLocalDateTime</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Asia/Shanghai&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 打印调用结果:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(now);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="web" tabindex="-1">Web <a class="header-anchor" href="#web" aria-hidden="true">#</a></h2><h3 id="servlet" tabindex="-1">Servlet <a class="header-anchor" href="#servlet" aria-hidden="true">#</a></h3><p>Server Applet，即小服务程序或服务连接器。Servlet 是 Java 编写的服务器端程序，具有独立于平台和协议的特性，主要功能在于交互式地浏览和生成数据，生成动态 Web 内容。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">interface</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Servlet</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> init</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">var1</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">ServletException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">ServletConfig</span><span style="color:#61AFEF;"> getServletConfig</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> service</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletRequest</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">var1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ServletResponse</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">var2</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">ServletException</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">IOException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#61AFEF;"> getServletInfo</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> destroy</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Servlet 生命周期</p><ol><li><strong>加载</strong> - 第一个到达服务器的 HTTP 请求被委派到 Servlet 容器。容器通过类加载器使用 Servlet 类对应的文件加载 servlet；</li><li><strong>初始化</strong> - Servlet 通过调用 <strong>init ()</strong> 方法进行初始化。</li><li><strong>服务</strong> - Servlet 调用 <strong>service()</strong> 方法来处理客户端的请求。</li><li><strong>销毁</strong> - Servlet 通过调用 <strong>destroy()</strong> 方法终止（结束）。</li><li><strong>卸载</strong> - Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。</li></ol><p>示例</p><ul><li>Servlet实例必须由Servlet容器自动创建，并给每个Servlet类创建唯一实例；</li><li>Servlet容器会使用多线程执行doGet()或doPost()方法</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">WebServlet</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">urlPatterns</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">HelloServlet</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">extends</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">HttpServlet</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">protected</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> doGet</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HttpServletRequest</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">HttpServletResponse</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">resp</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">            </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">ServletException</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">IOException</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 设置响应类型:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">resp</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setContentType</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;text/html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 获取输出流:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">PrintWriter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">pw</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">resp</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getWriter</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 写入响应:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">pw</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;h1&gt;Hello, world!&lt;/h1&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 强制输出:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">pw</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">flush</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>HttpServletRequest</strong></p><ul><li>获取请求行信息 <ul><li><code>String getMethod()</code>：获取请求方式</li><li><code>String getRequestURI()</code>：获取请求的 URI，从协议名称一直到查询字符串的那一部分，即返回请求行中的资源名，包括上下文路径，如 /test/index.html</li><li><code>StringBuffer getRequestURL()</code>：获取请求的 URL，包含协议、服务器名、端口号、资源路径信息，不包含查询字符串参数，即浏览器地址栏的内容</li><li><code>public String getQueryString()</code>：获取包含在请求 URL 中路径后面的查询字符串，即<code>?</code>后的字符串</li><li><code>String getContextPath()</code>：获取上下文路径，即 <code>&lt;Context /&gt;</code> 元素的 path 属性值</li></ul></li><li>获取请求头信息 <ul><li><code>String getHeader(String name)</code>：获取指定请求头的值</li><li><code>Enumeration&lt;String&gt; getHeaderNames()</code>：获取所有请求头的名称</li><li><code>Enumeration&lt;String&gt; getHeaders(String name)</code>：获取指定请求头的多个值</li><li><code>int getIntHeader(String name)</code>：获取指定请求头的值，并将该值转为整数值</li><li><code>Locale getLocale()</code>：根据 <strong>Accept-Language</strong> 请求头返回客户端将在其中接受内容的<strong>首选 Locale</strong>，如果客户端请求未提供 Accept-Language 请求头，则返回服务器的默认语言环境 <br> Enumeration getLocales()</li></ul></li><li>获取请求参数 <ul><li><code>String getParameter(String paramName)</code>：根据参数名称，获取对应请求参数的值</li><li><code>String[] getParameterValues(String paramName)</code>：根据参数名称，获取对应请求参数的多个所组成的数组</li><li><code>Map getParameterMap()</code>：获取所有请求参数名和参数值所组成的 Map 对象</li><li><code>Enumeration&lt;String&gt; getParameterNames()</code>：获取所有请求参数名所组成的 Enumeration 对象</li></ul></li><li>操作 request 范围的属性 <ul><li><code>setAttribute(String attrName, Object value)</code></li><li><code>getAttribute(String attrName)</code></li></ul></li><li>执行请求转发（forward）或请求包含（include） <ul><li>HttpServletRequest 类提供了一个 getRequestDispatcher (String path) 方法（获取请求分发器），其中 path 就是希望 forward 或者 include 的目标路径（以斜线开头表示当前 web 应用的根路径，不以斜线开头表示相对路径），该方法返回 <strong>RequestDispatcher</strong>，该对象提供了如下两个方法： <ul><li><code>void forward(ServletRequest request, ServletResponse response)</code>：执行 forward</li><li><code>void include(ServletRequest request, ServletResponse response)</code>：执行 include</li></ul></li><li>forward 用户请求时，请求参数和 request 范围的属性都不会丢失</li></ul></li><li>获取网络信息 <ul><li><code>String getRemoteAddr()</code>：返回发出请求的客户机的 IP 地址</li></ul></li><li>其它 <ul><li><code>ServletInputStream getInputStream()</code>：以二进制数据形式获取请求正文，返回输入流</li><li><code>BufferedReader getReader()</code>：获取请求正文</li></ul></li></ul><p><strong>HttpServletResponse</strong> <br> 常用方法</p><ul><li>void setCharacterEncoding(String charset)：设置将发送到客户端的响应的字符编码</li><li>void setContentType(String type)：设置将发送到客户端的响应的内容类型（MIME 类型、编码方式），如 &quot;text/html; charset=UTF-8&quot;、&quot;application/x-msdownload&quot;</li><li>void setHeader(String name, String value)：用给定名称和值设置响应头</li><li>void setStatus(int sc)：设置此响应的状态代码</li><li>ServletOutputStream getOutputStream()：获取响应输出字节流，可用于文件下载</li><li>PrintWriter getWriter()：获取可将字符文本发送到客户端的字符输出流</li><li>void sendRedirect(String path)：重新向 path 资源发送请求，path 需加上上下文路径（当以 http 开头时，表示重定向到外部的一个资源）</li><li>String encodeURL(String url)：通过将会话 ID 包含在指定 URL 中对该 URL 进行编码，如果不需要编码，则返回未更改的 URL（URL 重写，用于不支持 cookie 的浏览器）</li></ul><h3 id="filter" tabindex="-1">Filter <a class="header-anchor" href="#filter" aria-hidden="true">#</a></h3><p>对用户请求进行预处理，也可以对 HttpServletResponse 进行后处理</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">WebFilter</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">filterName</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;CharsetFilter&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#D19A66;">urlPatterns</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;/*&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">  </span><span style="color:#7F848E;font-style:italic;">//对所有的web资源进行拦截</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#D19A66;">initParams</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">WebInitParam</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">name</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;charset&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">value</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;utf-8&quot;</span><span style="color:#E06C75;">) </span><span style="color:#7F848E;font-style:italic;">// 初始化的参数</span></span>
<span class="line"><span style="color:#E06C75;">        })</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">CharsetFilter</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">implements</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Filter</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> filterName</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> charset</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> init</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">FilterConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">ServletException</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        filterName </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getFilterName</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        charset </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInitParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;charset&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;过滤器名称：&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> filterName);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;字符集编码：&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> charset);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> doFilter</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletRequest</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ServletResponse</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">resp</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">FilterChain</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">chain</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">throws</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">ServletException</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">IOException</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 对request和response进行一些处理，然后交给下一个过滤器或Servlet处理</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(filterName </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;doFilter()&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">req</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setCharacterEncoding</span><span style="color:#ABB2BF;">(charset);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">resp</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setCharacterEncoding</span><span style="color:#ABB2BF;">(charset);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">chain</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">doFilter</span><span style="color:#ABB2BF;">(req, resp);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> destroy</span><span style="color:#ABB2BF;">()</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(filterName </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;销毁&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="listener" tabindex="-1">Listener <a class="header-anchor" href="#listener" aria-hidden="true">#</a></h3><p>监听 Web 应用的内部事件</p><ul><li>ServletContextListener：用于监听 Web 应用的启动和关闭</li><li>ServletContextAttributeListener：用于监听 application 内属性的改变（被添加、删除、替换）</li><li>ServletRequestListener：用于监听用户请求的初始化和销毁</li><li>ServletRequestAttributeListener：用于监听 request 内属性的改变（被添加、删除、替换）</li><li>HttpSessionListener：用于监听 session 的创建和销毁（可以通过该监听器监听系统的在线用户）</li><li>HttpSessionAttributeListener：用于监听 session 内属性的改变（被添加、删除、替换）</li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">WebListener</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">value</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;servletContextListener&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ContextListener</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">implements</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ServletContextListener</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ServletContextAttributeListener</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> contextInitialized</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletContextEvent</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">sce</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">/*servletContext创建时调用*/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;项目启动了&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> contextDestroyed</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletContextEvent</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">sce</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">/*servletContext销毁时调用*/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;项目停止了&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> attributeAdded</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletContextAttributeEvent</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">scae</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">/* 添加属性时调用 */</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;新增的属性：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;">scae</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getName</span><span style="color:#ABB2BF;">()</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;:&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;">scae</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getValue</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> attributeRemoved</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletContextAttributeEvent</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">scae</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">/*属性移除时调用*/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;移除的属性：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;">scae</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getName</span><span style="color:#ABB2BF;">()</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;:&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;">scae</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getValue</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> attributeReplaced</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ServletContextAttributeEvent</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">scae</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">/*属性替换时调用（修改值）*/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;替换的属性：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;">scae</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getName</span><span style="color:#ABB2BF;">()</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;:&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;">scae</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getValue</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="国际化" tabindex="-1">国际化 <a class="header-anchor" href="#国际化" aria-hidden="true">#</a></h2><p>定义不同语种的模板 <br> Java 中将多语言文本存储在格式为 properties 的资源文件中，在<code>src/main/resources/locales</code> 路径下 <br> <code>&lt;资源名&gt;_&lt;语言代码&gt;_&lt;国家/地区编码&gt;.properties</code></p><p>JDK 的 bin 目录下有一个将非 ASCII 字符转为 Unicode 编码的工具：<strong>native2ascii</strong>。 <br> <code>native2ascii [-reverse] [-encoding 编码] [输入文件 [输出文件]]</code></p><p>java.util.Locale 对象表示了特定的地理、政治和文化地区</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 初始化一个通用英语的locale.</span></span>
<span class="line"><span style="color:#E5C07B;">Locale</span><span style="color:#E06C75;"> locale1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Locale</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 初始化一个加拿大英语的locale.</span></span>
<span class="line"><span style="color:#E5C07B;">Locale</span><span style="color:#E06C75;"> locale2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Locale</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;CA&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 初始化一个美式英语变种硅谷英语的locale</span></span>
<span class="line"><span style="color:#E5C07B;">Locale</span><span style="color:#E06C75;"> locale3 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Locale</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;US&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;SiliconValley&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 根据Locale常量初始化一个简体中文</span></span>
<span class="line"><span style="color:#E5C07B;">Locale</span><span style="color:#E06C75;"> locale4 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Locale</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SIMPLIFIED_CHINESE</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>java.util.ResourceBoundle 加载本地化资源文件的工具类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> baseName </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;realpath/bundleName&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 根据语言+地区编码初始化</span></span>
<span class="line"><span style="color:#E5C07B;">ResourceBundle</span><span style="color:#E06C75;"> rbUS </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ResourceBundle</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBundle</span><span style="color:#ABB2BF;">(baseName, </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Locale</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;US&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 根据Locale常量初始化</span></span>
<span class="line"><span style="color:#E5C07B;">ResourceBundle</span><span style="color:#E06C75;"> rbZhCN </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ResourceBundle</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBundle</span><span style="color:#ABB2BF;">(baseName, </span><span style="color:#E5C07B;">Locale</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SIMPLIFIED_CHINESE</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取本地系统默认的Locale初始化</span></span>
<span class="line"><span style="color:#E5C07B;">ResourceBundle</span><span style="color:#E06C75;"> rbDefault </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">ResourceBundle</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBundle</span><span style="color:#ABB2BF;">(baseName);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//等价 ResourceBundle rbDefault =ResourceBundle.getBundle(baseName, Locale.getDefault());</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;us-US:&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rbUS</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;time&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&quot;08:00&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;zh-CN：&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rbZhCN</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;key&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>支持本地化的工具类</strong> <br> NumberFormat</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;"> num </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">123456.78</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">NumberFormat</span><span style="color:#E06C75;"> format </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">NumberFormat</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getCurrencyInstance</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Locale</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SIMPLIFIED_CHINESE</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;%f 的本地化（%s）结果: %s&quot;</span><span style="color:#ABB2BF;">, num, </span><span style="color:#E5C07B;">Locale</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SIMPLIFIED_CHINESE</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">format</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(num));</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>DateFormat</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">Date</span><span style="color:#E06C75;"> date </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">DateFormat</span><span style="color:#E06C75;"> df </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">DateFormat</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getDateInstance</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DateFormat</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">MEDIUM</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Locale</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SIMPLIFIED_CHINESE</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;%s 的本地化（%s）结果: %s</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, date, </span><span style="color:#E5C07B;">Locale</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SIMPLIFIED_CHINESE</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">df</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(date));</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Messageformat 提供一种与语言无关的拼接消息的方式</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> pattern </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;{0}，你好！你于  {1} 消费  {2} 元。&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;">[] params </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span><span style="color:#98C379;">&quot;Jack&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">GregorianCalendar</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getTime</span><span style="color:#ABB2BF;">(),</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">8888</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">MessageFormat</span><span style="color:#E06C75;"> mf </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">MessageFormat</span><span style="color:#E06C75;">(pattern</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Locale</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SIMPLIFIED_CHINESE</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> msg </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">mf</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(params);</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(msg);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,137),t=[e];function r(c,B,y,i,F,A){return a(),n("div",null,t)}const u=s(o,[["render",r]]);export{E as __pageData,u as default};
