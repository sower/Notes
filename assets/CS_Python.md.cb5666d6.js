import{_ as t,c as p,a,x as s,t as e,N as l,o as r}from"./chunks/framework.54f528ff.js";const w=JSON.parse('{"title":"Python","description":"","frontmatter":{"title":"Python","created_at":"2022-02-01T05:44:44.000Z","updated_at":"2022-12-11T08:08:28.000Z","word_count":11274},"headers":[],"relativePath":"CS/Python.md"}'),o={name:"CS/Python.md"},c=l(`<h2 id="——-python-——" tabindex="-1">—— Python —— <a class="header-anchor" href="#——-python-——" aria-label="Permalink to &quot;—— Python ——&quot;">​</a></h2><p>Python是Guido van Rossum在1989年圣诞节期间编写的一个脚本语言。 <br> Python是一种广泛使用的解释型、高级编程、通用型编程语言。Python支持多种编程范式，包括面向对象、结构化、指令式、函数式和反射式编程。它拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，拥有一个巨大而广泛的标准库。 <br> Python源代码遵循 GPL(GNU General Public License)协议</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p>格式</p><ul><li>注释以#开头</li><li>缩进是语法的一部分</li><li>在非 [], {}, 或 () 中的多行语句，需要使用反斜杠(/)</li><li>同一行中使用多条语句，语句之间使用分号(;)分割</li></ul><p>如果不使用默认编码(utf-8)，文件的第一行要写成特殊的注释</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># -*- coding: encoding -*-</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>docstring（文档字符串）：一种特殊类型的注释，位于一个函数或类定义之后，或一个文件的开头，其功能是对定义的说明 <br> 用三个引号、单引号或者双引号括起来</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Test</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;&#39;&#39;测试 docstring 的类</span></span>
<span class="line"><span style="color:#98C379;">    &#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;&#39;&#39;Test类初始化对象,不需要任何参数</span></span>
<span class="line"><span style="color:#98C379;">        &#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.num </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">t </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Test</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#56B6C2;">help</span><span style="color:#ABB2BF;">(t)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>变量</strong></p><ul><li>变量无需声明，变量在使用前必须赋值，赋值后该变量才会被创建</li><li>在局部作用域需要修改全局变量时，需要使用关键字global</li><li>组合数据类型，如果局部变量未真实创建，则是全局变量</li></ul><p><strong>赋值</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">target1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> target2 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ···</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> expression</span></span>
<span class="line"><span style="color:#ABB2BF;">target1, target2, ···</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> expression1 ,expression2,···</span></span>
<span class="line"><span style="color:#ABB2BF;">target1, </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">target2 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> matching </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> length </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> iterable</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在交互模式（interactive mode）中，最后被输出的表达式结果被赋值给变量 <code>_</code></p><h2 id="命名规则-naming-convention" tabindex="-1">命名规则（Naming convention） <a class="header-anchor" href="#命名规则-naming-convention" aria-label="Permalink to &quot;命名规则（Naming convention）&quot;">​</a></h2><h3 id="关键字" tabindex="-1">关键字 <a class="header-anchor" href="#关键字" aria-label="Permalink to &quot;关键字&quot;">​</a></h3><table><thead><tr><th><strong>方法</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>and</td><td>逻辑运算符。</td></tr><tr><td>as</td><td>创建别名。</td></tr><tr><td>assert</td><td>用于调试。</td></tr><tr><td>async</td><td>修饰一个异步函数</td></tr><tr><td>await</td><td>等同yield from</td></tr><tr><td>break</td><td>跳出循环。</td></tr><tr><td>class</td><td>定义类。</td></tr><tr><td>continue</td><td>继续循环的下一个迭代。</td></tr><tr><td>def</td><td>定义函数。</td></tr><tr><td>del</td><td>删除对象。</td></tr><tr><td>elif</td><td>在条件语句中使用，等同于 else if。</td></tr><tr><td>else</td><td>用于条件语句。</td></tr><tr><td>except</td><td>处理异常，发生异常时如何执行。</td></tr><tr><td>False</td><td>布尔值，比较运算的结果。</td></tr><tr><td>finally</td><td>处理异常，无论是否存在异常，都将执行一段代码。</td></tr><tr><td>for</td><td>创建 for 循环。</td></tr><tr><td>from</td><td>导入模块的特定部分。</td></tr><tr><td>global</td><td>声明全局变量。</td></tr><tr><td>if</td><td>写一个条件语句。</td></tr><tr><td>import</td><td>导入模块。</td></tr><tr><td>in</td><td>检查列表、元组等集合中是否存在某个值。</td></tr><tr><td>is</td><td>测试两个变量是否相等。</td></tr><tr><td>lambda</td><td>创建匿名函数。</td></tr><tr><td>None</td><td>表示 null 值。</td></tr><tr><td>nonlocal</td><td>声明非局部变量。</td></tr><tr><td>not</td><td>逻辑运算符。</td></tr><tr><td>or</td><td>逻辑运算符。</td></tr><tr><td>pass</td><td>null 语句，什么都不做</td></tr><tr><td>raise</td><td>产生异常。</td></tr><tr><td>return</td><td>退出函数并返回值。</td></tr><tr><td>True</td><td>布尔值，比较运算的结果。</td></tr><tr><td>try</td><td>编写 try...except 语句。</td></tr><tr><td>while</td><td>创建 while 循环。</td></tr><tr><td>with</td><td>用于简化异常处理。</td></tr><tr><td>yield</td><td>结束函数，返回生成器。</td></tr></tbody></table><p>global 修饰变量后标识该变量是全局变量，可以用在任何地方，即使之前未定义该变量 <br> nonlocal 修饰变量后标识该变量是上一级函数中的局部变量，只能用于嵌套函数中，需要外层函数中定义了相应的局部变量，否则会发生错误</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">gcount </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">global_test</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">global</span><span style="color:#ABB2BF;">  gcount</span></span>
<span class="line"><span style="color:#ABB2BF;">    gcount </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;"> (gcount)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">make_counter</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    count </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">counter</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">nonlocal</span><span style="color:#ABB2BF;"> count</span></span>
<span class="line"><span style="color:#ABB2BF;">        count </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> count</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> counter</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>标识符：以字母或下划线开头，只能包含字母数字和下划线，区分大小写</p><h3 id="命名约定" tabindex="-1">命名约定 <a class="header-anchor" href="#命名约定" aria-label="Permalink to &quot;命名约定&quot;">​</a></h3><table><thead><tr><th><strong>Type</strong></th><th><strong>Public</strong></th><th><strong>Internal</strong></th></tr></thead><tbody><tr><td>Modules</td><td>lower_with_under</td><td>_lower_with_under</td></tr><tr><td>Packages</td><td>lower_with_under</td><td></td></tr><tr><td>Classes</td><td>CapWords</td><td>_CapWords</td></tr><tr><td>Exceptions</td><td>CapWords</td><td></td></tr><tr><td>Functions</td><td>lower_with_under()</td><td>_lower_with_under()</td></tr><tr><td>Global/Class Constants</td><td>CAPS_WITH_UNDER</td><td>_CAPS_WITH_UNDER</td></tr><tr><td>Global/Class Variables</td><td>lower_with_under</td><td>_lower_with_under</td></tr><tr><td>Instance Variables</td><td>lower_with_under</td><td>_lower_with_under (protected) or __lower_with_under (private)</td></tr><tr><td>Method Names</td><td>lower_with_under()</td><td>_lower_with_under() (protected) or __lower_with_under() (private)</td></tr><tr><td>Function/Method Parameters</td><td>lower_with_under</td><td></td></tr><tr><td>Local Variables</td><td>lower_with_under</td><td></td></tr></tbody></table><ul><li>_spam（单下划线开头）：弱“内部使用”标识，表示不能直接访问的类属性，其无法通过 from...import* 的方式导入</li><li>spam_（单下划线结尾）：为了避免与python关键字的命名冲突。</li><li>__spam（双下划线开头）：类的私有名称，比如在类SpamEggs内，__spam将变成_SpamEggs__spam。</li><li><strong>spam</strong>（双下划线开头双下划线结尾）：指那些包含在用户控制的名字空间中的“魔术”对象或特性，比如__name__、<strong>doc</strong>、<strong>init</strong>、<strong>import</strong>、__file__等。</li></ul><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><ul><li>immutable：Number（数字）、String（字符串）、Tuple（元组）；</li><li>mutable：List（列表）、Dictionary（字典）、Set（集合）。</li></ul><p><strong>hashable -- 可哈希</strong>：一个对象的哈希值如果在其生命周期内绝不改变 <br> 不可变序列类型实现对 <a href="https://docs.python.org/zh-cn/3/library/functions.html#hash" target="_blank" rel="noreferrer">hash()</a> 内置函数的支持</p><p><strong>None</strong>：NoneType 类型的唯一值，常用于表示缺少值 <br> <strong>bool：True，False</strong></p><h3 id="二进制序列" tabindex="-1">二进制序列 <a class="header-anchor" href="#二进制序列" aria-label="Permalink to &quot;二进制序列&quot;">​</a></h3><ul><li><strong>bytes</strong>：由单个字节构成的不可变序列，表示 bytes 字面值的语法与字符串字面值的大致相同，只是添加了一个 b 前缀 <ul><li>class bytes([source[, encoding[, errors]]])</li></ul></li><li><strong>bytearray</strong>： bytes 对象的可变对应物，没有专属的字面值语法，通过调用构造器来创建</li><li>**memoryview **内存视图：允许 Python 代码访问一个对象的内部数据，只要该对象支持 <a href="https://docs.python.org/zh-cn/3/c-api/buffer.html#bufferobjects" target="_blank" rel="noreferrer">缓冲区协议</a> 而无需进行拷贝</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> v </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">memoryview</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">b</span><span style="color:#98C379;">&#39;abcefg&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> v[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#D19A66;">98</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> v[</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#D19A66;">103</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> v[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">memory at </span><span style="color:#C678DD;">0x</span><span style="color:#D19A66;">7f3ddc9f4350</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">bytes</span><span style="color:#ABB2BF;">(v[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#C678DD;">b</span><span style="color:#98C379;">&#39;bce&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,30),B=s("br",null,null,-1),i=l('<ul><li>int (长整型）：无溢出</li><li>float (浮点数)： 1.23、3E-2</li><li>complex (复数)：1 + 2.2j，complex(a,b)</li></ul><p><strong>常量：正无穷float(&#39;inf&#39;) ，负无穷float(&#39;-inf&#39;) ，非数float(&#39;nan&#39;)</strong></p><p><strong>int</strong></p><ul><li>**int.bit_length()：**返回以二进制表示一个整数所需要的位数，不包括符号位和前面的零</li><li>**int.to_bytes(length, byteorder, *, signed=False)：**返回表示一个整数的字节数组</li><li>**int.as_integer_ratio()：**返回一对整数，其比率正好等于原整数并且分母为正数</li><li>**classmethod int.from_bytes(bytes, byteorder, *, signed=False)：**返回由给定字节数组所表示的整数</li></ul><p><strong>float</strong></p><ul><li>**float.as_integer_ratio()：**将一个float用分数表示出来，返回Tuple(Numerator，enominator)</li><li>**float.is_integer()：**判断一个float型数字是否是整数，返回布尔值。</li><li>**float.hex()：**以十六进制字符串的形式返回一个浮点数表示</li><li>**classmethod float.fromhex(s)：**返回以十六进制字符串 s 表示的浮点数的类方法</li></ul><h3 id="str-字符串" tabindex="-1">Str (字符串) <a class="header-anchor" href="#str-字符串" aria-label="Permalink to &quot;Str (字符串)&quot;">​</a></h3><p>由 Unicode 码位构成的不可变 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#typesseq" target="_blank" rel="noreferrer">序列</a></p><ul><li>单引号和双引号使用完全相同，反斜杠可以用来转义</li><li>使用三引号(&#39;&#39;&#39;或&quot;&quot;&quot;)可以指定一个多行字符串。</li><li>按字面意义级联字符串，如&quot;this &quot; &quot;is &quot; &quot;string&quot;会被自动转换为this is string。</li><li>没有单独的字符类型，一个字符就是长度为 1 的字符串。</li></ul><p>字符串前缀</p>',10),y=s("li",null,"b byte",-1),d=s("li",null,"u unicode",-1),b=s("li",null,"r raw string，不识别转义",-1),h=l(`<table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/python/ref_string_capitalize.asp" target="_blank" rel="noreferrer">capitalize()</a></td><td>把首字符转换为大写。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_casefold.asp" target="_blank" rel="noreferrer">casefold()</a></td><td>把字符串转换为小写。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_center.asp" target="_blank" rel="noreferrer">center()</a></td><td>返回居中的字符串。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_count.asp" target="_blank" rel="noreferrer">count()</a></td><td>返回指定值在字符串中出现的次数。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_encode.asp" target="_blank" rel="noreferrer">encode()</a></td><td>返回字符串的编码版本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_endswith.asp" target="_blank" rel="noreferrer">endswith()</a></td><td>如果字符串以指定值结尾，则返回 true。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_expandtabs.asp" target="_blank" rel="noreferrer">expandtabs()</a></td><td>设置字符串的 tab 尺寸。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_find.asp" target="_blank" rel="noreferrer">find()</a></td><td>在字符串中搜索指定的值并返回它被找到的位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_format.asp" target="_blank" rel="noreferrer">format()</a></td><td>格式化字符串中的指定值。</td></tr><tr><td>format_map()</td><td>格式化字符串中的指定值。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_index.asp" target="_blank" rel="noreferrer">index()</a></td><td>在字符串中搜索指定的值并返回它被找到的位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isalnum.asp" target="_blank" rel="noreferrer">isalnum()</a></td><td>如果字符串中的所有字符都是字母数字，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isalpha.asp" target="_blank" rel="noreferrer">isalpha()</a></td><td>如果字符串中的所有字符都在字母表中，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isdecimal.asp" target="_blank" rel="noreferrer">isdecimal()</a></td><td>如果字符串中的所有字符都是小数，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isdigit.asp" target="_blank" rel="noreferrer">isdigit()</a></td><td>如果字符串中的所有字符都是数字，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isidentifier.asp" target="_blank" rel="noreferrer">isidentifier()</a></td><td>如果字符串是标识符，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_islower.asp" target="_blank" rel="noreferrer">islower()</a></td><td>如果字符串中的所有字符都是小写，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isnumeric.asp" target="_blank" rel="noreferrer">isnumeric()</a></td><td>如果字符串中的所有字符都是数，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isprintable.asp" target="_blank" rel="noreferrer">isprintable()</a></td><td>如果字符串中的所有字符都是可打印的，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isspace.asp" target="_blank" rel="noreferrer">isspace()</a></td><td>如果字符串中的所有字符都是空白字符，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_istitle.asp" target="_blank" rel="noreferrer">istitle()</a></td><td>如果字符串遵循标题规则，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_isupper.asp" target="_blank" rel="noreferrer">isupper()</a></td><td>如果字符串中的所有字符都是大写，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_join.asp" target="_blank" rel="noreferrer">join()</a></td><td>把可迭代对象的元素连接到字符串的末尾。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_ljust.asp" target="_blank" rel="noreferrer">ljust()</a></td><td>返回字符串的左对齐版本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_lower.asp" target="_blank" rel="noreferrer">lower()</a></td><td>把字符串转换为小写。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_lstrip.asp" target="_blank" rel="noreferrer">lstrip()</a></td><td>返回字符串的左修剪版本。</td></tr><tr><td>maketrans()</td><td>返回在转换中使用的转换表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_partition.asp" target="_blank" rel="noreferrer">partition()</a></td><td>返回元组，其中的字符串被分为三部分。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_replace.asp" target="_blank" rel="noreferrer">replace()</a></td><td>返回字符串，其中指定的值被替换为指定的值。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_rfind.asp" target="_blank" rel="noreferrer">rfind()</a></td><td>在字符串中搜索指定的值，并返回它被找到的最后位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_rindex.asp" target="_blank" rel="noreferrer">rindex()</a></td><td>在字符串中搜索指定的值，并返回它被找到的最后位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_rjust.asp" target="_blank" rel="noreferrer">rjust()</a></td><td>返回字符串的右对齐版本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_rpartition.asp" target="_blank" rel="noreferrer">rpartition()</a></td><td>返回元组，其中字符串分为三部分。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_rsplit.asp" target="_blank" rel="noreferrer">rsplit()</a></td><td>在指定的分隔符处拆分字符串，并返回列表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_rstrip.asp" target="_blank" rel="noreferrer">rstrip()</a></td><td>返回字符串的右边修剪版本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_split.asp" target="_blank" rel="noreferrer">split()</a></td><td>在指定的分隔符处拆分字符串，并返回列表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_splitlines.asp" target="_blank" rel="noreferrer">splitlines()</a></td><td>在换行符处拆分字符串并返回列表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_startswith.asp" target="_blank" rel="noreferrer">startswith()</a></td><td>如果以指定值开头的字符串，则返回 true。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_strip.asp" target="_blank" rel="noreferrer">strip()</a></td><td>返回字符串的剪裁版本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_swapcase.asp" target="_blank" rel="noreferrer">swapcase()</a></td><td>切换大小写，小写成为大写，反之亦然。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_title.asp" target="_blank" rel="noreferrer">title()</a></td><td>把每个单词的首字符转换为大写。</td></tr><tr><td>translate()</td><td>返回被转换的字符串。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_upper.asp" target="_blank" rel="noreferrer">upper()</a></td><td>把字符串转换为大写。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_string_zfill.asp" target="_blank" rel="noreferrer">zfill()</a></td><td>在字符串的开头填充指定数量的 0 值。</td></tr></tbody></table><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">trantab </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">maketrans</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hare&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;3542&#39;</span><span style="color:#ABB2BF;">)   </span><span style="color:#7F848E;font-style:italic;"># 制作翻译表</span></span>
<span class="line"><span style="color:#ABB2BF;">str1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">translate</span><span style="color:#ABB2BF;">(trantab,</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="string" tabindex="-1">string <a class="header-anchor" href="#string" aria-label="Permalink to &quot;string&quot;">​</a></h4><ul><li>ascii_lowercase：小写字母 &#39;abcdefghijklmnopqrstuvwxyz&#39;。</li><li>ascii_uppercase：大写字母 &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;。</li><li>ascii_letters：ascii_lowercase 和 ascii_uppercase 常量的拼连。</li><li>digits：字符串 &#39;0123456789&#39;。</li><li>hexdigits：字符串 &#39;0123456789abcdefABCDEF&#39;。</li><li>octdigits：字符串 &#39;01234567&#39;。</li><li>punctuation：由在 C 区域设置中被视为标点符号的 ASCII 字符所组成的字符串: \`!&quot;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[]^_|{}~.\`\`</li><li>whitespace：空白符号的 ASCII 字符组成的字符串。 包括空格、制表、换行、回车、进纸和纵向制表符。</li><li>printable：可打印符号的 ASCII 字符组成的字符串。 digits, ascii_letters, punctuation 和 whitespace 的总和。</li></ul><p>**string.capwords(s, sep=None) **首字母大写</p><p><strong>class string.Formatter</strong></p><ul><li>format(format_string, /, *args, **kwargs)</li><li>vformat(format_string, args, kwargs)</li><li>parse(format_string)：循环遍历 format_string 并返回一个由可迭代对象组成的元组 (literal_text, field_name, format_spec, conversion)</li><li>get_field(field_name, args, kwargs)</li><li>check_unused_args(used_args, args, kwargs)</li><li>format_field(value, format_spec)</li><li>convert_field(value, conversion)</li></ul><p><strong>class string.Template(template)</strong> <br> substitute(mapping={}, /, **kwds)：执行模板替换，返回一个新字符串 <br> safe_substitute(mapping={}, /, **kwds)</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;"> string </span><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> Template</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> s </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Template</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;$who likes $what&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> s.</span><span style="color:#61AFEF;">substitute</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">who</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;tim&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">what</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;kung pao&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#98C379;">&#39;tim likes kung pao&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="list-列表" tabindex="-1">List（列表） <a class="header-anchor" href="#list-列表" aria-label="Permalink to &quot;List（列表）&quot;">​</a></h3><p>列表：写在方括号 [ ] 之间、用逗号分隔开的元素列表。元素的类型可以不同，可以嵌套。</p><p><strong>创建 n*m 列表：</strong><code>a = [ [None] * m for _ in range(n) ]</code></p><p><strong>列表方法</strong></p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://www.runoob.com/python3/python3-att-list-append.html" target="_blank" rel="noreferrer">list.append(obj)</a></td><td>在列表末尾添加新的对象</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-count.html" target="_blank" rel="noreferrer">list.count(obj)</a></td><td>统计某个元素在列表中出现的次数</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-extend.html" target="_blank" rel="noreferrer">list.extend(seq)</a></td><td>在列表末尾一次性追加另一个序列中的多个值</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-index.html" target="_blank" rel="noreferrer">list.index(obj)</a></td><td>从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-insert.html" target="_blank" rel="noreferrer">list.insert(index, obj)</a></td><td>将对象插入列表</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-pop.html" target="_blank" rel="noreferrer">list.pop([index=-1])</a></td><td>移除列表中的一个元素（默认最后一个元素），并且返回</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-remove.html" target="_blank" rel="noreferrer">list.remove(obj)</a></td><td>移除列表中某个值的第一个匹配项</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-reverse.html" target="_blank" rel="noreferrer">list.reverse()</a></td><td>反向列表中元素</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-sort.html" target="_blank" rel="noreferrer">list.sort( key=None, reverse=False)</a></td><td>对原列表进行排序</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-clear.html" target="_blank" rel="noreferrer">list.clear()</a></td><td>清空列表</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-copy.html" target="_blank" rel="noreferrer">list.copy()</a></td><td>复制列表</td></tr></tbody></table><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">L.</span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">lambda</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;font-style:italic;">x</span><span style="color:#ABB2BF;">:(</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">x[i],x[j]))		</span><span style="color:#7F848E;font-style:italic;"># operator.itemgetter() 优于 lambda</span></span>
<span class="line"><span style="color:#ABB2BF;">flatter_list     </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">list</span><span style="color:#ABB2BF;">(itertools.chain.</span><span style="color:#61AFEF;">from_iterable</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">&lt;list&gt;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">product_of_elems </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> functools.</span><span style="color:#61AFEF;">reduce</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">lambda</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;font-style:italic;">out</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">el</span><span style="color:#ABB2BF;">: out </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> el, </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">collection</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="tuple-元组" tabindex="-1">Tuple（元组） <a class="header-anchor" href="#tuple-元组" aria-label="Permalink to &quot;Tuple（元组）&quot;">​</a></h3><p>与列表类似，不同之处在于元组的元素不能修改。元组写在小括号（ ）里，元素之间用逗号隔开。 <br> tuple可以包含可变的对象</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">tup1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ()    </span><span style="color:#7F848E;font-style:italic;"># 空元组</span></span>
<span class="line"><span style="color:#ABB2BF;">tup2 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">,) </span><span style="color:#7F848E;font-style:italic;"># 一个元素，需要在元素后添加逗号</span></span>
<span class="line"><span style="color:#ABB2BF;">tup3 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="set-集合" tabindex="-1">Set（集合） <a class="header-anchor" href="#set-集合" aria-label="Permalink to &quot;Set（集合）&quot;">​</a></h3><p>由具有唯一性的 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-hashable" target="_blank" rel="noreferrer">hashable</a> 对象所组成的无序多项集 <br> frozenset：不可变并且为 hashable --- 其内容在被创建后不能再改变</p><p>注意：创建一个空集合必须用 set() ，{ } 是用来创建一个空字典。</p><p><strong>集合方法</strong></p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/python/ref_set_add.asp" target="_blank" rel="noreferrer">add()</a></td><td>向集合添加元素。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_clear.asp" target="_blank" rel="noreferrer">clear()</a></td><td>删除集合中的所有元素。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_copy.asp" target="_blank" rel="noreferrer">copy()</a></td><td>返回集合的副本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_difference.asp" target="_blank" rel="noreferrer">difference()</a></td><td>返回包含两个或更多集合之间差异的集合。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_difference_update.asp" target="_blank" rel="noreferrer">difference_update()</a></td><td>删除此集合中也包含在另一个指定集合中的项目。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_discard.asp" target="_blank" rel="noreferrer">discard()</a></td><td>删除指定项目。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_intersection.asp" target="_blank" rel="noreferrer">intersection()</a></td><td>返回为两个其他集合的交集的集合。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_intersection_update.asp" target="_blank" rel="noreferrer">intersection_update()</a></td><td>删除此集合中不存在于其他指定集合中的项目。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_isdisjoint.asp" target="_blank" rel="noreferrer">isdisjoint()</a></td><td>返回两个集合是否有交集。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_issubset.asp" target="_blank" rel="noreferrer">issubset()</a></td><td>返回另一个集合是否包含此集合。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_issuperset.asp" target="_blank" rel="noreferrer">issuperset()</a></td><td>返回此集合是否包含另一个集合。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_pop.asp" target="_blank" rel="noreferrer">pop()</a></td><td>从集合中删除一个元素。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_remove.asp" target="_blank" rel="noreferrer">remove()</a></td><td>删除指定元素。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_symmetric_difference.asp" target="_blank" rel="noreferrer">symmetric_difference()</a></td><td>返回具有两组集合的对称差集的集合。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_symmetric_difference_update.asp" target="_blank" rel="noreferrer">symmetric_difference_update()</a></td><td>插入此集合和另一个集合的对称差集。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_union.asp" target="_blank" rel="noreferrer">union()</a></td><td>返回包含集合并集的集合。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_set_update.asp" target="_blank" rel="noreferrer">update()</a></td><td>用此集合和其他集合的并集来更新集合。</td></tr></tbody></table><p>运算</p><ul><li>**交集 &amp; **: <code>**x&amp;y**</code>，包括同时在集合 x 和y中的共同元素。</li><li><strong>并集 |</strong> : <code>**x|y**</code>，包括集合 x 和 y 中所有元素。</li><li><strong>差集 -</strong> : <code>**x-y**</code>，包括在集合 x 中但不在集合 y 中的元素。</li><li><strong>补集 ^</strong> : <code>**x^y**</code>，包括集合 x 和 y 的非共同元素</li></ul><h3 id="dictionary-字典" tabindex="-1">Dictionary（字典） <a class="header-anchor" href="#dictionary-字典" aria-label="Permalink to &quot;Dictionary（字典）&quot;">​</a></h3><p>字典是一种映射类型，一种可变容器模型，且可存储任意类型对象。字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_clear.asp" target="_blank" rel="noreferrer">clear()</a></td><td>删除字典中的所有元素</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_copy.asp" target="_blank" rel="noreferrer">copy()</a></td><td>返回字典的副本</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_fromkeys.asp" target="_blank" rel="noreferrer">fromkeys()</a></td><td>返回拥有指定键和值的字典</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_get.asp" target="_blank" rel="noreferrer">get()</a></td><td>返回指定键的值</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_items.asp" target="_blank" rel="noreferrer">items()</a></td><td>返回包含每个键值对的元组的列表</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_keys.asp" target="_blank" rel="noreferrer">keys()</a></td><td>返回包含字典键的列表</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_pop.asp" target="_blank" rel="noreferrer">pop()</a></td><td>删除拥有指定键的元素</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_popitem.asp" target="_blank" rel="noreferrer">popitem()</a></td><td>删除最后插入的键值对</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_setdefault.asp" target="_blank" rel="noreferrer">setdefault()</a></td><td>返回指定键的值。如果该键不存在，则插入具有指定值的键。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_update.asp" target="_blank" rel="noreferrer">update()</a></td><td>使用指定的键值对字典进行更新</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_dictionary_values.asp" target="_blank" rel="noreferrer">values()</a></td><td>返回字典中所有值的列表</td></tr></tbody></table><p>对字典排序</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">D </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">sorted</span><span style="color:#ABB2BF;">(d.</span><span style="color:#61AFEF;">items</span><span style="color:#ABB2BF;">(), </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">lambda</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;font-style:italic;">x</span><span style="color:#ABB2BF;">:(x[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">],x[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]]), [reverse = </span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="类型转换" tabindex="-1">类型转换 <a class="header-anchor" href="#类型转换" aria-label="Permalink to &quot;类型转换&quot;">​</a></h3><table><thead><tr><th>int(x [,base=10])</th><th>将x转换为一个整数</th></tr></thead><tbody><tr><td><a href="https://www.runoob.com/python3/python-func-float.html" target="_blank" rel="noreferrer">float(x)</a></td><td>将x转换到一个浮点数</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-complex.html" target="_blank" rel="noreferrer">complex(real [,imag])</a></td><td>创建一个复数</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-str.html" target="_blank" rel="noreferrer">str(x)</a></td><td>将对象 x 转换为字符串</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-repr.html" target="_blank" rel="noreferrer">repr(x)</a></td><td>将对象 x 转换为表达式字符串</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-eval.html" target="_blank" rel="noreferrer">eval(str)</a></td><td>用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-func-tuple.html" target="_blank" rel="noreferrer">tuple(s)</a></td><td>将序列 s 转换为一个元组</td></tr><tr><td><a href="https://www.runoob.com/python3/python3-att-list-list.html" target="_blank" rel="noreferrer">list(s)</a></td><td>将序列 s 转换为一个列表</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-set.html" target="_blank" rel="noreferrer">set(s)</a></td><td>转换为可变集合</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-dict.html" target="_blank" rel="noreferrer">dict(d)</a></td><td>创建一个字典。d 必须是一个 (key, value)元组序列。</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-frozenset.html" target="_blank" rel="noreferrer">frozenset(s)</a></td><td>转换为不可变集合</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-chr.html" target="_blank" rel="noreferrer">chr(int)</a></td><td>将一个整数转换为一个字符</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-ord.html" target="_blank" rel="noreferrer">ord(</a>str<a href="https://www.runoob.com/python3/python-func-ord.html" target="_blank" rel="noreferrer">)</a></td><td>将一个字符转换为它的整数值</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_bin.asp" target="_blank" rel="noreferrer">bin()</a></td><td>返回数的二进制形式的字符串，以‘0b’开头</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-hex.html" target="_blank" rel="noreferrer">hex(x)</a></td><td>将一个整数转换为一个十六进制字符串</td></tr><tr><td><a href="https://www.runoob.com/python3/python-func-oct.html" target="_blank" rel="noreferrer">oct(x)</a></td><td>将一个整数转换为一个八进制字符串</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_bool.asp" target="_blank" rel="noreferrer">bool()</a></td><td>返回指定对象的布尔值。</td></tr></tbody></table><h3 id="enum" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/enum.html#module-enum" target="_blank" rel="noreferrer">enum</a> <a class="header-anchor" href="#enum" aria-label="Permalink to &quot;[enum](https://docs.python.org/zh-cn/3/library/enum.html#module-enum)&quot;">​</a></h3><p>基类</p><ul><li>class enum.Enum：创建枚举常量</li><li>class enum.IntEnum：创建属于 int 的子类的枚举常量。</li><li>class enum.IntFlag：创建可使用按位运算符进行组合而不会丢失其 IntFlag 成员资格的枚举常量。</li><li>class enum.Flag：创建枚举常量 可使用按位运算符进行组合而不会丢失其 Flag 成员资格的枚举常量。</li></ul><p><strong>enum.unique()</strong>：此 Enum 类装饰器可确保只将一个名称绑定到任意一个值。 <br> <strong>class enum.auto</strong>：实例会被替换为一个可用作 Enum 成员的正确值。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;"> enum </span><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> Enum</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Color</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Enum</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">     </span><span style="color:#D19A66;">RED</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">     </span><span style="color:#D19A66;">GREEN</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span></span>
<span class="line"><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">     </span><span style="color:#D19A66;">BLUE</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">3</span></span>
<span class="line"><span style="color:#D19A66;">...</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(Color.</span><span style="color:#D19A66;">RED</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">Color.</span><span style="color:#D19A66;">RED</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">repr</span><span style="color:#ABB2BF;">(Color.</span><span style="color:#D19A66;">RED</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">Color.</span><span style="color:#D19A66;">RED</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> member </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> Color.</span><span style="color:#D19A66;">RED</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> member.name</span></span>
<span class="line"><span style="color:#98C379;">&#39;RED&#39;</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> member.value</span></span>
<span class="line"><span style="color:#D19A66;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="decimal" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/decimal.html#module-decimal" target="_blank" rel="noreferrer">decimal</a> <a class="header-anchor" href="#decimal" aria-label="Permalink to &quot;[decimal](https://docs.python.org/zh-cn/3/library/decimal.html#module-decimal)&quot;">​</a></h3><p><strong>class decimal.Decimal(value=&quot;0&quot;, context=None)</strong> <br> 为快速正确舍入的十进制浮点运算提供支持</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;"> decimal </span><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getcontext</span><span style="color:#ABB2BF;">().prec </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">6</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0.142857&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getcontext</span><span style="color:#ABB2BF;">().prec </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">28</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0.1428571428571428571428571429&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> data </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">list</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">map</span><span style="color:#ABB2BF;">(Decimal, </span><span style="color:#98C379;">&#39;1.34 1.87 3.45 2.35 1.00 0.03 9.25&#39;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">()))</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">max</span><span style="color:#ABB2BF;">(data)</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;9.25&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">min</span><span style="color:#ABB2BF;">(data)</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0.03&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">sorted</span><span style="color:#ABB2BF;">(data)</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0.03&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1.00&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1.34&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1.87&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2.35&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;3.45&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;9.25&#39;</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">sum</span><span style="color:#ABB2BF;">(data)</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;19.29&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> a,b,c </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> data[:</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">str</span><span style="color:#ABB2BF;">(a)</span></span>
<span class="line"><span style="color:#98C379;">&#39;1.34&#39;</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">float</span><span style="color:#ABB2BF;">(a)</span></span>
<span class="line"><span style="color:#D19A66;">1.34</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">round</span><span style="color:#ABB2BF;">(a, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1.3&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">int</span><span style="color:#ABB2BF;">(a)</span></span>
<span class="line"><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">5</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;6.70&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> b</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2.5058&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> c </span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;"> a</span></span>
<span class="line"><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0.77&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="fractions" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/fractions.html#module-fractions" target="_blank" rel="noreferrer">fractions</a> <a class="header-anchor" href="#fractions" aria-label="Permalink to &quot;[fractions](https://docs.python.org/zh-cn/3/library/fractions.html#module-fractions)&quot;">​</a></h3><ul><li>class fractions.Fraction(numerator=0, denominator=1)</li><li>class fractions.Fraction(other_fraction)</li><li>class fractions.Fraction(float)</li><li>class fractions.Fraction(decimal)</li><li>class fractions.Fraction(string)</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;"> fractions </span><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> Fraction</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">16</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">123</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">123</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;3/7&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39; -3/7 &#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1.414213 </span><span style="color:#56B6C2;">\\t\\n</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1414213</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1000000</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-.125&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;7e-6&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1000000</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2.25</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1.1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2476979795053773</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2251799813685248</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;"> decimal </span><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> Decimal</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Decimal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1.1&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#61AFEF;">Fraction</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h2><p><strong>算数运算符</strong></p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>+</td><td>加 或 序列的拼接</td></tr><tr><td>-</td><td>减</td></tr><tr><td>*</td><td>乘 或 序列的多次拼接</td></tr><tr><td>/</td><td>除</td></tr><tr><td>%</td><td>取模</td></tr><tr><td>**</td><td>幂</td></tr><tr><td>//</td><td>取整除 - 向下取整，与分母分子的数据类型有关</td></tr></tbody></table><p><strong>逻辑运算符</strong></p><table><thead><tr><th>运算符</th><th>逻辑表达式</th><th>描述</th></tr></thead><tbody><tr><td>and</td><td>x and y</td><td>if x is false, then x, else y</td></tr><tr><td>or</td><td>x or y</td><td>if x is false, then y, else x</td></tr><tr><td>not</td><td>not x</td><td>if x is false, then True, else False</td></tr></tbody></table><p><strong>成员运算符</strong></p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>in</td><td>如果在指定的序列中找到值返回 True，否则返回 False。</td></tr><tr><td>not in</td><td>如果在指定的序列中没有找到值返回 True，否则返回 False。</td></tr></tbody></table><p><strong>身份运算符</strong></p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>is</td><td>判断两个标识符是不是引用自一个对象</td><td>x is y, 类似 id(x) == id(y)</td></tr><tr><td>is not</td><td>判断两个标识符是不是引用自不同对象</td><td>x is not y ， 类似 id(a) != id(b)</td></tr></tbody></table><p>注： id() 函数用于获取对象内存地址。身份运算符用于比较两个对象的存储单元</p><h3 id="运算符优先级" tabindex="-1">运算符优先级 <a class="header-anchor" href="#运算符优先级" aria-label="Permalink to &quot;运算符优先级&quot;">​</a></h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>**</td><td>指数 (最高优先级)</td></tr><tr><td>~ + -</td><td>按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td>* / % //</td><td>乘，除，取模和取整除</td></tr><tr><td>+ -</td><td>加法减法</td></tr><tr><td>&gt;&gt; &lt;&lt;</td><td>右移，左移运算符</td></tr><tr><td>&amp;</td><td>位 &#39;AND&#39;</td></tr><tr><td>^ |</td><td>位运算符</td></tr><tr><td>&lt;= &lt; &gt; &gt;=</td><td>比较运算符</td></tr><tr><td>&lt;&gt; == !=</td><td>等于运算符</td></tr><tr><td>= %= /= //= -= += *= **=</td><td>赋值运算符</td></tr><tr><td>is is not</td><td>身份运算符</td></tr><tr><td>in not in</td><td>成员运算符</td></tr><tr><td>not and or</td><td>逻辑运算符</td></tr></tbody></table><h2 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-label="Permalink to &quot;流程控制&quot;">​</a></h2><h3 id="条件" tabindex="-1">条件 <a class="header-anchor" href="#条件" aria-label="Permalink to &quot;条件&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">if</span><span style="color:#ABB2BF;"> condition_1:</span></span>
<span class="line"><span style="color:#ABB2BF;">    statement_block_1</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#C678DD;font-style:italic;">elif</span><span style="color:#ABB2BF;"> condition_2:</span></span>
<span class="line"><span style="color:#ABB2BF;">    statement_block_2</span></span>
<span class="line"><span style="color:#D19A66;">...</span></span>
<span class="line"><span style="color:#C678DD;font-style:italic;">else</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    statement_block_3]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>模式匹配</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">match</span><span style="color:#ABB2BF;"> subject:</span></span>
<span class="line"><span style="color:#ABB2BF;">    case </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">pattern_1</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> [</span><span style="color:#C678DD;font-style:italic;">if</span><span style="color:#ABB2BF;"> condition]:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">action_1</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    [case </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">pattern_2</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">action_2</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    case _:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">action_wildcard</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="循环" tabindex="-1">循环 <a class="header-anchor" href="#循环" aria-label="Permalink to &quot;循环&quot;">​</a></h3><p>正常结束（未使用break）时，会执行else语句</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">while</span><span style="color:#ABB2BF;"> condition:</span></span>
<span class="line"><span style="color:#ABB2BF;">     statement_block_1</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#C678DD;font-style:italic;">else</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">     statement_block_2]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">variable</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">sequence</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    statement_block_1</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#C678DD;font-style:italic;">else</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    statement_block_2]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>pass：空语句，一般用做占位语句，保持程序结构的完整性</li><li>break</li><li>continue</li></ul><h3 id="序列遍历" tabindex="-1">序列遍历 <a class="header-anchor" href="#序列遍历" aria-label="Permalink to &quot;序列遍历&quot;">​</a></h3><p>单序列 + 索引</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> i, v </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">enumerate</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&#39;tic&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;tac&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;toe&#39;</span><span style="color:#ABB2BF;">]):</span></span>
<span class="line"><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">     </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(i, v)</span></span>
<span class="line"><span style="color:#D19A66;">...</span></span>
<span class="line"><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> tic</span></span>
<span class="line"><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> tac</span></span>
<span class="line"><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> toe</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>多序列</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> questions </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;quest&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;favorite color&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> answers </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&#39;lancelot&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;the holy grail&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;blue&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> q, a </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">zip</span><span style="color:#ABB2BF;">(questions, answers):</span></span>
<span class="line"><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">     </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">f</span><span style="color:#98C379;">&#39;What is your </span><span style="color:#D19A66;">{</span><span style="color:#ABB2BF;">q</span><span style="color:#D19A66;">}</span><span style="color:#98C379;">?  It is </span><span style="color:#D19A66;">{</span><span style="color:#ABB2BF;">a</span><span style="color:#D19A66;">}</span><span style="color:#98C379;">.&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#D19A66;">...</span></span>
<span class="line"><span style="color:#ABB2BF;">What </span><span style="color:#C678DD;font-style:italic;">is</span><span style="color:#ABB2BF;"> your name</span><span style="color:#FFFFFF;">?</span><span style="color:#ABB2BF;">  It </span><span style="color:#C678DD;font-style:italic;">is</span><span style="color:#ABB2BF;"> lancelot.</span></span>
<span class="line"><span style="color:#ABB2BF;">What </span><span style="color:#C678DD;font-style:italic;">is</span><span style="color:#ABB2BF;"> your quest</span><span style="color:#FFFFFF;">?</span><span style="color:#ABB2BF;">  It </span><span style="color:#C678DD;font-style:italic;">is</span><span style="color:#ABB2BF;"> the holy grail.</span></span>
<span class="line"><span style="color:#ABB2BF;">What </span><span style="color:#C678DD;font-style:italic;">is</span><span style="color:#ABB2BF;"> your favorite color</span><span style="color:#FFFFFF;">?</span><span style="color:#ABB2BF;">  It </span><span style="color:#C678DD;font-style:italic;">is</span><span style="color:#ABB2BF;"> blue.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>zip() 将字典”反转”为 (值，键) 元组序列</p><h3 id="生成式-comprehensions" tabindex="-1">生成式 Comprehensions <a class="header-anchor" href="#生成式-comprehensions" aria-label="Permalink to &quot;生成式 Comprehensions&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&lt;list&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [i</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)]                         </span><span style="color:#7F848E;font-style:italic;"># [1, 2, ..., 10]</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;set&gt;</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {i </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;font-style:italic;">if</span><span style="color:#ABB2BF;"> i </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">}                  </span><span style="color:#7F848E;font-style:italic;"># {6, 7, 8, 9}</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">generator</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (i</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">))                    </span><span style="color:#7F848E;font-style:italic;"># (5, 6, ..., 14)</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;dict&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {i: i</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)}                      </span><span style="color:#7F848E;font-style:italic;"># {0: 0, 1: 2, ..., 9: 18}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="迭代器-iterator" tabindex="-1">迭代器 Iterator <a class="header-anchor" href="#迭代器-iterator" aria-label="Permalink to &quot;迭代器 Iterator&quot;">​</a></h3><p>可迭代对象(Iterable)：定义了返回一个迭代器的__iter__方法，或定义了支持下标索引的__getitem__方法的对象 <br> 迭代器：定义了__next__方法的对象 <br> list、dict、str等是Iterable但不是Iterator，可以通过iter()函数获得一个Iterator对象。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;"> collections </span><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> Iterator</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">isinstance</span><span style="color:#ABB2BF;">((x </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)), Iterator)</span></span>
<span class="line"><span style="color:#D19A66;">True</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">isinstance</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;abc&#39;</span><span style="color:#ABB2BF;">, Iterator)</span></span>
<span class="line"><span style="color:#D19A66;">False</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>嵌套迭代</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;"> collections </span><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> Iterable</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">flatten</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">items</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">ignore_types</span><span style="color:#ABB2BF;">=(</span><span style="color:#56B6C2;">str</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">bytes</span><span style="color:#ABB2BF;">)):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> items:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">if</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">isinstance</span><span style="color:#ABB2BF;">(x, Iterable) </span><span style="color:#C678DD;font-style:italic;">and</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">not</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">isinstance</span><span style="color:#ABB2BF;">(x, ignore_types):</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;font-style:italic;">yield from</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">flatten</span><span style="color:#ABB2BF;">(x)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">else</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;font-style:italic;">yield</span><span style="color:#ABB2BF;"> x</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#ABB2BF;">items </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, [</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, [</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">], </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">], </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Produces 1 2 3 4 5 6 7 8</span></span>
<span class="line"><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">flatten</span><span style="color:#ABB2BF;">(items):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(x)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>StopIteration 异常：标识迭代的完成，防止出现无限循环的情况。 <br> 在 <strong>next</strong>() 方法中可以设置在完成指定循环次数后触发 StopIteration 异常来结束迭代</p><h3 id="生成器-generator" tabindex="-1">生成器 Generator <a class="header-anchor" href="#生成器-generator" aria-label="Permalink to &quot;生成器 Generator&quot;">​</a></h3><p>一次生成一个值的特殊类型函数。一种特殊的迭代器，只能对其迭代一次。 <br> 半协程（semicoroutine）是特殊的、能力更弱的协程。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> g </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (x </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> g  </span><span style="color:#7F848E;font-style:italic;">#&lt;generator object &lt;genexpr&gt; at 0x0000024EAE1FBA48&gt;</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">next</span><span style="color:#ABB2BF;">(g)</span></span>
<span class="line"><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> n </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> g:</span></span>
<span class="line"><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">     </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(n)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">intNum</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;开始执行&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">yield</span><span style="color:#ABB2BF;"> i           </span><span style="color:#7F848E;font-style:italic;">#函数定义中包含yield关键字</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;继续执行&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">num </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">intNum</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="协程-coroutine" tabindex="-1">协程 Coroutine <a class="header-anchor" href="#协程-coroutine" aria-label="Permalink to &quot;协程 Coroutine&quot;">​</a></h3><p>微线程，推广了协作式多任务的子程序，允许执行被挂起与被恢复。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 生产者与消费者模式</span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">consumer</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">while</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">        p </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">yield</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;消费产品 </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;"> p)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">product</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">c</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    c.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;font-style:italic;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;生产产品 </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;"> i)</span></span>
<span class="line"><span style="color:#ABB2BF;">        c.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(i)</span></span>
<span class="line"><span style="color:#ABB2BF;">    c.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">c </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">consumer</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#61AFEF;">product</span><span style="color:#ABB2BF;">(c)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="function" tabindex="-1">Function <a class="header-anchor" href="#function" aria-label="Permalink to &quot;Function&quot;">​</a></h2><p>定义一个函数要使用def语句，依次写出函数名、括号、括号中的参数和冒号:，在缩进块中编写函数体，返回值用return语句返回。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">function_name</span><span style="color:#ABB2BF;"> ( parameter1[: agr_annotations],...) [-&gt; retrun_annotations]:</span></span>
<span class="line"><span style="color:#ABB2BF;">        suite</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>默认 return None。</li><li>函数可以同时返回多个值，实质是一个tuple。</li><li>注解（annotation）以dict形式存储 function.<strong>annotation</strong></li></ul><p><strong>- 位置参数</strong> <br> <strong>- 默认参数</strong> <br> 默认参数应该使用不可变对象 <br> <strong>- 可变参数</strong> <br> *args 是可变参数，args接收的是一个tuple； <br> 既可以直接传入：func(1, 2, 3)，又可以先组装list或tuple，再通过_args传入：func(_(1, 2, 3))。 <br> <strong>- 关键字参数</strong> <br> <strong>kw 是关键字参数，kw接收的是一个dict。 <br> 既可以直接传入：func(a=1, b=2)，又可以先组装dict，再通过</strong>kw传入：func(**{&#39;a&#39;: 1, &#39;b&#39;: 2})。 <br> <strong>- 命名的关键字参数</strong> <br> 限制调用者可以传入的参数名，同时可以提供默认值。 <br> 定义命名的关键字参数在没有可变参数的情况下不要忘了写分隔符 *，否则定义的将是位置参数。</p><p>参数定义的顺序：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。 <br> 对于任意函数，都可以通过类似 func(*args, **kw) 的形式调用它，无论它的参数是如何定义的。</p><p><strong>特殊属性</strong></p><table><thead><tr><th>属性</th><th>意义</th><th></th></tr></thead><tbody><tr><td><strong>doc</strong></td><td>该函数的文档字符串，没有则为 None；不会被子类继承。</td><td>可写</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#definition.__name__" target="_blank" rel="noreferrer"><strong>name</strong></a></td><td>该函数的名称。</td><td>可写</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#definition.__qualname__" target="_blank" rel="noreferrer"><strong>qualname</strong></a></td><td>该函数的 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-qualified-name" target="_blank" rel="noreferrer">qualified name</a></td><td>可写</td></tr><tr><td><strong>module</strong></td><td>该函数所属模块的名称，没有则为 None。</td><td>可写</td></tr><tr><td><strong>defaults</strong></td><td>由具有默认值的参数的默认参数值组成的元组，如无任何参数具有默认值则为 None。</td><td>可写</td></tr><tr><td><strong>code</strong></td><td>表示编译后的函数体的代码对象。</td><td>可写</td></tr><tr><td><strong>globals</strong></td><td>对存放该函数中全局变量的字典的引用 --- 函数所属模块的全局命名空间。</td><td>只读</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#object.__dict__" target="_blank" rel="noreferrer"><strong>dict</strong></a></td><td>命名空间支持的函数属性。</td><td>可写</td></tr><tr><td><strong>closure</strong></td><td>None 或包含该函数可用变量的绑定的单元的元组。有关 cell_contents 属性的详情见下。</td><td>只读</td></tr><tr><td><strong>annotations</strong></td><td>包含参数标注的字典。字典的键是参数名，如存在返回标注则为 &#39;return&#39;。</td><td>可写</td></tr><tr><td><strong>kwdefaults</strong></td><td>仅包含关键字参数默认值的字典。</td><td>可写</td></tr></tbody></table><h3 id="匿名函数-lambda" tabindex="-1">匿名函数 lambda <a class="header-anchor" href="#匿名函数-lambda" aria-label="Permalink to &quot;匿名函数 lambda&quot;">​</a></h3><p>lambda的主体是一个表达式，而不是一个代码块</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">lambda</span><span style="color:#ABB2BF;"> [arg1 [,</span><span style="color:#D19A66;font-style:italic;">arg2</span><span style="color:#ABB2BF;">,.....argn]]:expression</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="闭包-closure" tabindex="-1">闭包 Closure <a class="header-anchor" href="#闭包-closure" aria-label="Permalink to &quot;闭包 Closure&quot;">​</a></h3><p>嵌套函数，返回函数</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 闭包函数，exponent 称为自由变量</span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">nth_power</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">exponent</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">exponent_of</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">base</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> base </span><span style="color:#56B6C2;">**</span><span style="color:#ABB2BF;"> exponent</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> exponent_of </span><span style="color:#7F848E;font-style:italic;"># 返回值是 exponent_of 函数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">square </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">nth_power</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;"># 计算一个数的平方</span></span>
<span class="line"><span style="color:#ABB2BF;">cube </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">nth_power</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;"># 计算一个数的立方</span></span>
<span class="line"><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">square</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">))  </span><span style="color:#7F848E;font-style:italic;"># 计算 2 的平方</span></span>
<span class="line"><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">cube</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;"># 计算 2 的立方</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#查看 __closure__属性，记录着自由变量的地址</span></span>
<span class="line"><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(square.</span><span style="color:#E06C75;">__closure__</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="装饰器-decorator" tabindex="-1">装饰器 Decorator <a class="header-anchor" href="#装饰器-decorator" aria-label="Permalink to &quot;装饰器 Decorator&quot;">​</a></h3><p>在代码运行期间动态增加功能的方式，本质是是一个返回函数的高阶函数</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">import</span><span style="color:#ABB2BF;"> time</span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">log_time</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">func</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#61AFEF;">    @wraps</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">func</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">wrapper</span><span style="color:#ABB2BF;">(*</span><span style="color:#D19A66;font-style:italic;">args</span><span style="color:#ABB2BF;">, **</span><span style="color:#D19A66;font-style:italic;">kwargs</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ready--&gt;&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        beg </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        res </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">func</span><span style="color:#ABB2BF;">(*args, **kwargs)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;use time:</span><span style="color:#D19A66;">{}</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">()</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">beg))</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> res</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> wrapper</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">@log_time</span><span style="color:#FFFFFF;">                        &#39;&#39;&#39;等同mysleep = log_time(mysleep)&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">mysleep</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;mysleep...&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    time.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#61AFEF;">mysleep</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 使用类编写装饰器，传递参数可通过类的初始化</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">LogTime</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__call__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">func</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">wrapper</span><span style="color:#ABB2BF;">(*</span><span style="color:#D19A66;font-style:italic;">args</span><span style="color:#ABB2BF;">, **</span><span style="color:#D19A66;font-style:italic;">kwargs</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ready--&gt;&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            beg </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            res </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">func</span><span style="color:#ABB2BF;">(*args, **kwargs)</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;use time:</span><span style="color:#D19A66;">{}</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">()</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">beg))</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> res</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> wrapper</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#61AFEF;">@LogTime</span><span style="color:#ABB2BF;">()  </span><span style="color:#7F848E;font-style:italic;"># 需要初始化装饰类的实例</span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">mysleep</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;mysleep...&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    time.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#61AFEF;">mysleep</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>应该用functools.wraps定义函数装饰器，否则导致__name__, __doc__等内部属性混乱</p></div><h2 id="异常处理" tabindex="-1">异常处理 <a class="header-anchor" href="#异常处理" aria-label="Permalink to &quot;异常处理&quot;">​</a></h2><p><strong>捕获异常</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">try</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      suite</span></span>
<span class="line"><span style="color:#C678DD;font-style:italic;">except</span><span style="color:#ABB2BF;"> [</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">exception</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> [</span><span style="color:#C678DD;font-style:italic;">as</span><span style="color:#ABB2BF;"> value] </span><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">]:     </span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"><span style="color:#ABB2BF;">[···</span></span>
<span class="line"><span style="color:#C678DD;font-style:italic;">else</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"><span style="color:#C678DD;font-style:italic;">finally</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;font-style:italic;">pass</span><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Exception Object</span></span>
<span class="line"><span style="color:#ABB2BF;">arguments </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">.args</span></span>
<span class="line"><span style="color:#ABB2BF;">exc_type  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__class__</span></span>
<span class="line"><span style="color:#ABB2BF;">filename  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__traceback__</span><span style="color:#ABB2BF;">.tb_frame.f_code.co_filename</span></span>
<span class="line"><span style="color:#ABB2BF;">func_name </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__traceback__</span><span style="color:#ABB2BF;">.tb_frame.f_code.co_name</span></span>
<span class="line"><span style="color:#ABB2BF;">line      </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> linecache.</span><span style="color:#61AFEF;">getline</span><span style="color:#ABB2BF;">(filename, </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__traceback__</span><span style="color:#ABB2BF;">.tb_lineno)</span></span>
<span class="line"><span style="color:#ABB2BF;">traceback </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(traceback.</span><span style="color:#61AFEF;">format_tb</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__traceback__</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">error_msg </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(traceback.</span><span style="color:#61AFEF;">format_exception</span><span style="color:#ABB2BF;">(exc_type, </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">name</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__traceback__</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>raise 唯一的一个参数指定了要被抛出的异常，且必须是一个异常的实例或异常的类</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">raise</span><span style="color:#ABB2BF;"> instance [ </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">class</span><span style="color:#ABB2BF;">]   [</span><span style="color:#C678DD;font-style:italic;">from</span><span style="color:#ABB2BF;">  (other_ex </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;font-style:italic;">raise</span><span style="color:#ABB2BF;"> NameError(</span><span style="color:#98C379;">&#39;HiThere&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>assert（断言）用于判断一个表达式，在表达式条件为 false 的时候触发异常</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;font-style:italic;">assert</span><span style="color:#ABB2BF;"> expression [, arguments]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 等价于：</span></span>
<span class="line"><span style="color:#C678DD;font-style:italic;">if</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">not</span><span style="color:#ABB2BF;"> expression:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">raise</span><span style="color:#ABB2BF;"> AssertionError(arguments)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="内置异常" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/exceptions.html" target="_blank" rel="noreferrer">内置异常</a> <a class="header-anchor" href="#内置异常" aria-label="Permalink to &quot;[内置异常](https://docs.python.org/zh-cn/3/library/exceptions.html)&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">BaseException</span></span>
<span class="line"><span style="color:#ABB2BF;"> ├── BaseExceptionGroup</span></span>
<span class="line"><span style="color:#ABB2BF;"> ├── GeneratorExit</span></span>
<span class="line"><span style="color:#ABB2BF;"> ├── KeyboardInterrupt</span></span>
<span class="line"><span style="color:#ABB2BF;"> ├── SystemExit</span></span>
<span class="line"><span style="color:#ABB2BF;"> └── Exception</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── ArithmeticError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── FloatingPointError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── OverflowError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── ZeroDivisionError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── AssertionError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── AttributeError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── BufferError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── EOFError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── ExceptionGroup [BaseExceptionGroup]</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── ImportError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── ModuleNotFoundError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── LookupError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── IndexError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── KeyError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── MemoryError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── NameError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── UnboundLocalError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── OSError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── BlockingIOError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── ChildProcessError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── ConnectionError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    │    ├── BrokenPipeError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    │    ├── ConnectionAbortedError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    │    ├── ConnectionRefusedError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    │    └── ConnectionResetError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── FileExistsError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── FileNotFoundError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── InterruptedError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── IsADirectoryError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── NotADirectoryError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── PermissionError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── ProcessLookupError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── TimeoutError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── ReferenceError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── RuntimeError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    ├── NotImplementedError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── RecursionError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── StopAsyncIteration</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── StopIteration</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── SyntaxError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── IndentationError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │         └── TabError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── SystemError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── TypeError</span></span>
<span class="line"><span style="color:#ABB2BF;">      ├── ValueError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │    └── UnicodeError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │         ├── UnicodeDecodeError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │         ├── UnicodeEncodeError</span></span>
<span class="line"><span style="color:#ABB2BF;">      │         └── UnicodeTranslateError</span></span>
<span class="line"><span style="color:#ABB2BF;">      └── Warning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── BytesWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── DeprecationWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── EncodingWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── FutureWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── ImportWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── PendingDeprecationWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── ResourceWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── RuntimeWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── SyntaxWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           ├── UnicodeWarning</span></span>
<span class="line"><span style="color:#ABB2BF;">           └── UserWarning</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>自定义异常</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">(Exception):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;&quot;&quot;Base class for exceptions in this module.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">InputError</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;&quot;&quot;Exception raised for errors in the input.</span></span>
<span class="line"><span style="color:#98C379;">    </span></span>
<span class="line"><span style="color:#98C379;">    Attributes:</span></span>
<span class="line"><span style="color:#98C379;">        expression -- input expression in which the error occurred</span></span>
<span class="line"><span style="color:#98C379;">        message -- explanation of the error</span></span>
<span class="line"><span style="color:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">expression</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">message</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.expression </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> expression</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.message </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> message</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="oop" tabindex="-1">OOP <a class="header-anchor" href="#oop" aria-label="Permalink to &quot;OOP&quot;">​</a></h2><h3 id="类-class" tabindex="-1">类（class) <a class="header-anchor" href="#类-class" aria-label="Permalink to &quot;类（class)&quot;">​</a></h3><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> ClassName [(Object)]:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">statement</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">statement</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">N</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>任何类，最终都可以追溯到根类object</li><li>类有一个名为 <strong>init</strong>() 的特殊方法（<strong>构造方法</strong>），该方法在类实例化时会自动调用</li><li>类的方法必须有一个额外的<strong>第一个参数名称</strong>，按照惯例它的名称是 self，代表的是类的实例</li></ul><p><strong>类的私有属性/方法</strong> <br> __private_attrs：双下划线开头，声明该属性/方法为私有，不能在类的外部被使用或直接访问。 <br> self.__private_attrs <br> 实际上python内部将__private_attrs更改为_ClassName_private_attrs</p><h3 id="继承-inheritance" tabindex="-1">继承（Inheritance） <a class="header-anchor" href="#继承-inheritance" aria-label="Permalink to &quot;继承（Inheritance）&quot;">​</a></h3><p>支持多继承：多个父类中有同名的类方法时，根据子类继承父类的前后次序决定，即排在前面父类中的类方法会覆盖排在后面父类中的同名类方法。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">DerivedClassName</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Base1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Base2</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">statement</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">statement</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">N</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>MRO</strong>（Method Resolution Order，方法解析顺序） <br> C3算法，使用的是拓扑排序，在一个有向无环图中</p><ul><li>保持继承拓扑图的一致性。</li><li>保证局部优先原则（如A继承C，C继承B，那么A读取父类方法，应该优先使用C的方法）。</li><li>保证单调性原则（即子类不改变父类的方法搜索顺序）。</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">object</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">B</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">object</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">object</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">D</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">B</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">F</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">D</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(F.</span><span style="color:#E06C75;">__mro__</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># (&lt;class &#39;__main__.F&#39;&gt;, &lt;class &#39;__main__.D&#39;&gt;, &lt;class &#39;__main__.E&#39;&gt;, &lt;class &#39;__main__.B&#39;&gt;, &lt;class &#39;__main__.A&#39;&gt;, &lt;class &#39;__main__.C&#39;&gt;, &lt;class &#39;object&#39;&gt;)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>Python 中所有的方法实际上都是 virtual 方法</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 类定义</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">People</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;"># 定义类属性或类变量</span></span>
<span class="line"><span style="color:#ABB2BF;">    age </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;"># 定义私有属性，类外部无法直接进行访问</span></span>
<span class="line"><span style="color:#ABB2BF;">    __weight </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">#定义构造方法</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">n</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">w</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.name </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> n    </span><span style="color:#7F848E;font-style:italic;"># 实例属性或实例变量</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.age </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> a</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__weight </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> w</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">#定义实例方法</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">speak</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;"> 说: 我 </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;"> 岁。&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.name, </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.age))</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">#至少一个参数，通常命名为 cls，Python 会自动将类本身绑定给 cls 参数</span></span>
<span class="line"><span style="color:#61AFEF;">    @</span><span style="color:#56B6C2;">classmethod</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">cls</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">f</span><span style="color:#98C379;">&quot;调用类方法 run() 可以使用类访问类变量&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">cls</span><span style="color:#ABB2BF;">.age)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#61AFEF;">    @</span><span style="color:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;调用静态方法 sleep(), 只能通过类名访问类变量&quot;</span><span style="color:#ABB2BF;">, People.age)</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#单继承示例</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Student</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">people</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    grade </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;font-style:italic;">n</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;font-style:italic;">a</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;font-style:italic;">w</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;font-style:italic;">g</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">#调用父类的构造函数，等同 super().__init__(n,a,w)</span></span>
<span class="line"><span style="color:#ABB2BF;">        people.</span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">,n,a,w)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.grade </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> g</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">#覆写父类的方法</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">speak</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;"> 说: 我 </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;"> 岁了，我在读 </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;"> 年级&quot;</span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.name,</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.age,</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.grade))</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">s </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ken&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">60</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">s.</span><span style="color:#61AFEF;">speak</span><span style="color:#ABB2BF;">()                           </span><span style="color:#7F848E;font-style:italic;"># ken 说: 我 10 岁了，我在读 3 年级</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p>classmethod与staticmethod</p><ul><li>都可以通过Class.method()的方式使用。</li><li>classmethod第一个参数是class，可以应用类变量。</li><li>staticmethod和普通函数一样，只不过它放在类中。</li></ul><p>@property：将一个方法变成属性调用的</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">//</span><span style="color:#ABB2BF;">  birth是可读写属性，age是一个只读属性</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Student</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">object</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#61AFEF;">    @</span><span style="color:#56B6C2;">property</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">birth</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">._birth</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#61AFEF;">    @birth</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setter</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">birth</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">value</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">._birth </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> value</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#61AFEF;">    @</span><span style="color:#56B6C2;">property</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">age</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2015</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">._birth</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong><strong>slots</strong></strong>：限制该class实例能添加的属性。仅对当前类实例起作用，对继承的子类是不起作用</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Student</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">object</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">__slots__</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;"># 用tuple定义允许绑定的属性名称</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="魔法方法" tabindex="-1">魔法方法 <a class="header-anchor" href="#魔法方法" aria-label="Permalink to &quot;魔法方法&quot;">​</a></h3><ul><li><strong><strong>new</strong>(cls[, ...])：负责创建类实例的静态方法，优先 <strong>init</strong>() 初始化方法被调用；</strong></li><li><strong><strong>init</strong> : 在实例 (通过 <strong>new</strong>()) 被创建之后，初始化对象</strong></li><li><strong><strong>del</strong> : 实例将被销毁时调用</strong></li><li><strong><strong>repr</strong> : 输出一个对象的“官方”字符串表示</strong></li><li><strong><strong>str</strong> : 格式良好的字符串表示</strong></li><li><strong><strong>setitem</strong> : 按照索引赋值</strong></li><li><strong><strong>getitem</strong>: 按照索引获取值</strong></li><li><strong><strong>len</strong>: 获得长度</strong></li><li><strong><strong>cmp</strong>: 比较运算</strong></li><li><strong><strong>call</strong>: 函数调用</strong></li><li><strong><strong>add</strong>: 加运算</strong></li><li><strong><strong>sub</strong>: 减运算</strong></li><li><strong><strong>mul</strong>: 乘运算</strong></li><li><strong><strong>truediv</strong>: 除运算</strong></li><li><strong><strong>mod</strong>: 求余运算</strong></li><li><strong><strong>pow</strong>: 乘方</strong></li><li>···</li></ul><p><strong>比较运算符</strong></p><ul><li>object.<strong><strong>lt</strong></strong>(<em>self</em>, <em>other</em>)</li><li>object.<strong><strong>le</strong></strong>(<em>self</em>, <em>other</em>)</li><li>object.<strong><strong>eq</strong></strong>(<em>self</em>, <em>other</em>)</li><li>object.<strong><strong>ne</strong></strong>(<em>self</em>, <em>other</em>)</li><li>object.<strong><strong>gt</strong></strong>(<em>self</em>, <em>other</em>)</li><li>object.<strong><strong>ge</strong></strong>(<em>self</em>, <em>other</em>)</li></ul><p><strong>属性访问</strong></p><ul><li><strong>getattr</strong>：在实例中找不到属性时调用。</li><li><strong>getattribute</strong>：无论是否找到属性均调用。</li><li><strong>setattr</strong>：对属性赋值时调用。</li><li><strong>delattr</strong>：删除属性时调用。</li></ul><p>运算符重载</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Vector</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">y</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__x </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> x</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__y </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> y</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#61AFEF;">    @</span><span style="color:#56B6C2;">property</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">x</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__x</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#61AFEF;">    @</span><span style="color:#56B6C2;">property</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">y</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__y</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__str__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;Vector (</span><span style="color:#D19A66;">%d</span><span style="color:#98C379;">, </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;">)&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.a, </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.b)</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;"># 算数运算符</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__add__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;font-style:italic;">other</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vector</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.a </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> other.a, </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.b </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> other.b)</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;"># 反算数运算符</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__radd__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;font-style:italic;">other</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vector</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.a </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> other.a, </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.b </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> other.b)</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;"># 增量赋值符</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__iadd__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;font-style:italic;">other</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vector</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.a </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> other.a, </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.b </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> other.b)</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;"># 一元运算符  </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__neg__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vector</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.x, </span><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.y)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;"># 实现__hash__ 必须同时实现 __eq__   </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__hash__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">hash</span><span style="color:#ABB2BF;">((</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__x, </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__y))</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;"># 比较运算符</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">__eq__</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">other</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;font-style:italic;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__x </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> other.__x </span><span style="color:#C678DD;font-style:italic;">and</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.__y </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> other.__y </span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">v1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vector</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">v2 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vector</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;"> (v1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> v2)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="file" tabindex="-1">File <a class="header-anchor" href="#file" aria-label="Permalink to &quot;File&quot;">​</a></h2><p><strong>open(file, mode=&#39;r&#39;, buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)</strong></p><ul><li>file: 文件路径（相对或者绝对路径）</li><li>mode: 文件打开模式</li><li>buffering: 设置缓冲</li><li>encoding: 一般使用utf8</li><li>errors: 报错级别</li><li>newline: 区分换行符</li><li>closefd: 传入的file参数类型</li><li>opener</li></ul><p><strong>mode</strong></p><table><thead><tr><th>字符</th><th>意义</th></tr></thead><tbody><tr><td>&#39;r&#39;</td><td>读取（默认）</td></tr><tr><td>&#39;w&#39;</td><td>写入，并先截断文件</td></tr><tr><td>&#39;x&#39;</td><td>排它性创建，如果文件已存在则失败</td></tr><tr><td>&#39;a&#39;</td><td>写入，如果文件存在则在末尾追加</td></tr><tr><td>&#39;b&#39;</td><td>二进制模式</td></tr><tr><td>&#39;t&#39;</td><td>文本模式（默认）</td></tr><tr><td>&#39;+&#39;</td><td>打开用于更新（读取与写入）</td></tr></tbody></table><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/python/ref_file_close.asp" target="_blank" rel="noreferrer">close()</a></td><td>关闭文件。</td></tr><tr><td>detach()</td><td>从缓冲区返回分离的原始流（raw stream）。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_fileno.asp" target="_blank" rel="noreferrer">fileno()</a></td><td>从操作系统的角度返回表示流的数字。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_flush.asp" target="_blank" rel="noreferrer">flush()</a></td><td>刷新内部缓冲区。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_isatty.asp" target="_blank" rel="noreferrer">isatty()</a></td><td>返回文件流是否是交互式的。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_read.asp" target="_blank" rel="noreferrer">read()</a></td><td>返回文件内容。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_readable.asp" target="_blank" rel="noreferrer">readable()</a></td><td>返回是否能够读取文件流。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_readline.asp" target="_blank" rel="noreferrer">readline()</a></td><td>返回文件中的一行。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_readlines.asp" target="_blank" rel="noreferrer">readlines()</a></td><td>返回文件中的行列表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_seek.asp" target="_blank" rel="noreferrer">seek()</a></td><td>更改文件位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_seekable.asp" target="_blank" rel="noreferrer">seekable()</a></td><td>返回文件是否允许我们更改文件位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_tell.asp" target="_blank" rel="noreferrer">tell()</a></td><td>返回当前的文件位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_truncate.asp" target="_blank" rel="noreferrer">truncate()</a></td><td>把文件调整为指定的大小。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_writeable.asp" target="_blank" rel="noreferrer">writeable()</a></td><td>返回是否能够写入文件。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_write.asp" target="_blank" rel="noreferrer">write()</a></td><td>把指定的字符串写入文件。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_file_writelines.asp" target="_blank" rel="noreferrer">writelines()</a></td><td>把字符串列表写入文件。</td></tr></tbody></table><p>使用 with 关键字，在结束后自动关闭文件</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;font-style:italic;">with</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">open</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/tmp/foo.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;r&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;font-style:italic;">as</span><span style="color:#ABB2BF;"> f:</span></span>
<span class="line"><span style="color:#D19A66;">...</span><span style="color:#ABB2BF;">     read_data </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> f.</span><span style="color:#61AFEF;">read</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#56B6C2;">&gt;&gt;&gt;</span><span style="color:#ABB2BF;"> f.closed</span></span>
<span class="line"><span style="color:#D19A66;">True</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>**f.seek(offset, from_what) ** <br> from_what 的值, 如果是 0 表示开头, 如果是 1 表示当前位置, 2 表示文件的结尾</p><ul><li>seek(x,0) ： 从起始位置即文件首行首字符开始移动 x 个字符</li><li>seek(-x,2)：表示从文件的结尾往前移动x个字符</li></ul><h2 id="module-package" tabindex="-1">Module &amp; Package <a class="header-anchor" href="#module-package" aria-label="Permalink to &quot;Module &amp; Package&quot;">​</a></h2><p>一个模块：一个包含Python定义和语句的文件，即一个.py文件</p><p><em><em>模块导入： import [package.]module</em> [as alias]</em>* <br> <strong>from [package.]module import name [as alias]</strong> <br> 全导入： from module import * (不推荐)</p><p>每个模块都有一个__name__属性，当其值是&#39;<strong>main</strong>&#39;时，表明该模块自身在运行，否则是被引入。</p><p>包 ：按目录来组织模块的方法，一种通过用“带点号的模块名”来构造 Python 模块命名空间的方法 <br> 每一个包目录下面必须有一个__init__.py，可以是空文件 <br> <strong>init</strong>.py 代码定义了一个名为 <strong>all</strong> 的列表，它是 from package import * 时导入的模块名列表 <br> <strong>pycache</strong> 目录里缓存了每个模块的编译后版本，名称为 module.version.pyc</p><ul><li>常规包：通常以一个包含 <strong>init</strong>.py 文件的目录形式实现。 当一个常规包被导入时，这个 <strong>init</strong>.py 文件会隐式地被执行，它所定义的对象会被绑定到该包命名空间中的名称。</li></ul><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">parent</span><span style="color:#56B6C2;">/</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">.py</span></span>
<span class="line"><span style="color:#ABB2BF;">    one</span><span style="color:#56B6C2;">/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">.py</span></span>
<span class="line"><span style="color:#ABB2BF;">    two</span><span style="color:#56B6C2;">/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">.py</span></span>
<span class="line"><span style="color:#ABB2BF;">    three</span><span style="color:#56B6C2;">/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">__init__</span><span style="color:#ABB2BF;">.py</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>命名空间包：由多个 部分 构成的，每个部分为父包增加一个子包。 各个部分可能处于文件系统的不同位置。</li></ul><h2 id="内置函数" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/functions.html" target="_blank" rel="noreferrer">内置函数</a> <a class="header-anchor" href="#内置函数" aria-label="Permalink to &quot;[内置函数](https://docs.python.org/zh-cn/3/library/functions.html)&quot;">​</a></h2><table><thead><tr><th><strong>函数</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/python/ref_func_abs.asp" target="_blank" rel="noreferrer">abs()</a></td><td>返回数的绝对值</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_all.asp" target="_blank" rel="noreferrer">all()</a></td><td>如果可迭代对象中的所有项均为 true，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_any.asp" target="_blank" rel="noreferrer">any()</a></td><td>如果可迭代对象中的任何项为 true，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_ascii.asp" target="_blank" rel="noreferrer">ascii()</a></td><td>返回对象的可读版本。用转义字符替换 none-ascii 字符。</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/functions.html#aiter" target="_blank" rel="noreferrer">aiter()</a></td><td>返回 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-asynchronous-iterable" target="_blank" rel="noreferrer">asynchronous iterable</a> 的 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-asynchronous-iterator" target="_blank" rel="noreferrer">asynchronous iterator</a> 。相当于调用 x.<strong>aiter</strong>()</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/functions.html#anext" target="_blank" rel="noreferrer">anext()</a></td><td>当进入 await 状态时，从给定 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-asynchronous-iterator" target="_blank" rel="noreferrer">asynchronous iterator</a> 返回下一数据项，迭代完毕则返回 <em>default</em></td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_bin.asp" target="_blank" rel="noreferrer">bin()</a></td><td>返回数的二进制版本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_bool.asp" target="_blank" rel="noreferrer">bool()</a></td><td>返回指定对象的布尔值。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_bytearray.asp" target="_blank" rel="noreferrer">bytearray()</a></td><td>返回字节数组。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_bytes.asp" target="_blank" rel="noreferrer">bytes()</a></td><td>返回字节对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_callable.asp" target="_blank" rel="noreferrer">callable()</a></td><td>如果指定的对象是可调用的，则返回 True，否则返回 False。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_chr.asp" target="_blank" rel="noreferrer">chr()</a></td><td>返回指定 Unicode 代码中的字符。</td></tr><tr><td>@classmethod</td><td>把方法转换为类方法。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_compile.asp" target="_blank" rel="noreferrer">compile()</a></td><td>把指定的源作为对象返回，准备执行。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_complex.asp" target="_blank" rel="noreferrer">complex()</a></td><td>返回复数。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_delattr.asp" target="_blank" rel="noreferrer">delattr()</a></td><td>从指定的对象中删除指定的属性（属性或方法）。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_dict.asp" target="_blank" rel="noreferrer">dict()</a></td><td>返回字典（数组）。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_dir.asp" target="_blank" rel="noreferrer">dir()</a></td><td>返回指定对象的属性和方法的列表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_divmod.asp" target="_blank" rel="noreferrer">divmod()</a></td><td>当参数1除以参数2时，返回商和余数。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_enumerate.asp" target="_blank" rel="noreferrer">enumerate()</a></td><td>获取集合（例如元组）并将其作为枚举对象返回。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_eval.asp" target="_blank" rel="noreferrer">eval()</a></td><td>评估并执行表达式。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_exec.asp" target="_blank" rel="noreferrer">exec()</a></td><td>执行指定的代码（或对象）。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_filter.asp" target="_blank" rel="noreferrer">filter()</a></td><td>使用过滤器函数排除可迭代对象中的项目。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_float.asp" target="_blank" rel="noreferrer">float()</a></td><td>返回浮点数。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_format.asp" target="_blank" rel="noreferrer">format()</a></td><td>格式化指定值。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_frozenset.asp" target="_blank" rel="noreferrer">frozenset()</a></td><td>返回 frozenset 对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_getattr.asp" target="_blank" rel="noreferrer">getattr()</a></td><td>返回指定属性的值（属性或方法）。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_globals.asp" target="_blank" rel="noreferrer">globals()</a></td><td>以字典返回当前全局符号表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_hasattr.asp" target="_blank" rel="noreferrer">hasattr()</a></td><td>如果指定的对象拥有指定的属性（属性/方法），则返回 True。</td></tr><tr><td>hash()</td><td>返回指定对象的哈希值。</td></tr><tr><td>help()</td><td>执行内建的帮助系统。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_hex.asp" target="_blank" rel="noreferrer">hex()</a></td><td>把数字转换为十六进制值。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_id.asp" target="_blank" rel="noreferrer">id()</a></td><td>返回对象的 id。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_input.asp" target="_blank" rel="noreferrer">input()</a></td><td>允许用户输入。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_int.asp" target="_blank" rel="noreferrer">int()</a></td><td>返回整数。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_isinstance.asp" target="_blank" rel="noreferrer">isinstance()</a></td><td>如果指定的对象是指定对象的实例，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_issubclass.asp" target="_blank" rel="noreferrer">issubclass()</a></td><td>如果指定的类是指定对象的子类，则返回 True。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_iter.asp" target="_blank" rel="noreferrer">iter()</a></td><td>返回迭代器对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_len.asp" target="_blank" rel="noreferrer">len()</a></td><td>返回对象的长度。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_list.asp" target="_blank" rel="noreferrer">list()</a></td><td>返回列表。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_locals.asp" target="_blank" rel="noreferrer">locals()</a></td><td>返回当前本地符号表的更新字典。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_map.asp" target="_blank" rel="noreferrer">map()</a></td><td>返回指定的迭代器，其中指定的函数应用于每个项目。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_max.asp" target="_blank" rel="noreferrer">max()</a></td><td>返回可迭代对象中的最大项目。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_memoryview.asp" target="_blank" rel="noreferrer">memoryview()</a></td><td>返回内存视图（memory view）对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_min.asp" target="_blank" rel="noreferrer">min()</a></td><td>返回可迭代对象中的最小项目。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_next.asp" target="_blank" rel="noreferrer">next()</a></td><td>返回可迭代对象中的下一项。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_object.asp" target="_blank" rel="noreferrer">object()</a></td><td>返回新对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_oct.asp" target="_blank" rel="noreferrer">oct()</a></td><td>把数转换为八进制。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_open.asp" target="_blank" rel="noreferrer">open()</a></td><td>打开文件并返回文件对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_ord.asp" target="_blank" rel="noreferrer">ord()</a></td><td>转换表示指定字符的 Unicode 的整数。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_pow.asp" target="_blank" rel="noreferrer">pow()</a></td><td>返回 x 的 y 次幂的值。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_print.asp" target="_blank" rel="noreferrer">print()</a></td><td>打印标准输出设备。</td></tr><tr><td>property()</td><td>获取、设置、删除属性。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_range.asp" target="_blank" rel="noreferrer">range()</a></td><td>返回数字序列，从 0 开始且以 1 为增量（默认地）。</td></tr><tr><td>repr()</td><td>返回对象的可读版本。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_reversed.asp" target="_blank" rel="noreferrer">reversed()</a></td><td>返回反转的迭代器。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_round.asp" target="_blank" rel="noreferrer">round()</a></td><td>对数进行舍入。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_set.asp" target="_blank" rel="noreferrer">set()</a></td><td>返回新的集合对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_setattr.asp" target="_blank" rel="noreferrer">setattr()</a></td><td>设置对象的属性（属性/方法）。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_slice.asp" target="_blank" rel="noreferrer">slice()</a></td><td>返回 slice 对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_sorted.asp" target="_blank" rel="noreferrer">sorted()</a></td><td>返回排序列表。</td></tr><tr><td>@staticmethod()</td><td>把方法转换为静态方法。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_str.asp" target="_blank" rel="noreferrer">str()</a></td><td>返回字符串对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_sum.asp" target="_blank" rel="noreferrer">sum()</a></td><td>对迭代器的项目进行求和。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_super.asp" target="_blank" rel="noreferrer">super()</a></td><td>返回表示父类的对象。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_tuple.asp" target="_blank" rel="noreferrer">tuple()</a></td><td>返回元组。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_type.asp" target="_blank" rel="noreferrer">type()</a></td><td>返回对象的类型。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_vars.asp" target="_blank" rel="noreferrer">vars()</a></td><td>返回对象的 <strong>dict</strong> 属性。</td></tr><tr><td><a href="https://www.w3school.com.cn/python/ref_func_zip.asp" target="_blank" rel="noreferrer">zip()</a></td><td>从两个或多个迭代器返回一个迭代器</td></tr></tbody></table><p><strong>input([prompt])——返回str</strong></p><p>*<em>print(<em>objects, sep=&#39; &#39;, end=&#39;\\n&#39;, file=sys.stdout, flush=False)</em></em></p><ul><li>objects -- 复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。</li><li>sep -- 用来间隔多个对象，默认值是一个空格。</li><li>end -- 用来设定以什么结尾。默认值是换行符 \\n</li><li>file -- 要写入的文件对象。</li><li>flush -- 输出是否被缓存通常决定于 file，但如果 flush 关键字参数为 True，流会被强制刷新。</li></ul><p><strong>del var ...</strong></p><p><strong>def range( [strat,] stop[, step=1] )</strong> <br> class range(stop) <br> class range(start, stop[, step])</p><h3 id="copy" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/copy.html#module-copy" target="_blank" rel="noreferrer">copy</a> <a class="header-anchor" href="#copy" aria-label="Permalink to &quot;[copy](https://docs.python.org/zh-cn/3/library/copy.html#module-copy)&quot;">​</a></h3><p><strong>概念</strong></p><ul><li>直接赋值：对象的引用（别名）。</li><li>浅拷贝(copy)：拷贝父对象，不会拷贝对象的内部的子对象。</li><li>深拷贝(deepcopy)： copy 模块的 deepcopy 方法，完全拷贝了父对象及其子对象。</li></ul><p>方法</p><ul><li>copy.copy(x)：返回 x 的浅层复制。</li><li>copy.deepcopy(x[, memo])：返回 x 的深层复制。</li><li>exception copy.error：针对模块特定错误引发。</li></ul><h3 id="math" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/math.html#module-math" target="_blank" rel="noreferrer">math</a> <a class="header-anchor" href="#math" aria-label="Permalink to &quot;[math](https://docs.python.org/zh-cn/3/library/math.html#module-math)&quot;">​</a></h3><table><thead><tr><th>函数</th><th>返回值 ( 描述 )</th></tr></thead><tbody><tr><td>abs(x)</td><td>返回数字的绝对值，如abs(-10) 返回 10</td></tr><tr><td>ceil(x)</td><td>向上取整，如math.ceil(4.1) 返回 5</td></tr><tr><td>comb(n,k)</td><td>二项式系数：n! / (k! * (n - k)!)</td></tr><tr><td>copysign(x, y)</td><td>返回一个基于 x 的绝对值和 y 的符号的浮点数</td></tr><tr><td>exp(x)</td><td>返回e的x次幂，如math.exp(1) 返回2.718281828459045</td></tr><tr><td>fabs(x)</td><td>返回数字的绝对值，如math.fabs(-10) 返回10.0</td></tr><tr><td>factorial(x)</td><td>返回 x 的阶乘</td></tr><tr><td>floor(x)</td><td>向下取整，如math.floor(4.9)返回 4</td></tr><tr><td>frexp(x)</td><td>返回 x 的尾数和指数作为对<code>(m, e)</code> <br> ，即 x == m * 2**e</td></tr><tr><td>fsum(iterable)</td><td>返回迭代中的精确浮点值</td></tr><tr><td>gcd(a, b)</td><td>返回整数 a 和 b 的最大公约数，gcd(0, 0) 返回 0</td></tr><tr><td>isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)</td><td>若 a 和 b 的值比较接近则返回 True，否则返回 False</td></tr><tr><td>ldexp(x, i)</td><td>返回 x * (2**i)</td></tr><tr><td>log(x[, base])</td><td>取对数，默认base=math.e</td></tr><tr><td>log10(x)，log2(x)</td><td>更准确</td></tr><tr><td>max(x1, x2,...)</td><td>返回给定参数的最大值，参数可以为序列。</td></tr><tr><td>min(x1, x2,...)</td><td>返回给定参数的最小值，参数可以为序列。</td></tr><tr><td>modf(x)</td><td>返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td></tr><tr><td>pow(x, y [,z])</td><td>pow(x,y) %z</td></tr><tr><td>perm(n, k=None)</td><td>返回不重复且无顺序地从 n 项中选择 k 项的方式总数，n! / (n - k)!</td></tr><tr><td>prod(iterable, *, start=1)</td><td>累积</td></tr><tr><td>round(x [,n])</td><td>返回浮点数x的四舍五入值，n代表舍入到小数点后的位数。</td></tr><tr><td>sqrt(x)</td><td>开平方</td></tr><tr><td>divmod(x,y)</td><td>返回Tuple（x/y，x%y)</td></tr><tr><td>trunc(x)</td><td>返回 Real 值 x 截断为 Integral</td></tr></tbody></table><p><strong>常数</strong></p><ul><li>math.pi： π = 3.141592...，精确到可用精度。</li><li>math.e： e = 2.718281...，精确到可用精度。</li><li>math.tau：τ = 6.283185...，精确到可用精度。Tau = 2π</li><li>math.inf：浮点正无穷大。 （负无穷大-math.inf ）即 float(&#39;inf&#39;)</li><li>math.nan：浮点“非数字”（NaN）值。 即 float(&#39;nan&#39;)</li></ul><p><strong>三角函数</strong></p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>acos(x)</td><td>返回x的反余弦弧度值。</td></tr><tr><td>asin(x)</td><td>返回x的反正弦弧度值。</td></tr><tr><td>atan(x)</td><td>返回x的反正切弧度值。</td></tr><tr><td>atan2(y, x)</td><td>返回给定的 X 及 Y 坐标值的反正切值。</td></tr><tr><td>cos(x)</td><td>返回x的弧度的余弦值。</td></tr><tr><td>dist(p, q)</td><td>返回 p 与 q 两点之间的欧几里得距离</td></tr><tr><td>hypot(x, y)</td><td>返回欧几里德范数 sqrt(x_x + y_y)。</td></tr><tr><td>sin(x)</td><td>返回的x弧度的正弦值。</td></tr><tr><td>tan(x)</td><td>返回x弧度的正切值。</td></tr><tr><td>degrees(x)</td><td>将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0</td></tr><tr><td>radians(x)</td><td>将角度转换为弧度</td></tr></tbody></table><h3 id="statistics" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/statistics.html#module-statistics" target="_blank" rel="noreferrer">statistics</a> <a class="header-anchor" href="#statistics" aria-label="Permalink to &quot;[statistics](https://docs.python.org/zh-cn/3/library/statistics.html#module-statistics)&quot;">​</a></h3><table><thead><tr><th><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.mean" target="_blank" rel="noreferrer">mean()</a></th><th>数据的算术平均数（“平均数”）。</th></tr></thead><tbody><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.fmean" target="_blank" rel="noreferrer">fmean()</a></td><td>快速的，浮点算数平均数。</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.geometric_mean" target="_blank" rel="noreferrer">geometric_mean()</a></td><td>数据的几何平均数</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.harmonic_mean" target="_blank" rel="noreferrer">harmonic_mean()</a></td><td>数据的调和均值</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.median" target="_blank" rel="noreferrer">median()</a></td><td>数据的中位数（中间值）</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.median_low" target="_blank" rel="noreferrer">median_low()</a></td><td>数据的低中位数</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.median_high" target="_blank" rel="noreferrer">median_high()</a></td><td>数据的高中位数</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.median_grouped" target="_blank" rel="noreferrer">median_grouped()</a></td><td>分组数据的中位数，即第50个百分点。</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.mode" target="_blank" rel="noreferrer">mode()</a></td><td>离散的或标称的数据的单模（最常见的值）。</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.multimode" target="_blank" rel="noreferrer">multimode()</a></td><td>离散的或标称的数据的模式列表（最常见的值）。</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.quantiles" target="_blank" rel="noreferrer">quantiles()</a></td><td>将数据以相等的概率分为多个间隔。</td></tr></tbody></table><table><thead><tr><th><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.pstdev" target="_blank" rel="noreferrer">pstdev()</a></th><th>数据的总体标准差</th></tr></thead><tbody><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.pvariance" target="_blank" rel="noreferrer">pvariance()</a></td><td>数据的总体方差</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.stdev" target="_blank" rel="noreferrer">stdev()</a></td><td>数据的样本标准差</td></tr><tr><td><a href="https://docs.python.org/zh-cn/3/library/statistics.html#statistics.variance" target="_blank" rel="noreferrer">variance()</a></td><td>数据的样本方差</td></tr></tbody></table><h3 id="random" tabindex="-1"><a href="https://docs.python.org/zh-cn/3/library/random.html?highlight=%E7%94%9F%E6%88%90%E5%99%A8#module-random" target="_blank" rel="noreferrer">random</a> <a class="header-anchor" href="#random" aria-label="Permalink to &quot;[random](https://docs.python.org/zh-cn/3/library/random.html?highlight=%E7%94%9F%E6%88%90%E5%99%A8#module-random)&quot;">​</a></h3><p>seed(a=None, version=2)：初始化随机数生成器 <br> getstate()：返回捕获生成器当前内部状态的对象 <br> setstate(state)：state 是从 getstate() 获得的，并且 setstate() 将生成器的内部状态恢复到 getstate() 被调用时的状态 <br> getrandbits(k)：返回带有 k 位随机的Python整数</p><p>randrange(start, stop[, step])：从 range(start, stop, step) 返回一个随机选择的元素 <br> randint(a, b)：返回随机整数 N 满足 a &lt;= N &lt;= b <br> choice(seq)：从非空序列 seq 返回一个随机元素 <br> choices(population, weights=None, _, cum_weights=None, k=1)：从_population*中选择替换，返回大小为 k 的元素列表 <br> shuffle(x[, random])：将序列 x 随机打乱位置 <br> sample(population, k)：返回从总体序列或集合中选择的唯一元素的 k 长度列表 <br> random()：返回 [0.0, 1.0) 范围内的下一个随机浮点数 <br> uniform(a, b)：返回一个随机浮点数 N ，当 a &lt;= b 时 a &lt;= N &lt;= b ，当 b &lt; a 时 b &lt;= N &lt;= a <br> triangular(low, high, mode)：返回一个随机浮点数 N ，使得 low &lt;= N &lt;= high 并在这些边界之间使用指定的 mode <br> betavariate(alpha, beta)：Beta 分布 <br> expovariate(lambd)：指数分布 <br> gammavariate(alpha, beta)：Gamma 分布 <br> gauss(mu, sigma)：高斯分布 <br> lognormvariate(mu, sigma)：对数正态分布 <br> normalvariate(mu, sigma)：正态分布 <br> vonmisesvariate(mu, kappa)：冯·米塞斯（von Mises）分布 <br> paretovariate(alpha)：帕累托分布 <br> weibullvariate(alpha, beta)：威布尔分布 <br> <strong>class random.Random([seed])</strong></p><h2 id="appendix" tabindex="-1">Appendix <a class="header-anchor" href="#appendix" aria-label="Permalink to &quot;Appendix&quot;">​</a></h2><p><a href="https://github.com/gto76/python-cheatsheet" target="_blank" rel="noreferrer">python-cheatsheet</a></p>`,186);function F(n,A,u,m,f,g){return r(),p("div",null,[c,a(),B,a(" ### Number (数) "),i,s("ul",null,[y,d,b,s("li",null,[a("f format，格式化字符串 "),s("code",null,"f'{var} "+e(n.raw-n.big-n.parantheses)+"'",1)])]),h])}const C=t(o,[["render",F]]);export{w as __pageData,C as default};
