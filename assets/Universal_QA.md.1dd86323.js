import{_ as o,c as e,d as s,t as p,a,b as n,o as t}from"./app.c729a732.js";const r="/Notes/assets/1643694284888-12a17557-178b-4809-a588-695c44edb150.edf6da75.png",q=JSON.parse('{"title":"QA","description":"","frontmatter":{"title":"QA","created_at":"2022-02-01T05:44:45.000Z","updated_at":"2022-03-05T02:59:54.000Z","word_count":10187},"headers":[{"level":2,"title":"—— Software Testing ——","slug":"——-software-testing-——","link":"#——-software-testing-——","children":[]},{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":3,"title":"方向","slug":"方向","link":"#方向","children":[]},{"level":3,"title":"阶段","slug":"阶段","link":"#阶段","children":[]},{"level":3,"title":"状态","slug":"状态","link":"#状态","children":[]},{"level":3,"title":"行为","slug":"行为","link":"#行为","children":[]}]},{"level":2,"title":"测试流程","slug":"测试流程","link":"#测试流程","children":[{"level":3,"title":"需求分析","slug":"需求分析","link":"#需求分析","children":[]},{"level":3,"title":"测试设计","slug":"测试设计","link":"#测试设计","children":[]},{"level":3,"title":"测试执行","slug":"测试执行","link":"#测试执行","children":[]},{"level":3,"title":"测试总结","slug":"测试总结","link":"#测试总结","children":[]}]},{"level":2,"title":"自动化测试","slug":"自动化测试","link":"#自动化测试","children":[]},{"level":2,"title":"软件开发方法（software development methodology, SDM）","slug":"软件开发方法-software-development-methodology-sdm","link":"#软件开发方法-software-development-methodology-sdm","children":[]},{"level":2,"title":"实践","slug":"实践","link":"#实践","children":[]},{"level":2,"title":"Testing Tools","slug":"testing-tools","link":"#testing-tools","children":[{"level":3,"title":"Jira","slug":"jira","link":"#jira","children":[]},{"level":3,"title":"Fiddler","slug":"fiddler","link":"#fiddler","children":[]},{"level":3,"title":"Jmeter","slug":"jmeter","link":"#jmeter","children":[]},{"level":3,"title":"LoadRunner","slug":"loadrunner","link":"#loadrunner","children":[]},{"level":3,"title":"Jenkins","slug":"jenkins","link":"#jenkins","children":[]},{"level":3,"title":"Postman","slug":"postman","link":"#postman","children":[]},{"level":3,"title":"Robot Framework","slug":"robot-framework","link":"#robot-framework","children":[]}]}],"relativePath":"Universal/QA.md"}'),B={name:"Universal/QA.md"},c=a('<h2 id="——-software-testing-——" tabindex="-1">—— Software Testing —— <a class="header-anchor" href="#——-software-testing-——" aria-hidden="true">#</a></h2><p>软件测试：在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。</p><p>软件测试的对象：源程序、目标程序、数据及相关文档</p><p>软件测试流程：需求分析--&gt;测试计划--&gt;测试设计--&gt;测试环境搭建--&gt;测试执行--&gt;测试记录--&gt;缺陷管理--&gt;软件评估</p><p>所需能力</p><ul><li>业务分析能力</li><li>缺陷洞察能力</li><li>团队协作能力</li><li>专业技术能力</li><li>逻辑思考能力</li><li>问题解决能力</li><li>沟通表达能力</li><li>宏观把控能力</li></ul><p><img src="'+r+`" alt=""></p><h2 id="分类" tabindex="-1">分类 <a class="header-anchor" href="#分类" aria-hidden="true">#</a></h2><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-hidden="true">#</a></h3><p><strong>黑盒测试（Black-box Testing）</strong></p><ul><li><strong>等价类划分法</strong>：将程序所有可能的输入域（有效的和无效的）划分成若干个等价类。从中选取少数具有代表性的数据进行测试，避免穷举产生的大量用例。</li><li><strong>边界值分析法</strong>（Boundary Value Analysis）：对等价类划分法的补充，针对每个等价类的边界值，随机选取一个测试点</li><li><strong>场景法</strong></li><li>因果图法（Cause/Effect Graphing）：使用一种适合于描述多种条件的组合，产生多个相应动作的测试方法</li><li>判定表分析法：是分析和表达多种输入条件下系统执行不同动作的技术</li><li>正交试验法（Orthogonal Experimental Design）：混合正交表（allpairs是自动生成组合测试用例）</li><li>功能图法</li><li>错误推测法：基于以往的经验和直觉，参照以往的软件系统出现的错误，推测程序中所有可能存在的各种缺陷和错误，然后有针对性地设计测试用例。</li></ul><p><strong>白盒测试（White-box Testing）</strong> <br> 通过检查软件内部的逻辑结构，对软件中的逻辑路径进行覆盖测试；在程序的不同地方设立检查点，检查程序的状态，以确定实际运行状态与预期状态是否一致</p><p>原则</p><ul><li>保证一个模块中所有路径至少被测试一次。</li><li>所有逻辑值都要测试真（true）和假（false）两种情况。</li><li>检查程序的内部数据结构是否有效。</li><li>在上、下边界及可操作范围内运行所有循环。</li></ul><p>方法</p><ul><li>基本路径测试法</li><li>代码检査法</li><li>静态结构分析法</li><li>静态质量度量法</li><li>逻辑覆盖法：包括语句覆盖，判断覆盖，条件覆盖，判断/条件覆盖，条件组合覆盖，路径覆盖等。</li><li>域测试</li><li>符号测试</li><li>程序变异</li></ul><p>灰盒测试（Gray-Box Testing）：多用于集成测试阶段，不仅关注输出、输入的正确性，同时也关注程序内部的情况。</p><h3 id="方向" tabindex="-1">方向 <a class="header-anchor" href="#方向" aria-hidden="true">#</a></h3><p>功能测试：检查实际功能是否符合用户的需求 <br> 逻辑功能测试、界面测试、易用性测试、兼容性测试、安装测试等。</p><p>兼容测试（Compatibility Test Suite ）：所设计程序与硬件、软件之间的兼容性的测试。</p><ul><li>硬件兼容：与整机兼容、与外设兼容</li><li>软件兼容：操作系统/平台、应用软件之间的兼容、不同浏览器的兼容、数据库的兼容、分辨率</li></ul><p>性能测试 (performance testing)：通过测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行的测试。</p><ul><li>负载测试（Load Testing）：通过在被测系统上不断加压，直到性能指标达到极限</li><li>压力测试（Stress Testing，强度测试）：测试系统在一定饱和状态下，例如CPU、内存在饱和使用情况下，系统能够处理的会话能力，以及系统是否会出现错误。</li><li>并发测试：通过模拟用户并发访问，测试多用户并发访问同一个应用、同一个模块或者数据记录时是否存在死锁或其者他性能问题。</li><li>配置测试：通过对被测系统的软\\硬件环境的调整，了解各种不同对系统的性能影响的程度，从而找到系统各项资源的最优分配原则</li><li>可靠性测试：在给系统加载一定业务压力的情况下，使系统运行一段时间，以此检测系统是否稳定。</li></ul><p>吞吐量：通信通道上单位时间能成功传递的平均资料量，比特每秒（bit/s或bps） <br> 吞吐率：单位时间内网络上传输的数据量，即单位时间内处理客户请求数量。 <br> 事务：一个客户机向服务器发送请求然后服务器做出反应的过程</p><ul><li>TPS (Transaction Per second) ：每秒钟系统能够处理事务或交易的数量，衡量系统处理能力的重要指标。</li><li>QPS（Queries Per Second，每秒查询数）</li></ul><p>RT（Response Time，响应时间） <br> QPS(TPS)=并发数/平均响应时间</p><p>响应时间的“2-5-8原则”</p><ul><li>当用户能够在2秒以内得到响应时，会感觉系统的响应很快；</li><li>当用户在2-5秒之间得到响应时，会感觉系统的响应速度还可以；</li><li>当用户在5-8秒以内得到响应时，会感觉系统的响应速度很慢，但是还可以接受；</li><li>而当用户在超过8秒后仍然无法得到响应时，会感觉系统糟透了，或者认为系统已经失去响应，而选择离开这个Web站点，或者发起第二次请求。</li></ul><p>2-8原则：80%的bug多发生在软件的20%的模块</p><p>点击率（Hit Per Second） <br> PV（Page View）：页面访问量 <br> UV（Unique Visitor）：独立访客 <br> DAU(Daily Active User)，日活跃用户数量 <br> MAU(Month Active User)：月活跃用户数量</p><p>APP性能指标：内存、CPU、流量、电量、启动速度、滑动速度、界面切换速度、与服务器交互的网络速度。</p><p>安全测试：IT软件产品的生命周期中，对产品进行检验以验证产品符合安全需求定义和产品质量标准的过程。 <br> 渗透测试 (Penetration test)：通过模拟恶意黑客的攻击方法，来评估计算机网络系统安全的一种评估方法。</p><h3 id="阶段" tabindex="-1">阶段 <a class="header-anchor" href="#阶段" aria-hidden="true">#</a></h3><p>1、单元测试（Unit Testing）：又称模块测试，针对单一的程序模块进行的测试。 <br> 2、集成测试（Integration Testing）：又叫组装测试，在单元测试的基础上，对所有模块进行测试。 <br> 3、系统测试（System Testing）：将整个软件看做一个整体来进行测试，包括功能、性能、兼容性 <br> 4、验收测试（Acceptance Testing）：按照软件任务书或合同、供需双方约定的验收依据进行测试，决定是否接收</p><ul><li>内测版(alpha)内部交流版本，可能存在很多bug，不建议用户安装。</li><li>公测版(beta)面向所有用户，通过用户的反馈再去修改细节。</li><li>候选版(gamma)与正式软件相差无几。</li></ul><p>V模型：需求分析、概要设计、详细设计、编码、单元测试、集成测试、系统测试、验收测试;</p><table><thead><tr><th>系统测试</th><th>验收测试</th></tr></thead><tbody><tr><td>测试软件的端到端功能。</td><td>测试软件是否符合规定的要求和用户要求。</td></tr><tr><td>只有开发人员和测试人员才能执行系统测试。</td><td>它可以由测试人员，利益相关者和客户执行。</td></tr><tr><td>可以是非功能性和功能性测试。</td><td>只能是功能测试。</td></tr><tr><td>可测试整个系统的性能。</td><td>测试系统是否符合要求。</td></tr><tr><td>使用由测试团队选择的演示输入值。</td><td>使用用户提供的实际实时输入值。</td></tr><tr><td>包括完整规范的测试，包括软件和硬件，内存和用户数量。</td><td>是否满足用户的所有需求。</td></tr><tr><td>系统测试是系统测试和集成测试的组合。</td><td>验收测试是alpha测试和beta测试的组合。</td></tr><tr><td>涉及非功能测试下的负载和压力测试。</td><td>涉及功能测试下的边界值分析，等价分配和决策表。</td></tr><tr><td>发现的缺陷认为是固定的。</td><td>发现的缺陷视为产品故障。</td></tr></tbody></table><ul><li><p>冒烟测试（Smoke testing）：对一个新版本进行大规模的系统测试之前，先验证一下软件的基本功能是否实现，是否具备可测性</p></li><li><p>健全测试（Sanity testing）：</p></li><li><p>回归测试（Regression Testing）：修改了旧代码后，重新进行测试以确认修改后没有引入新的错误或导致其他代码产生错误。 | 冒烟测试 | 健全测试 | | --- | --- | | 它是一种测试应用程序所有部分测试位置的广泛方法。 | 它是一种测试应用程序特定部分的狭隘方法。 | | 它通过执行严格的测试来测量系统的稳定性。 | 它通过执行严格的测试来衡量系统的合理性。 | | 可以手动或自动进行。 | 可以在没有测试用例或脚本的情况下完成健全性测试。 | | 它由测试人员和开发人员执行。 | 它仅由测试人员执行。 | | 测试是在没有深入的情况下完成的，但是每当需要时，测试人员必须深入研究 | 完整性测试不需要深入了解应用程序。 | | 记录到文档。 | 不用记录到文档。 | | 它用于测试应用程序的端到端功能。 | 它仅用于测试修改或缺陷固定功能。 | | 它被视为验收测试的子集。 | 它被认为是回归测试的一个子集。 |</p></li><li><p>埋点测试</p></li><li><p>MOCK打桩测试</p></li></ul><p>埋点：针对特定用户行为或事件进行捕获、处理和发送的相关技术及其实施过程</p><ul><li>代码埋点：在你需要统计数据的地方植入N行代码，统计用户的关键行为</li><li>可视化埋点</li><li>无/全埋点：先尽可能收集所有控件的操作数据，然后再通过界面配置哪些数据需要在系统里面进行分析</li></ul><h3 id="状态" tabindex="-1">状态 <a class="header-anchor" href="#状态" aria-hidden="true">#</a></h3><p>静态测试（Static Testing）：被测程序不运行，只依靠分析或检查源程序的语句、结构、过程等来检查程序是否有错误。 <br> 动态测试（Dynamic Testing）：通过运行被测试程序，对得到的运行结果与预期的结果进行比较分析，同时分析运行效率和健壮性能等 <br> 静态质量：度量所依据的标准是ISO9126。软件的质量用以下几个方面来衡量，即功能性(Functionality)、可靠(Reliability)、可用性(Usability)、有效性(Efficiency)、可维护性（Maintainability）、可移植性(Portability)。</p><h3 id="行为" tabindex="-1">行为 <a class="header-anchor" href="#行为" aria-hidden="true">#</a></h3><p>人工测试（Manual Testing，MT） <br> 自动化测试（Automatic Testing，AT） <br> 对象 <br> 程序测试 <br> 文档测试</p><h2 id="测试流程" tabindex="-1">测试流程 <a class="header-anchor" href="#测试流程" aria-hidden="true">#</a></h2><h3 id="需求分析" tabindex="-1">需求分析 <a class="header-anchor" href="#需求分析" aria-hidden="true">#</a></h3><p>需求表现形式</p><ul><li>产品原型（Prototype）</li><li>需求文档</li><li>口述</li></ul><p>阶段内容</p><ul><li>梳理业务流程——流程图</li><li>提取功能点</li><li>编写需求分析说明书</li></ul><p>需求不明</p><ul><li>问产品经理</li><li>根据经验</li><li>参考同行</li></ul><h3 id="测试设计" tabindex="-1">测试设计 <a class="header-anchor" href="#测试设计" aria-hidden="true">#</a></h3><p>测试计划：模板文档编写</p><ul><li>概述</li><li>测试目的</li><li>软件结构</li><li>测试环境</li><li>测试内容</li><li>时间人员安排</li><li>各个阶段的输入输出</li><li>测试活动管理</li><li>测试标准</li></ul><p>测试方案（策略）</p><ul><li>风险分析</li><li>技术工具</li></ul><p><strong>设计测试用例</strong> <br> 测试用例（Test Case）：为某个特殊目标而编制的一组测试输入、执行条件以及预期结果，以便测试某个程序路径或核实是否满足某个特定需求。 <br> 即把测试系统的操作步骤用按照一定的格式用文字描述出来。</p><p>遵守5C原则（Correct准确、Clear清晰、Concise简洁、Complete完整、Consistent一致）</p><p>测试用例应包括：编号，标题，优先级，前提条件，测试数据，测试步骤，预期结果，实际结果。</p><p>用例评审</p><h3 id="测试执行" tabindex="-1">测试执行 <a class="header-anchor" href="#测试执行" aria-hidden="true">#</a></h3><p>执行测试用例 <br> 缺陷（Bug）管理 <br> 版本管理 <br> 版本迭代：增量测试、全量测试</p><p>软件缺陷 <br> 1、软件没有实现产品的说明书所描述的功能。 <br> 2、软件实现了产品说明书描述不应有的功能。 <br> 3、软件执行了产品说明书没讲的操作。 <br> 4、软件没有实现产品说明书没讲但应该实现的功能。 <br> 5、从软件测试员的角度来看，软件难以理解、不易使用、运行缓慢，或者最终用户认为不对。</p><p>软件缺陷（Bug）记录的内容</p><ul><li>bug编号</li><li>bug严重级别及优先级</li><li>bug产生的模块</li><li>复现步骤</li><li>附件（截图、录像、日志）</li><li>发现日期、发现人、修改日期、修改人、修改方法、回归结果等</li></ul><p>有效的发现Bug需参考需求以及详细设计等前期文档设计出高效的测试用例，然后严格执行测试用例，对发现的问题要充分确认肯定，然后再向外发布如此才能提高提交Bug的质量。</p><p>缺陷等级</p><ul><li>致命：一招毙命的缺陷，使你的系统无法运行，有造成数据泄漏的安全性问题。</li><li>严重：可以引起易于纠正的异常情况、可能引起易于修复的故障或对产品外观难以接受的缺陷。</li><li>一般：指不影响产品的运转和运行、不会成为故障起因，但对产品外观和下道工序影响较大的缺陷</li><li>轻微：对产品外观和下道工序可能会有轻微影响的缺陷</li><li>建议：增加用户使用体验的建议性问题。（一般情况下，建议也为做为缺陷的一种。这个跟系统的类型与需求有关）</li></ul><p>缺陷优先级（priority）</p><p>BUG的生命周期：提交-&gt;确认-&gt;分配-&gt;修复-&gt;验证-&gt;关闭</p><p>缺陷状态</p><ul><li>打开： 表示问题被提交等待有人处理。</li><li>重新指派 ： 问题被重新指派给某人处理。</li><li>处理 ： 问题在处理中，尚未完成。</li><li>固定 ： 确认此问题存在，但暂时不进行处理。</li><li>回归 ： 对已经修复的问题进行回归确认。</li><li>关闭 ： 问题的最后一个状态。</li></ul><h3 id="测试总结" tabindex="-1">测试总结 <a class="header-anchor" href="#测试总结" aria-hidden="true">#</a></h3><p>测试报告</p><ul><li>工作总结</li><li>缺陷（Bug）统计分析</li><li>软件评估 <ul><li>达标 <ul><li>所有的需求已经全部完成</li><li>并且123级的BUG已经全部被解决</li></ul></li><li>不达标 <ul><li>哪些需求还没完成</li><li>还有多少BUG没有修改</li></ul></li></ul></li></ul><p>QA &amp; QC <br> 软件质量保证与质量控制的区别</p><table><thead><tr><th>项目</th><th>QA</th><th>QC</th></tr></thead><tbody><tr><td>定义</td><td>一组活动，可确保始终保持软件开发过程中使用的过程质量。</td><td>一组用于检测已开发软件中的缺陷的活动。</td></tr><tr><td>关注重点</td><td>通过关注流程来防止开发软件中的缺陷。</td><td>通过关注测试过程来识别开发软件中的缺陷。</td></tr><tr><td>如何做</td><td>建立高质量的管理系统，并定期审核开发软件的操作是否符合要求。</td><td>通过使用开发软件中的测试技术和工具来检测和消除质量问题元素。</td></tr><tr><td>为什么做</td><td>通过使用包括文档在内的系统活动来确保质量问题的预防。</td><td>通过使用流程和技术来实现和维护高质量的软件，从而确保识别和消除缺陷。</td></tr><tr><td>面向</td><td>面向流程</td><td>面向产品</td></tr><tr><td>过程类型</td><td>一个积极主动的过程。它关注改善开发; 在测试期间不会出现缺陷。</td><td>一种反应过程，因为它涉及在产品开发之后和产品发布之前识别缺陷。</td></tr><tr><td>责任</td><td>开发团队的每个成员都负责QA</td><td>只有特定的测试团队负责QC</td></tr><tr><td>示例</td><td>验证软件流程。</td><td>检验软件功能和流程。</td></tr></tbody></table><p><img src="https://images2015.cnblogs.com/blog/15172/201603/15172-20160327140427917-1972216437.png#id=oHkBS&amp;originHeight=814&amp;originWidth=1654&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><p><strong>测试左移（Testing Shift Left）</strong> <br> 测试左移是向测试之前的开发阶段移动。 <br> 测试团队在软件开发周期早期和所有干系人合作。因此他们能清晰地理解需求以及设计测试用例去帮助软件“快速失败”，促使团队更早的修改所有的 Bug。更深入的参与和理解会促进测试人员获取产品完整的知识，彻底想清楚各种场景，并根据软件行为设计实时的场景，这些都会帮助团队在编码完成之前识别出一些缺陷。 <br> 测试左移聚焦在使测试人员在全部和最重要的项目阶段参与进来。这就是测试人员把焦点从发现 Bug 转移到 Bug 的预防上，同时也驱动项目的商业目标。 <br> <strong>测试右移（Testing Shift Right）</strong> <br> 测试右移是测试活动向产品发布之后的步骤移动。 <br> 产品上线了之后也可以进行一些测试活动。主要关注的是产品性能及可用性监控，以及新功能的测试。通过测试右移可以在生产环境做监控，监控线上性能和可用率，一旦线上发生任何问题，尽快反应，提前反应，给用户良好的体验。</p><h2 id="自动化测试" tabindex="-1">自动化测试 <a class="header-anchor" href="#自动化测试" aria-hidden="true">#</a></h2><p>使用独立于待测软件的其他软件来自动执行测试、比较实际结果与预期并生成测试报告这一过程 <br> <strong>分类</strong></p><ul><li>图形用户交互界面测试（GUI Based Testing）：使用能够产生图形用户界面操作（如出表点击、键盘输入等）的测试框架，模拟用户动作来以观察、验证程序是否正确的响应</li><li>接口测试（API Based Testing）：通过调用接口（API）绕过GUI，，以应用到验证的行为进行测试。 <ul><li>Arrange: 准备测试数据，构造请求</li><li>Act: 通过不同的参数来调用接口，并拿到返回</li><li>Assert: 断言，判断结果</li><li>数据库校验</li></ul></li></ul><p><strong>常用的框架/脚本模式</strong></p><ul><li>线性测试</li><li>结构化测试（使用控制分支结构）</li><li><a href="https://zh.wikipedia.org/wiki/%E8%B3%87%E6%96%99%E9%A9%85%E5%8B%95%E6%B8%AC%E8%A9%A6" target="_blank" rel="noreferrer">数据驱动测试</a>（<strong>Data-driven testing</strong>）：配合一个有许多测试输入及对应的验证输出值的表格，而其测试环境设定及控制不会固定在程式码中</li><li><a href="https://zh.wikipedia.org/wiki/%E9%97%9C%E9%8D%B5%E5%AD%97%E9%A9%85%E5%8B%95%E6%B8%AC%E8%A9%A6" target="_blank" rel="noreferrer">关键字驱动测试</a>（<strong>keyword-driven testing</strong>），也称为<strong>表格驱动测试</strong>（<strong>table-driven testing</strong>）或<strong>行动字驱动测试</strong>（<strong>action-word testing</strong>），创建测试程序的步骤分为规划及实现二个阶段。</li><li><a href="https://zh.wikipedia.org/wiki/%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%B5%8B%E8%AF%95" target="_blank" rel="noreferrer">基于模型的测试</a>（<strong>Model-based testing</strong>）：<a href="https://zh.wikipedia.org/wiki/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B" target="_blank" rel="noreferrer">测试用例</a>可以完全或部分的利用模型自动产生。</li><li>代码驱动的测试</li><li><a href="https://zh.wikipedia.org/wiki/%E8%A1%8C%E4%B8%BA%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91" target="_blank" rel="noreferrer">行为驱动开发</a>（Behavior-driven development，<strong>BDD</strong>）：一种<a href="https://zh.wikipedia.org/wiki/%E6%95%8F%E6%8D%B7%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91" target="_blank" rel="noreferrer">敏捷软件开发</a>的技术，它鼓励软件项目中的开发者、<a href="https://zh.wikipedia.org/wiki/%E5%93%81%E8%B3%AA%E4%BF%9D%E8%AD%89" target="_blank" rel="noreferrer">QA</a>和非技术人员或商业参与者之间的协作。</li><li>混合模式（混合使用多种模式）</li><li><a href="https://zh.wikipedia.org/wiki/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91" target="_blank" rel="noreferrer">敏捷开发</a>自动化测试框架</li></ul><p>POM（Page Object Model，页面对象模型） <br> 页面定位和业务操作分开，分离了测试对象和测试脚本</p><ul><li>PageModle：每个页面都有一个PageClass，标识该页面的Web元素，并包含对这些Web元素执行操作的方法</li><li>TestCase：测试用例管理部分，一个功能点可以对应一个或者多个case，尽可能的提高覆盖率</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">utils</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">seleniumtools</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">find_elemenet</span></span>
<span class="line"><span style="color:#E06C75;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">AdminloginPage</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    # 1. </span><span style="color:#E06C75;">封装要使用的元素</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">__init__</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">driver</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">driver</span><span style="color:#ABB2BF;"> = </span><span style="color:#E06C75;">driver</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">username</span><span style="color:#ABB2BF;"> = (</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;username&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">password</span><span style="color:#ABB2BF;"> = (</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;login_pwd&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loginbtn</span><span style="color:#ABB2BF;"> = (</span><span style="color:#98C379;">&quot;xpath&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;/html/body/div[1]/div/div[2]/div/form/div/div[3]/button&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    # 2.</span><span style="color:#E06C75;">封装对应的动作</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">go_login_page</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">driver</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;http://118.24.255.132:9090/shopxo/admin.php?s=/admin/logininfo.html&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">    # </span><span style="color:#E06C75;">登录动作</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">def</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">login</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">u</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">find_elemenet</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">driver</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">username</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">send_keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">u</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">find_elemenet</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">driver</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">password</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">send_keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">find_elemenet</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">driver</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">self</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loginbtn</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">click</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="软件开发方法-software-development-methodology-sdm" tabindex="-1">软件开发方法（software development methodology, SDM） <a class="header-anchor" href="#软件开发方法-software-development-methodology-sdm" aria-hidden="true">#</a></h2><p><strong>DevOps</strong>（<strong>Dev</strong>elopment和<strong>Op</strong>erations的组合词）是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。</p><p><strong>极限编程</strong>（Extreme programming，XP），一种<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B" target="_blank" rel="noreferrer">软件工程</a>方法学，是<a href="https://zh.wikipedia.org/wiki/%E6%95%8F%E6%8D%B7%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91" target="_blank" rel="noreferrer">敏捷软件开发</a>的一种方式。</p><p><strong>迭代式开发</strong>（<strong>迭代增量式开发</strong>，<strong>迭代进化式开发）：<strong>整个开发工作被组织为一系列的短小的、固定长度（如3周）的小项目，被称为一系列的</strong>迭代</strong>。</p><ul><li>迭代——某版本的生产过程，包括从需求分析到测试完成。</li><li>版本——某阶段软件开发的结果，一个可交付使用的产品。</li></ul><h2 id="实践" tabindex="-1">实践 <a class="header-anchor" href="#实践" aria-hidden="true">#</a></h2><p><strong>测试驱动开发</strong>（Test-driven development，TDD）是一种<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B" target="_blank" rel="noreferrer">软件开发过程</a>中的应用方法，倡导先写测试程序，然后编码实现其功能得名。</p><ul><li>驱动代码的设计和功能的实现 --&gt; 驱动代码的再设计和重构</li></ul><p>验收性测试驱动开发（Acceptance Test Driven Development，ATDD）：整个团队在开发工作之前，一起讨论、制定每个任务的验收标准，并提取测试用例。</p><p><strong>持续集成</strong>（Continuous integration，CI）是一种<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B" target="_blank" rel="noreferrer">软件工程</a>流程，将所有<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%AB" target="_blank" rel="noreferrer">软件工程师</a>对于软件的工作副本持续集成到共享主线（mainline）的一种举措。 <br> <strong>持续交付</strong>（Continuous delivery，CD），是一种<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B" target="_blank" rel="noreferrer">软件工程</a>手法，让软件产品的产出过程在一个短周期内完成，以保证软件可以稳定、持续的保持在随时可以释出的状况。 <br> <strong>持续部署</strong>（Continuous deployment，CD），是一种<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B" target="_blank" rel="noreferrer">软件工程</a>方法，在<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B" target="_blank" rel="noreferrer">软件开发流程</a>中，以自动化方式，频繁而且持续性的，将<a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94" target="_blank" rel="noreferrer">软件</a><a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2" target="_blank" rel="noreferrer">部署</a>到生产环境（production environment）中，使软件产品能够快速的发展</p><p><a href="https://semver.org/lang/zh-CN/" target="_blank" rel="noreferrer">语义化版本规范</a> <br> 版本控制命名格式: 主版本号.子版本号[.修正版本号[.编译版本号 ]] <br> <code>Major.Minor [.Revision[.Build]]</code></p><ul><li>Major ：具有相同名称但不同主版本号的程序集不可互换。适用于对产品的大量重写，无法实现向后兼容</li><li>Minor ：显著增强，但照顾到了向后兼容性。适用于产品的修正版或完全向后兼容的新版本。</li><li>Build ：表示对相同源所作的重新编译。适用于更改处理器、平台或编译器的情况。</li><li>Revision ：适用于修复以前发布的程序集中的安全漏洞。</li></ul><p>alpha: 内部版本 <br> beta: 公测版本 <br> rc（Release candiate，正式版本的候选版本） <br> LTS (Long Term Support，长期支持)</p><h2 id="testing-tools" tabindex="-1">Testing Tools <a class="header-anchor" href="#testing-tools" aria-hidden="true">#</a></h2><h3 id="jira" tabindex="-1">Jira <a class="header-anchor" href="#jira" aria-hidden="true">#</a></h3><p>基于Java架构的管理系统，开发者是 Atlassian，是集项目计划、任务分配、需求管理、错误跟踪于一体的商业软件。 <br> <img src="https://community.atlassian.com/t5/image/serverpage/image-id/110990i21F2440EDEB21200/image-dimensions/2000?v=1.0&amp;px=-1#id=NPOSF&amp;originHeight=1594&amp;originWidth=1100&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="fiddler" tabindex="-1">Fiddler <a class="header-anchor" href="#fiddler" aria-hidden="true">#</a></h3><p>Fiddler 是以代理web服务器的形式工作的，使用代理地址:127.0.0.1:8888 <br> Fiddler能捕获HTTP和HTTPS流量，并将其记录下来供用户查看。它通过使用自签名证书实现中间人攻击来进行日志记录。</p><h4 id="using-quickexec" tabindex="-1"><a href="https://docs.telerik.com/fiddler/knowledge-base/quickexec#using-quickexec" target="_blank" rel="noreferrer">Using QuickExec</a> <a class="header-anchor" href="#using-quickexec" aria-hidden="true">#</a></h4><table><thead><tr><th><strong>命令</strong></th><th><strong>对应请求项</strong></th><th><strong>介绍</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>?string</td><td>All</td><td>匹配出包含这个字符串的请求</td><td>?google</td></tr><tr><td>&gt; | &lt;</td><td>Body</td><td>匹配出请求大小</td><td>&gt;1000</td></tr><tr><td>=</td><td>Result</td><td>=status/=method，查找状态、方法相对应的session会话</td><td>=504，=get</td></tr><tr><td>@</td><td>Host</td><td>@后面跟Host，可以匹配域名</td><td>@www.baidu.com</td></tr><tr><td>select</td><td>Content-Type</td><td>select后面跟响应类型，可以匹配到相关的类型</td><td>select image</td></tr><tr><td>blod</td><td>All</td><td>加粗目标请求，无参时重置</td><td></td></tr><tr><td>cls</td><td>All</td><td>清屏 (Ctrl+x)</td><td>cls</td></tr><tr><td>dump</td><td>All</td><td>将所有请求打包成saz压缩包，保存到“我的文档\\Fiddler2\\Captures”</td><td>dump</td></tr><tr><td>start</td><td>All</td><td>开始监听请求</td><td>start</td></tr><tr><td>stop</td><td>All</td><td>停止监听请求</td><td>stop</td></tr><tr><td>urlreplace</td><td>All</td><td>Replace any string in URLs with a different string.</td><td>urlreplace SeekStr ReplaceWithStr</td></tr><tr><td>allbut / keeponly</td><td>Content-Type</td><td>Hide all sessions except those where Content-Type header contains the specified string</td><td>allbut xml</td></tr></tbody></table><p><strong>Breakpoint（断点）</strong></p><table><thead><tr><th><strong>命令</strong></th><th><strong>对应请求项</strong></th><th><strong>介绍</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>bpafter</td><td>All</td><td>bpafter后边跟一个字符串，表示中断所有包含该字符串的请求</td><td>bpafter baidu（输入bpafter解除断点）</td></tr><tr><td>bpu</td><td>All</td><td>与bpafter类似，只是收到请求了，中断响应</td><td>bpu baidu（输入bpu解除断点）</td></tr><tr><td>bps</td><td>Result</td><td>后面跟状态吗，表示中断所有是这个状态码的请求</td><td>bps 200（输入bps解除断点）</td></tr><tr><td>bpv / bpm</td><td>HTTP方法</td><td>只中断HTTP方法的命令，HTTP方法如POST、GET</td><td>bpv get（输入bpv解除断点）</td></tr><tr><td>g / go</td><td>All</td><td>放行所有中断下来的请求</td><td>g</td></tr></tbody></table><ul><li>Rules-&gt; Automatic Breakpoint -&gt;Before Requests | After Response</li><li>bpu | bpafter string</li></ul><p><strong>Filters</strong> <br> <code>REGEX:(?insx)/[^\\?/]*\\.(css|ico|jpg|png|gif|bmp|wav)(\\?.*)?$</code> <br> REGEX: 表示启用正则表达式 <br> (?insx) 设置正则解释的规则，忽略大小写等。</p><p>手机抓包 <br> 1 手机和电脑在同一局域网 <br> 2 fiddler开启远程连接 <br> 3. 手机设置网络代理，指向局域网中fiddler的地址（IP+PORT） <br> 4. 手机端用浏览器通过 fiddler的地址（xx.xx.xx.xx:8888）下载fiddler证书并安装 <br> 5. 抓包测试完毕，记得关闭手机中的代理，删除手机端安装的fiddler证书</p><blockquote><p><em>android7.0+的版本新增了证书验证(系统证书)</em> _ios13.0+ 需要插件 _CertMaker for iOS and Android <a href="https://www.telerik.com/fiddler/add-ons" target="_blank" rel="noreferrer">https://www.telerik.com/fiddler/add-ons</a></p></blockquote><h4 id="脚本" tabindex="-1">脚本 <a class="header-anchor" href="#脚本" aria-hidden="true">#</a></h4><p>菜单-&gt;Rules-&gt;Customize Rules…（Ctrl+R）</p><p><strong>beforerequest</strong> <br> 显示IP</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">static</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Main</span><span style="color:#ABB2BF;">() </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//显示IP地址</span></span>
<span class="line"><span style="color:#61AFEF;">FiddlerObject</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">UI</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lvSessions</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">AddBoundColumn</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;ServerIP&quot;</span><span style="color:#ABB2BF;">, 120, </span><span style="color:#98C379;">&quot;X-HostIP&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>模拟弱网：Rules-&gt;Performance-&gt;Simulate Modem Speeds</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">m_SimulateModem</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// Delay sends by 300ms per KB uploaded.</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">oSession</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;request-trickle-delay&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;300&quot;</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">// Delay receives by 150ms per KB downloaded.</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">oSession</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;response-trickle-delay&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;150&quot;</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>过滤并高亮显示host / url</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">( </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">host</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">IndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;host&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">host</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">IndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;host&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;"> 	</span><span style="color:#E06C75;">oSession</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;ui-color&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;green&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">IndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;url_path&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span><span style="color:#E06C75;">oSession</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;ui-color&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;yellow&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>设置请求的header</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// TSET FOR Spider： 根据网站来限定请求</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">HostnameIs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;test.com&quot;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 模拟修改请求的用户端ip，这种情况对独立的网络有效，对于公司级的网络，还是有一些问题，需要借助vpn</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">oRequest</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;X-Forwarded-For&quot;</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;16.12.23.16&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 修改请求的header</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">oRequest</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;User-Agent&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;spider Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.81 Safari/537.36 SE 2.X MetaSr 1.0&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>删除所有的cookie oSession.oRequest.headers.Remove(&quot;Cookie&quot;); <br> 新建cookie oSession.oRequest.headers.Add(&quot;Cookie&quot;, &quot;username=testname;testpassword=P@ssword1&quot;);</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">HostnameIs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;******&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">oRequest</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">headers</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Exists</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Cookie&quot;</span><span style="color:#ABB2BF;">) ) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sCookie</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">oRequest</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;Cookie&quot;</span><span style="color:#ABB2BF;">]; </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//用replace方法或者正则表达式的方法去操作cookie的string</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//sCookie = sCookie.Replace(&quot;cookieName=&quot;, &quot;ignoreme=&quot;); </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">sCookie</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sCookie</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;;tt_spver=1&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">oRequest</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;Cookie&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">sCookie</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>beforerespond</strong> <br> 修改response body</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">HostnameIs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;host&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">IndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;url_path&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 获取response中的body字符串</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strBody</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GetResponseBodyAsString</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 用正则表达式或者replace方法去修改string</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">regx</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&quot;stream_mode&quot;:</span><span style="color:#56B6C2;">\\d</span><span style="color:#98C379;">*?&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">strBody</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">strBody</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regx</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;&quot;stream_mode&quot;:0&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 弹个对话框检查下修改后的body               </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">FiddlerObject</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">strBody</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 将修改后的body，重新写回Request中</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">utilSetResponseBody</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">strBody</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>修改json</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">HostnameIs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;host&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">IndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;url_path&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 获取Response Body中JSON字符串</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">responseStringOriginal</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GetResponseBodyAsString</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 转换为可编辑的JSONObject变量</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">responseJSON</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Fiddler</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">WebFormats</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">JsonDecode</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">responseStringOriginal</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 修改JSONObject变量，修改字段数据</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">responseJSON</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">JSONObject</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;new_core&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;True&quot;</span><span style="color:#ABB2BF;">;  </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">responseJSON</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">JSONObject</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;stream_mode&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 重新设置Response Body</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">responseStringDestinal</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Fiddler</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">WebFormats</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">JsonEncode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">responseJSON</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">JSONObject</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">utilSetResponseBody</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">responseStringDestinal</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>支持 CORS</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">static</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">OnBeforeResponse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">oSession</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Session</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        	...</span></span>
<span class="line"><span style="color:#ABB2BF;">        	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">uriContains</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;要处理的url&quot;</span><span style="color:#ABB2BF;">)){</span></span>
<span class="line"><span style="color:#ABB2BF;">        		</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">oResponse</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;Access-Control-Allow-Origin&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&quot;允许的域名&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        		</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">oResponse</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;Access-Control-Allow-Credentials&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        	}</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>返回404</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">HostnameIs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;host1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">IndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;url_path1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">//说明已经拿到了播放请求接口,将其返回网络状态码修改成：404</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">oResponse</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">headers</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">HTTPResponseCode</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">404</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">oSession</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">oResponse</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">headers</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">HTTPResponseStatus</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;use fiddler change responed code&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#ABB2BF;">     }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Guide</p><ul><li><a href="https://docs.telerik.com/fiddler/knowledge-base/fiddlerscript/modifyrequestorresponse#modifying-a-request-or-response" target="_blank" rel="noreferrer">Modifying a Request or Response</a></li><li><a href="http://fiddlerbook.com/Fiddler/dev/ScriptSamples.asp" target="_blank" rel="noreferrer">FiddlerScript</a></li></ul><h3 id="jmeter" tabindex="-1">Jmeter <a class="header-anchor" href="#jmeter" aria-hidden="true">#</a></h3><p>bin</p><ul><li>examples 目录中有 CSV样例</li><li>jmeter.bat 启动JMeter (默认GUI模式)</li><li>jmeterw.cmd 启动JMeter没有windows shell控制台 (默认GUI模式)</li><li>jmeter-n.cmd 一个JMX文件在运行非GUI测试</li><li>jmeter-n-r.cmd 一个JMX文件在运行非GUI远程测试</li><li>jmeter-t.cmd 一个JMX文件在GUI模式下加载它</li><li>jmeter-server.bat 分布式测试的服务器配置</li><li>mirror-server.cmd 在非GUI模式下运行JMeter镜像服务器</li><li>shutdown [.cmd|.sh] 平滑缓慢的关闭</li><li>stoptest [.cmd|.sh] 迅速关闭</li><li>jmeter.properties 系统配置文件</li><li>Jmeter.log</li></ul><p>jmeter.properties</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">sampleresult</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">default</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">encoding</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">UTF</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">解决中文乱码</span></span>
<span class="line"><span style="color:#E06C75;">language</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">zh_CN</span><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">默认简体中文</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>插件管理器</strong> <br> Download <a href="https://jmeter-plugins.org/get/" target="_blank" rel="noreferrer">plugins-manager.jar</a> and put it into lib/ext directory, then restart JMeter</p><p><strong>测试计划（Test Plan）</strong> <br> 线程组(Thread Group) 相当于一个业务流程； <br> 线程属性 ThreadProperties</p><ul><li>线程数（Number of Threads）：虚拟用户数量</li><li>Ramp-Up时间：在X秒内启动上面配置的线程数</li><li>循环次数（Loop Count）：循环模拟的次数</li></ul><p>测试片段（Test Fragment）：控制器上的一个种特殊的线程组</p><p>配置元素(Configuration Elements)：提供对静态数据配置的支持 <br> 预处理器元素(Pre-Processor Elements) <br> 定时器(Timers)</p><ul><li>Synchronizing Timer**（集合点**：同步虚拟用户，使得所设置数目的虚拟用户聚集在某个时间点前，然后在同一时刻执行某项操作任务）</li></ul><p>控制器(Controllers) <br> 取样器（Sampler）：向服务器发送请求，记录响应信息，记录响应时间的最小单元 <br> 后处理器元素(Post-Processor Elements) <br> 断言（<strong>Assertions</strong>） <br> 监听器(Listeners) <br> <strong>聚合报告</strong></p><ul><li><strong>Samples：</strong> 总共发给服务器的请求数量</li><li><strong>Average：</strong> 单个请求的平均响应时间，单位是毫秒</li><li><strong>Median：</strong> 50%的请求的响应时间</li><li><strong>90%Line：</strong> 90%的请求的响应时间</li><li><strong>Min：</strong> 最小的响应时间</li><li><strong>Max：</strong> 最大的响应时间</li><li><strong>Error%：</strong> 错误率=错误的请求的数量/请求的总数</li><li><strong>Throughput：</strong> 吞吐量即表示每秒完成的请求数</li><li><strong>Received KB/sec：</strong> 每秒从服务器端接收到的数据量</li><li><strong>Sent KB/Sec：</strong> 每秒从发送到服务器端的数据量</li></ul><p>录制脚本</p><ul><li>测试计划——非测试元件——HTTP代理服务器</li><li>配置 HTTP代理服务器，端口号（Port）：8888（默认）</li><li>启动代理服务器，会在jmeter的bin目录下生成一个安全证书文件：ApacheJMeterTemporaryRootCA.crt</li><li>设置系统或浏览器代理服务器与Jmeter一致（浏览器导入证书即可开始）</li><li>添加排除模式 .*.(js|css|PNG|jpg|ico|png|gif|jpeg)</li></ul><p>参数化</p><ul><li>CSV数据控件</li><li>用户定义的变量</li><li>用户参数</li></ul><p><code>\${变量名}</code></p><p>提取</p><ul><li>Xpath</li><li>JSON 提取器表达式，$..&lt;字段名&gt;</li><li>正则</li></ul><p>函数列表 <br> <code>\${__functionName(var1,var2,var3)}</code> 如果参数本身带逗号，使用‘,’来转义</p><table><thead><tr><th>函数类型</th><th>名称</th><th>注解</th></tr></thead><tbody><tr><td>信息</td><td>threadNum</td><td>获取线程号</td></tr><tr><td>信息</td><td>samplerName</td><td>获取采样器名称(标签)。</td></tr><tr><td>信息</td><td>log</td><td>记录(或显示)消息(并返回值)。</td></tr><tr><td>信息</td><td>machineName</td><td>获取本地计算机名称。</td></tr><tr><td>输入</td><td>StringFromFile</td><td>从文件中读取一行。</td></tr><tr><td>输入</td><td>FileToString</td><td>读取整个文件。</td></tr><tr><td>输入</td><td>CSVRead</td><td>从CSV分隔文件中读取。</td></tr><tr><td>输入</td><td>XPath</td><td>使用XPath表达式从文件中读取。</td></tr><tr><td>计算</td><td>Counter</td><td>生成递增数字。</td></tr><tr><td>计算</td><td>intSum</td><td>相加int数字。</td></tr><tr><td>计算</td><td>longSum</td><td>相加long数字。</td></tr><tr><td>计算</td><td>Random</td><td>生成一个随机数。</td></tr><tr><td>计算</td><td>RandomString</td><td>生成随机字符串。</td></tr><tr><td>脚本</td><td>BeanShell</td><td>运行BeanShell脚本。</td></tr><tr><td>脚本</td><td>javaScript</td><td>运行javaScript脚本。</td></tr><tr><td>脚本</td><td>jexl, jexl2</td><td>评估Commons Jexl表达式。</td></tr><tr><td>属性</td><td>Property</td><td>读取property文件。</td></tr><tr><td>属性</td><td>P</td><td>读取一个属性(速记方法)。</td></tr><tr><td>变量</td><td>Split</td><td>将字符串拆分为变量。</td></tr><tr><td>变量</td><td>eval</td><td>评估变量表达式。</td></tr><tr><td>字符串</td><td>regexFunction</td><td>使用正则表达式解析先前的响应。</td></tr><tr><td>字符串</td><td>escapeOroRegexpChars</td><td>引用ORO正则表达式使用的元字符。</td></tr><tr><td>字符串</td><td>Char</td><td>从数字列表生成Unicode char值。</td></tr><tr><td>字符串</td><td>Unescape</td><td>包含Java转义的进程字符串(例如\\n＆\\t)。</td></tr><tr><td>字符串</td><td>unescapeHtml</td><td>解码HTML编码的字符串。</td></tr><tr><td>字符串</td><td>escapeHtml</td><td>使用HTML编码对字符串进行编码。</td></tr><tr><td>字符串</td><td>TestPlanName</td><td>返回当前测试计划的名称。</td></tr></tbody></table><p>注意：JMeter函数和变量始终区分大小写。</p><p><strong>分布式</strong> <br> 各电脑中的Jmeter环境及脚本路径一致 <br> 打开Jmeter-server.bat，启动Jmeter</p><p>执行机：将本地IP地址填写到Jmeter的配置文件（remote_hosts字段）（关闭防火墙、其他虚拟网卡） <br> 控制机：将执行机的IP写入配置文件（remote_hosts字段，用,分开）</p><p><strong>命令行模式</strong> <br> <code>jmeter -n -t &lt;testplan.jmx&gt; -l &lt;listener filename&gt;</code></p><ul><li>-n 设置命令行模式</li><li>-t 指定JMX脚本路径</li><li>-l 指定结果文件路径（jtl 或 csv格式），参数为结果文件路径，不存在时会自动创建</li><li>-j 指定执行日志路径，会将日志输出至命令行控制台</li><li>-r 设置分布式（远程）执行，默认所有远程机器都运行</li><li>-R 指定远程（分布式）服务器列表，参数为指定服务器列表</li><li>-g 指定测试结果文件路径，仅用于生成测试报告，参数为csv结果文件</li><li>-e 设置测试完成后生成测试报告</li><li>-o 指定测试报告生成文件夹，文件夹必须为空或不存在</li><li>-H 指定代理服务器或代理服务器域名</li><li>-P 指定代理服务器端口号</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">propfile</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">the</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">jmeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">property</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">use</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">q</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">addprop</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">additional</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">JMeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">property</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">file</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">testfile</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">the</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">jmeter</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(.</span><span style="color:#E06C75;">jmx</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">run</span><span style="color:#ABB2BF;">. </span><span style="color:#98C379;">&quot;-t LAST&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">will</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">load</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">last</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">used</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">file</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">l</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">logfile</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">the</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">samples</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">jmeterlogconf</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">jmeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">logging</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">configuration</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">file</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">log4j2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">xml</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">j</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">jmeterlogfile</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">jmeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">file</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">jmeter</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">nongui</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">JMeter</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">nongui</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">mode</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">server</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">the</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">JMeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">proxyScheme</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">Set</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">scheme</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">use</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">the</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">H</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">proxyHost</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">Set</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">JMeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">use</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">P</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">proxyPort</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">Set</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">JMeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">use</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">N</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">nonProxyHosts</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">Set</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">nonproxy</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">host</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">list</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">g</span><span style="color:#ABB2BF;">. </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">apache</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">org</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;">localhost</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">u</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">username</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">Set</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">username</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">that</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">JMeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">is</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">use</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">password</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">Set</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">password</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">server</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">that</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">JMeter</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">is</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">use</span></span>
<span class="line"><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">J</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">jmeterproperty</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">argument</span><span style="color:#56B6C2;">&gt;=</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	Define additional JMeter properties</span></span>
<span class="line"><span style="color:#ABB2BF;">-G, --globalproperty &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;=&lt;</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	Define Global properties (sent to servers)</span></span>
<span class="line"><span style="color:#ABB2BF;">-D, --systemproperty &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;=&lt;</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	Define additional system properties</span></span>
<span class="line"><span style="color:#ABB2BF;">-S, --systemPropertyFile &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	additional system property file(s)</span></span>
<span class="line"><span style="color:#ABB2BF;">-f, --forceDeleteResultFile</span></span>
<span class="line"><span style="color:#ABB2BF;">	force delete existing results files and web report folder if present before starting the test</span></span>
<span class="line"><span style="color:#ABB2BF;">-L, --loglevel &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;=&lt;</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	[category=]level e.g. jorphan=INFO, jmeter.util=DEBUG or com.example.foo=WARN</span></span>
<span class="line"><span style="color:#ABB2BF;">-r, --runremote</span></span>
<span class="line"><span style="color:#ABB2BF;">	Start remote servers (as defined in remote_hosts)</span></span>
<span class="line"><span style="color:#ABB2BF;">-R, --remotestart &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	Start these remote servers (overrides remote_hosts)</span></span>
<span class="line"><span style="color:#ABB2BF;">-d, --homedir &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	the jmeter home directory to use</span></span>
<span class="line"><span style="color:#ABB2BF;">-X, --remoteexit</span></span>
<span class="line"><span style="color:#ABB2BF;">	Exit the remote servers at end of test (non-GUI)</span></span>
<span class="line"><span style="color:#ABB2BF;">-g, --reportonly &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	generate report dashboard only, from a test results file</span></span>
<span class="line"><span style="color:#ABB2BF;">-e, --reportatendofloadtests</span></span>
<span class="line"><span style="color:#ABB2BF;">	generate report dashboard after load test</span></span>
<span class="line"><span style="color:#ABB2BF;">-o, --reportoutputfolder &lt;</span><span style="color:#E06C75;">argument</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	output folder for report dashboard</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><p><strong>BeanShell</strong> <br> 用Java写成的，一个小型的、可以下载、嵌入式的Java源代码解释器，具有对象脚本的特性； <br> BeanShell可以执行标准Java语句和表达式，以及另外自身的一些脚本命令和语法。</p><p>内置<strong>变量</strong></p><ul><li><strong>log</strong>：写入信息到jmeber.log文件 <ul><li><a href="http://log.info" target="_blank" rel="noreferrer">log.info</a>(“This is log info!”)</li></ul></li><li><strong>ctx</strong>：引用了当前线程的上下文</li><li><strong>vars</strong> - (JMeterVariables)：操作jmeter变量，引用了JMeter线程中的局部变量容器（本质上是Map） <ul><li>vars.get(String key)</li><li>vars.put(String key，String value)</li></ul></li><li><strong>props</strong> - (JMeterProperties - class java.util.Properties)：引用了JMeter的配置信息，可以获取Jmeter的属性 <ul><li>props.get(&quot;START.HMS&quot;)</li><li>props.put(&quot;PROP1&quot;,&quot;1234&quot;);</li></ul></li><li><strong>prev</strong> - (SampleResult)：获取前面的sample返回的信息 <ul><li>getResponseDataAsString()：获取响应信息</li><li>getResponseCode() ：获取响应code</li></ul></li><li>sampler - (Sampler)：gives access to the current sampler</li><li>Parameters：来保存参数的集合</li></ul><p><strong>引用外部文件</strong></p><ul><li>源文件（.java）：source(Path);</li><li>字节码文件（.class）：addClassPath(FilePath)，import导入包及类</li><li>jar包：Test Plan中添加；或将jar包拷贝到jmeter/lib/ext下，重启Jmeter</li></ul><p>e.g</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">++</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">valueOf</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">vars</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;n&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="loadrunner" tabindex="-1">LoadRunner <a class="header-anchor" href="#loadrunner" aria-hidden="true">#</a></h3><p>组件</p><ul><li>Virtual User Generator—虚拟用户生成器</li><li>LoadRunner Controller—创建、运行和监控场景</li><li>LoadRunner Analysis—分析测试结果，图表报告</li></ul>`,174),i=s("p",{变量名:""},"引用变量 ",-1),y=a('<p>并发</p><ul><li>脚本设置集合点 Ir_rendezvous</li><li>Controller中设置集合点的执行策略</li></ul><p>事务</p><ul><li>收集性能指标的最小单元</li><li>每个请求都要添加事务</li><li>lr_start_transaction(&quot;xxx&quot;);</li><li>lr_end_transaction(&quot;xxx&quot;, LR_AUTO)</li></ul><p>负载测试的流程</p><ul><li>Plan the load test 规划负载测试</li><li>Create Vuser scripts 创建脚本 <ul><li>选择协议</li><li>选择录制程序，输入url</li><li>脚本运行时设置：设置每个action的执行次数、设定思考时间、步等</li></ul></li><li>Define the scenario 定义场景</li><li>Analyze the results 分析结果</li></ul><h3 id="jenkins" tabindex="-1"><a href="https://jenkins.io/" target="_blank" rel="noreferrer">Jenkins</a> <a class="header-anchor" href="#jenkins" aria-hidden="true">#</a></h3><p>开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行。</p><p>用于监视执行重复工作，如建立一个软件项目或工作运行的计划任务。 <br> 不断地进行项目的构建/测试软件 <br> 监控外部运行的作业</p><p>安装到Tomcat的 webapps 目录下</p><p>\\restart <br> \\reload</p><p>汉化插件 <br> Localization Chinese</p><h3 id="postman" tabindex="-1"><a href="https://learning.postman.com/docs/writing-scripts/intro-to-scripts/" target="_blank" rel="noreferrer">Postman</a> <a class="header-anchor" href="#postman" aria-hidden="true">#</a></h3>',13),d=s("li",null,"pm.variables.has(variableName:String):function → Boolean",-1),A=s("li",null,"pm.variables.get(variableName:String):function → *",-1),u=s("li",null,"pm.variables.set(variableName:String, variableValue:*):function",-1),F=s("li",null,"pm.test(testName:String, specFunction:Function):Function",-1),b=a('<p><strong>随机唯一性字符串</strong></p><table><thead><tr><th><strong>Variable Name</strong></th><th><strong>Description</strong></th><th><strong>Examples</strong></th></tr></thead><tbody><tr><td>$guid</td><td>uuid-v4 风格的 guid</td><td>“611c2e81-2ccb-42d8-9ddc-2d0bfa65c1b4”</td></tr><tr><td>$timestamp</td><td>时间戳</td><td>1562757107</td></tr><tr><td>$randomUUID</td><td>随机 36 位的 UUID</td><td>“6929bb52-3ab2-448a-9796-d6480ecad36b”</td></tr></tbody></table><p><strong>随机文字、字符串、颜色（码）</strong></p><table><thead><tr><th><strong>Variable Name</strong></th><th><strong>Decription</strong></th><th><strong>Examples</strong></th></tr></thead><tbody><tr><td><strong>$randomAlphaNumeric</strong></td><td>1位随机字符或数字</td><td>6 , &quot;y&quot; , &quot;z&quot;</td></tr><tr><td><strong>$randomBoolean</strong></td><td>随机布尔值 (true/false)</td><td>true , false</td></tr><tr><td><strong>$randomInt</strong></td><td>1~1000 之间的随机整数</td><td>200</td></tr><tr><td><strong>$randomColor</strong></td><td>随机颜色单词</td><td>&quot;red&quot; , &quot;fuchsia&quot; , &quot;grey&quot;</td></tr><tr><td><strong>$randomHexColor</strong></td><td>随机颜色码</td><td>&quot;#47594a&quot; , &quot;#431e48&quot; , &quot;#106f21&quot;</td></tr><tr><td><strong>$randomAbbreviation</strong></td><td>随机缩写</td><td>SQL , PCI , JSON</td></tr></tbody></table><h3 id="robot-framework" tabindex="-1"><a href="https://robotframework.org/" target="_blank" rel="noreferrer">Robot Framework</a> <a class="header-anchor" href="#robot-framework" aria-hidden="true">#</a></h3><p>关键字驱动的开源自动化测试框架 <br> 一个通用的验收测试和验收测试驱动开发的自动化测试框架（ATDD）。它具有易于使用的表格来组织测试过程和测试数据。</p><ul><li><strong>Web 自动化测试</strong>：SeleniumLibrary，Selenium2Library，Selenium2Library for Java、watir-robot 等。</li><li><strong>Windows GUI 测试</strong>：AutoItLibrary。</li><li><strong>移动测试</strong>：Android library、iOS library、AppiumLibrary 等。</li><li><strong>数据库测试</strong>：Database Library (Java)、Database Library (Python)、MongoDB library 等。</li><li><strong>文件对比测试</strong>：Diff Library。</li><li><strong>HTTP 测试</strong>：HTTP library (livetest)、HTTP library (Requests)等。</li></ul><p>基础库 robotframework <br> 图形界面 robotframework-ride</p><p>启动图形界面：pythonw.exe -c &quot;from robotide import main; main()&quot;</p>',9),C=s("p",null,[n("${x}= set variable 1 "),s("br"),n(" ${z}= evaluate "),s("img",{src:"https://cdn.nlark.com/yuque/__latex/40d41f22cbbcb71729268f6c9a67c7dc.svg#card=math&code=%7Bx%7D%2B&id=BMEpj",alt:"",x:""}),n(),s("br"),n(" @{list}= create list 1 2 3 "),s("br"),n(" &{map}= create dictionary a=1 b=2")],-1),E=a(`<p>if</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">test</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">case</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Comment</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">这是注释</span></span>
<span class="line"><span style="color:#ABB2BF;">    #</span><span style="color:#E06C75;">这也是注释</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">Set</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">variable</span><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">59</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">run</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">keyword</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">}</span><span style="color:#56B6C2;">&gt;=</span><span style="color:#D19A66;">90</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">优秀</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...    </span><span style="color:#E5C07B;">ELSE</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IF</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">}</span><span style="color:#56B6C2;">&gt;=</span><span style="color:#D19A66;">70</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">良好</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...    </span><span style="color:#E5C07B;">ELSE</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IF</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">}</span><span style="color:#56B6C2;">&gt;=</span><span style="color:#D19A66;">60</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">及格</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...    </span><span style="color:#E5C07B;">ELSE</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">不及格</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>for</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">test</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">case</span></span>
<span class="line"><span style="color:#ABB2BF;">    :</span><span style="color:#E5C07B;">FOR</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">}    </span><span style="color:#E5C07B;">IN</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">RANGE</span><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">10</span></span>
<span class="line"><span style="color:#ABB2BF;">    \\    </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>调用模块</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">test</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">case</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Library</span><span style="color:#ABB2BF;">    D:</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">rf_test</span><span style="color:#56B6C2;">/</span><span style="color:#E5C07B;">count</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">py</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">Evaluate</span><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">int</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">Evaluate</span><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">int</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">log</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>pip install --pre --upgrade robotframework-seleniumlibrary</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">***</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Settings</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">***</span></span>
<span class="line"><span style="color:#E06C75;">Documentation</span><span style="color:#ABB2BF;">     </span><span style="color:#E06C75;">Simple</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">example</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">using</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">SeleniumLibrary</span><span style="color:#ABB2BF;">.</span></span>
<span class="line"><span style="color:#E06C75;">Library</span><span style="color:#ABB2BF;">           </span><span style="color:#E06C75;">SeleniumLibrary</span></span>
<span class="line"><span style="color:#56B6C2;">***</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Variables</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">***</span></span>
<span class="line"><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E5C07B;">URL</span><span style="color:#ABB2BF;">}            https:</span><span style="color:#7F848E;font-style:italic;">//www.baidu.com</span></span>
<span class="line"><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E5C07B;">BROWSER</span><span style="color:#ABB2BF;">}        </span><span style="color:#E06C75;">Chrome</span></span>
<span class="line"><span style="color:#56B6C2;">***</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Test</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Cases</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">***</span></span>
<span class="line"><span style="color:#E06C75;">case1</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Open</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Browser</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E5C07B;">URL</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E5C07B;">BROWSER</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">Baidu</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Search</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">robot</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">framework</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">should</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">contain</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">robot</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">framework_百度搜索</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">close</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">browser</span></span>
<span class="line"><span style="color:#E06C75;">case2</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Open</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Browser</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E5C07B;">URL</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E5C07B;">BROWSER</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">Baidu</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Search</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">selenium</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">should</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">contain</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">selenium_百度搜索</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">close</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">browser</span></span>
<span class="line"><span style="color:#56B6C2;">***</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Keywords</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">***</span></span>
<span class="line"><span style="color:#E06C75;">Baidu</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Search</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#E06C75;">Arguments</span><span style="color:#ABB2BF;">]    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">search_key</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Input</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">    id:</span><span style="color:#E06C75;">kw</span><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">search_key</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">click</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">    id:</span><span style="color:#E06C75;">su</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Evaluate</span><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">time</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)    </span><span style="color:#E06C75;">time</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">}    </span><span style="color:#E06C75;">Get</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Title</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#E06C75;">Return</span><span style="color:#ABB2BF;">]    </span><span style="color:#E06C75;">$</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,8);function g(l,m,h,f,v,k){return t(),e("div",null,[c,i,y,s("ul",null,[d,A,u,s("li",null,'const stringWithVars = pm.variables.replaceIn("Hi, my name is '+p(l.$randomFirstName)+'");',1),F]),s("p",null,[s("code",null,p(l.variable),1)]),b,C,E])}const _=o(B,[["render",g]]);export{q as __pageData,_ as default};
